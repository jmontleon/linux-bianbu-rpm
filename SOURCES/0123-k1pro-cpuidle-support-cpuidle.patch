From 0ee74ae8f9c9a59e73c51839e7b8db5edf2719df Mon Sep 17 00:00:00 2001
From: Nell <xianbin.zhu@spacemit.com>
Date: Sat, 23 Sep 2023 12:38:00 +0800
Subject: [PATCH 0123/1202] k1pro:cpuidle: support cpuidle

Change-Id: I586ebcec8e3b03cec44a1845b1bee36b79c14d0e
---
 arch/riscv/Kconfig.socs                  |  1 +
 arch/riscv/boot/dts/spacemit/k1-pro.dtsi | 97 ++++++++++++------------
 drivers/clocksource/dw_apb_timer.c       | 15 ++++
 3 files changed, 63 insertions(+), 50 deletions(-)

diff --git a/arch/riscv/Kconfig.socs b/arch/riscv/Kconfig.socs
index 440b74dab870..5d792399c1c3 100644
--- a/arch/riscv/Kconfig.socs
+++ b/arch/riscv/Kconfig.socs
@@ -119,6 +119,7 @@ choice
 
 	config SOC_SPACEMIT_K1PRO
 		bool "k1-pro"
+		select DW_APB_TIMER_OF
 		help
 		  This enables support for Spacemit k1-pro Platform Hardware.
 
diff --git a/arch/riscv/boot/dts/spacemit/k1-pro.dtsi b/arch/riscv/boot/dts/spacemit/k1-pro.dtsi
index 847168456ed3..8b8e6fdf1727 100644
--- a/arch/riscv/boot/dts/spacemit/k1-pro.dtsi
+++ b/arch/riscv/boot/dts/spacemit/k1-pro.dtsi
@@ -27,7 +27,7 @@ cpu_0: cpu@0 {
 			reg = <0>;
 			status = "okay";
 			compatible = "riscv";
-			riscv,isa = "rv64imafdcvsu_zicsr_zifencei_zicbom_zihintpause_zba_zbb_zbc_zbs_svpbmt";
+			riscv,isa = "rv64imafdcvsu_zicsr_zifencei_zicbom_zihintpause_zba_zbb_zbc_zbs_svpbmt_sstc";
 			riscv,cbom-block-size = <64>;
 			mmu-type = "riscv,sv39";
 			cpu-freq = "1.848Ghz";
@@ -51,7 +51,7 @@ cpu_1: cpu@1 {
 			reg = <1>;
 			status = "okay";
 			compatible = "riscv";
-			riscv,isa = "rv64imafdcvsu_zicsr_zifencei_zicbom_zihintpause_zba_zbb_zbc_zbs_svpbmt";
+			riscv,isa = "rv64imafdcvsu_zicsr_zifencei_zicbom_zihintpause_zba_zbb_zbc_zbs_svpbmt_sstc";
 			riscv,cbom-block-size = <64>;
 			mmu-type = "riscv,sv39";
 			cpu-freq = "1.848Ghz";
@@ -75,7 +75,7 @@ cpu_2: cpu@2 {
 			reg = <2>;
 			status = "okay";
 			compatible = "riscv";
-			riscv,isa = "rv64imafdcvsu_zicsr_zifencei_zicbom_zihintpause_zba_zbb_zbc_zbs_svpbmt";
+			riscv,isa = "rv64imafdcvsu_zicsr_zifencei_zicbom_zihintpause_zba_zbb_zbc_zbs_svpbmt_sstc";
 			riscv,cbom-block-size = <64>;
 			mmu-type = "riscv,sv39";
 			cpu-freq = "1.848Ghz";
@@ -99,7 +99,7 @@ cpu_3: cpu@3 {
 			reg = <3>;
 			status = "okay";
 			compatible = "riscv";
-			riscv,isa = "rv64imafdcvsu_zicsr_zifencei_zicbom_zihintpause_zba_zbb_zbc_zbs_svpbmt";
+			riscv,isa = "rv64imafdcvsu_zicsr_zifencei_zicbom_zihintpause_zba_zbb_zbc_zbs_svpbmt_sstc";
 			riscv,cbom-block-size = <64>;
 			mmu-type = "riscv,sv39";
 			cpu-freq = "1.848Ghz";
@@ -119,97 +119,84 @@ cpu3_intc: interrupt-controller {
 			};
 		};
 
-                cpu-map {
-                        cluster0 {
-                                core0 {
-                                        cpu = <&cpu_0>;
-                                };
-
-                                core1 {
-                                        cpu = <&cpu_1>;
-                                };
-                                core2 {
-                                        cpu = <&cpu_2>;
-                                };
-
-                                core3 {
-                                        cpu = <&cpu_3>;
-                                };
-                        };
-                };
-
 		idle-states {
 			CPU_RET: cpu-ret {
 				compatible = "riscv,idle-state", "domain-idle-state";
 				idle-state-name = "riscv,cpu-ret";
 				riscv,sbi-suspend-param = <0x10000000>;
-				entry-latency-us = <20>;
-				exit-latency-us = <40>;
-				min-residency-us = <80>;
-				local-timer-stop;
+				entry-latency-us = <100>;
+				exit-latency-us = <120>;
+				min-residency-us = <160>;
 			};
 
 			CPU_NONRET: cpu-nonret {
 				compatible = "riscv,idle-state", "domain-idle-state";
 				idle-state-name = "riscv,cpu-nonret";
 				riscv,sbi-suspend-param = <0x90000000>;
-				entry-latency-us = <250>;
+				local-timer-stop;
+				entry-latency-us = <200>;
 				exit-latency-us = <500>;
 				min-residency-us = <950>;
-				local-timer-stop;
-			};
-
-			CLUSTER_RET: cluster-ret {
-				compatible = "domain-idle-state";
-				idle-state-name = "riscv,cluster-ret";
-				riscv,sbi-suspend-param = <0x11000000>;
-				entry-latency-us = <50>;
-				exit-latency-us = <100>;
-				min-residency-us = <250>;
-				wakeup-latency-us = <130>;
-				local-timer-stop;
 			};
 
+/**
+ *			CLUSTER_RET: cluster-ret {
+ *				compatible = "domain-idle-state";
+ *				idle-state-name = "riscv,cluster-ret";
+ *				riscv,sbi-suspend-param = <0x11000000>;
+ *				local-timer-stop;
+ *				entry-latency-us = <50>;
+ *				exit-latency-us = <100>;
+ *				min-residency-us = <250>;
+ *				wakeup-latency-us = <130>;
+ *			};
+ */
 			CLUSTER_NONRET: cluster-nonret {
 				compatible = "domain-idle-state";
 				idle-state-name = "riscv,cluster-nonret";
 				riscv,sbi-suspend-param = <0x91000000>;
+				local-timer-stop;
 				entry-latency-us = <600>;
 				exit-latency-us = <1100>;
 				min-residency-us = <2700>;
 				wakeup-latency-us = <1500>;
-				local-timer-stop;
 			};
 		};
 
 		power-domains {
+
 			CPU_PD0: cpu0 {
 				#power-domain-cells = <0>;
-				power-domains = <&CLUSTER_PD>;
-				domain-idle-states = <&CPU_RET>, <&CPU_NONRET>;
+				power-domains = <&CLUSTER_PD0>;
+				domain-idle-states = <&CPU_RET>,  <&CPU_NONRET>;
 			};
 
 			CPU_PD1: cpu1 {
 				#power-domain-cells = <0>;
-				power-domains = <&CLUSTER_PD>;
-				domain-idle-states =  <&CPU_RET>, <&CPU_NONRET>;
+				power-domains = <&CLUSTER_PD0>;
+				domain-idle-states = <&CPU_RET>, <&CPU_NONRET>;
 			};
 
 			CPU_PD2: cpu2 {
 				#power-domain-cells = <0>;
-				power-domains = <&CLUSTER_PD>;
+				power-domains = <&CLUSTER_PD1>;
 				domain-idle-states = <&CPU_RET>, <&CPU_NONRET>;
 			};
 
 			CPU_PD3: cpu3 {
 				#power-domain-cells = <0>;
-				power-domains = <&CLUSTER_PD>;
-				domain-idle-states =  <&CPU_RET>, <&CPU_NONRET>;
+				power-domains = <&CLUSTER_PD1>;
+				domain-idle-states = <&CPU_RET>, <&CPU_NONRET>;
 			};
 
-			CLUSTER_PD: cpu-cluster0 {
+			CLUSTER_PD0: cpu-cluster0 {
 				#power-domain-cells = <0>;
-				domain-idle-states = <&CLUSTER_RET>, <&CLUSTER_NONRET>;
+				domain-idle-states = /* <&CLUSTER_RET>, */  <&CLUSTER_NONRET>;
+			};
+
+			CLUSTER_PD1: cpu-cluster1 {
+				#power-domain-cells = <0>;
+				domain-idle-states = /* <&CLUSTER_RET>, */  <&CLUSTER_NONRET>;
 			};
 		};
 	};
@@ -342,6 +329,16 @@ &cpu3_intc 0xffffffff &cpu3_intc 9
 			riscv,ndev = <159>;
 		};
 
+                broadcast_timer: broadcast_timer@2cfa0000 {
+                        compatible = "snps,dw-apb-timer";
+                        reg = <0x0 0x2cfa0000 0x0 0x14>;
+                        interrupt-parent = <&intc>;
+                        interrupts = <16>;
+                        clock-frequency = "50000000";
+                        resets = <&reset RESET_TIMER>;
+                        status = "okay";
+                };
+
 		/* Normal serial, log */
 		uart0: serial@2cea0000 {
 			compatible = "snps,dw-apb-uart";
diff --git a/drivers/clocksource/dw_apb_timer.c b/drivers/clocksource/dw_apb_timer.c
index 3a55ae5fe225..8e53d2362376 100644
--- a/drivers/clocksource/dw_apb_timer.c
+++ b/drivers/clocksource/dw_apb_timer.c
@@ -75,6 +75,7 @@ static void apbt_eoi(struct dw_apb_timer *timer)
 
 static irqreturn_t dw_apb_clockevent_irq(int irq, void *data)
 {
+	u32 ctrl;
 	struct clock_event_device *evt = data;
 	struct dw_apb_clock_event_device *dw_ced = ced_to_dw_apb_ced(evt);
 
@@ -86,6 +87,15 @@ static irqreturn_t dw_apb_clockevent_irq(int irq, void *data)
 	if (dw_ced->eoi)
 		dw_ced->eoi(&dw_ced->timer);
 
+	/* disable the timer & interrupt in one-shot mode */
+	ctrl = apbt_readl(&dw_ced->timer, APBTMR_N_CONTROL);
+	if (!(ctrl & APBTMR_CONTROL_MODE_PERIODIC)) {
+		ctrl = apbt_readl_relaxed(&dw_ced->timer, APBTMR_N_CONTROL);
+		ctrl &= ~APBTMR_CONTROL_ENABLE;
+		ctrl |= APBTMR_CONTROL_INT;
+		apbt_writel_relaxed(&dw_ced->timer, ctrl, APBTMR_N_CONTROL);
+	}
+
 	evt->event_handler(evt);
 	return IRQ_HANDLED;
 }
@@ -192,9 +202,14 @@ static int apbt_next_event(unsigned long delta,
 	ctrl = apbt_readl_relaxed(&dw_ced->timer, APBTMR_N_CONTROL);
 	ctrl &= ~APBTMR_CONTROL_ENABLE;
 	apbt_writel_relaxed(&dw_ced->timer, ctrl, APBTMR_N_CONTROL);
+
+	/* clear the pending */
+	apbt_readl_relaxed(&dw_ced->timer, APBTMR_N_EOI);
+
 	/* write new count */
 	apbt_writel_relaxed(&dw_ced->timer, delta, APBTMR_N_LOAD_COUNT);
 	ctrl |= APBTMR_CONTROL_ENABLE;
+	ctrl &= ~APBTMR_CONTROL_INT;
 	apbt_writel_relaxed(&dw_ced->timer, ctrl, APBTMR_N_CONTROL);
 
 	return 0;
-- 
2.47.0

