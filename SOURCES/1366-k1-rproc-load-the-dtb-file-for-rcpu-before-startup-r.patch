From cdefc12d5f717fa0bf341a838e3a5be27057d606 Mon Sep 17 00:00:00 2001
From: Nell <xianbin.zhu@spacemit.com>
Date: Wed, 4 Dec 2024 12:40:39 +0800
Subject: [PATCH 1366/1451] k1:rproc:load the dtb file for rcpu before startup
 rcpu

Change-Id: I5b8cfee2fcfc81730db7716ea4a25e1c4b4ff0dd
---
 drivers/remoteproc/k1x-rproc.c | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

diff --git a/drivers/remoteproc/k1x-rproc.c b/drivers/remoteproc/k1x-rproc.c
index 034557790292..ccfd3bef6b41 100644
--- a/drivers/remoteproc/k1x-rproc.c
+++ b/drivers/remoteproc/k1x-rproc.c
@@ -24,6 +24,7 @@
 #include <linux/pm_qos.h>
 #include <linux/delay.h>
 #include <linux/syscore_ops.h>
+#include <linux/fs.h>
 #include <linux/pm_domain.h>
 #include <linux/dma-map-ops.h>
 #include <linux/dma-direction.h>
@@ -192,8 +193,28 @@ static int spacemit_rproc_prepare(struct rproc *rproc)
 
 static int spacemit_rproc_start(struct rproc *rproc)
 {
+	loff_t pos = 0;
+	struct file *dtb;
+	const char *dtb_path = "/lib/firmware/dtb.dtb";
+	struct rproc_mem_entry *rcpu_dtb_mem;
 	struct spacemit_rproc *priv = rproc->priv;
 
+	/* load the dtb file of rcpu */
+	rcpu_dtb_mem = rproc_find_carveout_by_name(rproc, "rcpu_mem_dtb");
+	if (!rcpu_dtb_mem) {
+		pr_info("Failed to find the rcpu_dtb_mem\n");
+		/* do not need to dealing with this situation */
+	} else {
+		dtb = filp_open(dtb_path, O_RDWR, 0644);
+		if (IS_ERR(dtb)) {
+			pr_err("filp open %s failed\n", dtb_path);
+			return -1;
+		}
+
+		kernel_read(dtb, rcpu_dtb_mem->va, dtb->f_inode->i_size, &pos);
+		filp_close(dtb, NULL);
+	}
+
 	/* enable ipc2ap clk & reset--> rcpu side */
 	writel(0xff, priv->base[BOOTC_MEM_BASE_OFFSET] + ESOS_AON_PER_CLK_RST_CTL_REG);
 
-- 
2.47.0

