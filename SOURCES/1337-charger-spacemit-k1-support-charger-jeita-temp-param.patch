From de945787ebd0ea44d8880478e2b881d7fcdafdf1 Mon Sep 17 00:00:00 2001
From: yanhaodong <haodong.yan@spacemit.com>
Date: Tue, 10 Dec 2024 09:06:25 +0800
Subject: [PATCH 1337/1448] charger: spacemit/k1: support charger jeita temp
 parameters

Change-Id: Ifcf10fbb2ff4055e7f274f442ee7ef5f78447b34
---
 drivers/power/supply/sgm4154x_charger.c | 146 ++++++++++++++++++------
 drivers/power/supply/sgm4154x_charger.h |  37 ++++--
 2 files changed, 138 insertions(+), 45 deletions(-)

diff --git a/drivers/power/supply/sgm4154x_charger.c b/drivers/power/supply/sgm4154x_charger.c
index beb560de834a..434642ecf6bd 100644
--- a/drivers/power/supply/sgm4154x_charger.c
+++ b/drivers/power/supply/sgm4154x_charger.c
@@ -285,6 +285,100 @@ static int sgm4154x_set_chrg_volt(struct sgm4154x_device *sgm, int chrg_volt)
 
 	return ret;
 }
+
+static int sgm4154x_set_jeita_config(struct sgm4154x_device *sgm)
+{
+	int ret, i;
+	int reg_val;
+
+	for(i = 0;i < JEITA_TEMP_T2_LEVEL;i++)
+		if (sgm->data.temp_t2_thres == jeita_cool_thres[i]) {
+			reg_val = i << 2;
+			ret = regmap_update_bits(sgm->regmap, SGM4154x_CHRG_CTRL_c,
+					JEITA_TEMP_T2_SET_MASK, reg_val);
+			if (ret < 0)
+				return ret;
+			break;
+		}
+	if (i == JEITA_TEMP_T2_LEVEL) {
+		pr_err("%s: jeita T2 temp wrong value.Please use the specified value\n",__func__);
+		return -EINVAL;
+	}
+
+	for(i = 0;i < JEITA_TEMP_T3_LEVEL;i++)
+		if (sgm->data.temp_t3_thres == jeita_warm_thres[i]) {
+			reg_val = i;
+			ret = regmap_update_bits(sgm->regmap, SGM4154x_CHRG_CTRL_c,
+					JEITA_TEMP_T3_SET_MASK, reg_val);
+			if(ret < 0)
+				return ret;
+			break;
+		}
+	if (i == JEITA_TEMP_T3_LEVEL) {
+		pr_err("%s: jeita T3 temp wrong value.Please use the specified value\n",__func__);
+		return -EINVAL;
+	}
+
+	for(i = 0;i < JEITA_CUR_T2_LEVEL;i++)
+		if ((sgm->data.jeita_temp_t1_to_t2_cc_current * 100 / sgm->data.jeita_temp_t2_to_t3_cc_current)
+				== jeita_cool_cur_perc[i]) {
+			reg_val = i;
+			regmap_update_bits(sgm->regmap, SGM4154x_CHRG_CTRL_c,
+					JEITA_CUR_T2_EN_MASK, 1 << 6);
+			ret = regmap_update_bits(sgm->regmap, SGM4154x_CHRG_CTRL_5,
+					JEITA_CUR_T2_SET_MASK, reg_val);
+			if (ret < 0)
+				return ret;
+			break;
+		}
+	if (i == JEITA_CUR_T2_LEVEL) {
+		pr_err("%s: jeita T1-T2 charge current wrong value.Please use the specified value\n",__func__);
+		return -EINVAL;
+	}
+
+	for(i = 0;i < JEITA_CUR_T3_LEVEL;i++)
+		if ((sgm->data.jeita_temp_t3_to_t4_cc_current * 100 / sgm->data.jeita_temp_t2_to_t3_cc_current)
+				== jeita_warm_cur_perc[i]) {
+			reg_val = i << 4;
+			ret = regmap_update_bits(sgm->regmap, SGM4154x_CHRG_CTRL_c,
+					JEITA_CUR_T3_SET_MASK, reg_val);
+			if (ret < 0)
+				return ret;
+			break;
+		}
+	if (i == JEITA_CUR_T3_LEVEL) {
+		pr_err("%s: jeita T3-T4 charge current wrong value.Please use the specified value\n",__func__);
+		return -EINVAL;
+	}
+
+	if (sgm->data.jeita_temp_t3_to_t4_cv == sgm->data.jeita_temp_t2_to_t3_cv)
+		reg_val = JEITA_TEMP_NORMAL_CV_H;
+	else if (sgm->data.jeita_temp_t3_to_t4_cv < sgm->data.jeita_temp_t2_to_t3_cv)
+		reg_val = JEITA_TEMP_LOW_CV_H;
+	else {
+		pr_err("%s: jeita T3 charge voltage wrong value.Please use the specified value\n",__func__);
+		return -EINVAL;
+	}
+	ret = regmap_update_bits(sgm->regmap, SGM4154x_CHRG_CTRL_7,
+			JEITA_TEMP_CV_H_MASK, reg_val << 4);
+	if (ret < 0)
+		return ret;
+
+	if (sgm->data.jeita_temp_t1_to_t2_cv == sgm->data.jeita_temp_t2_to_t3_cv)
+		reg_val = JEITA_TEMP_NORMAL_CV_L;
+	else if (sgm->data.jeita_temp_t1_to_t2_cv < sgm->data.jeita_temp_t2_to_t3_cv)
+		reg_val = JEITA_TEMP_LOW_CV_L;
+	else {
+		pr_err("%s: jeita T1 charge voltage wrong value.Please use the specified value\n",__func__);
+		return -EINVAL;
+	}
+	ret = regmap_update_bits(sgm->regmap, SGM4154x_CHRG_CTRL_c,
+			JEITA_TEMP_CV_L_MASK, reg_val << 7);
+	if (ret < 0)
+		return ret;
+
+	return ret;
+}
 #if 0
 static int sgm4154x_get_chrg_volt(struct sgm4154x_device *sgm)
 {
@@ -1432,6 +1526,12 @@ static int sgm4154x_hw_init(struct sgm4154x_device *sgm)
 	if (ret)
 		goto err_out;
 
+	if (sgm->enable_sw_jeita) {
+		ret = sgm4154x_set_jeita_config(sgm);
+		if (ret)
+			goto err_out;
+	}
+
 	dev_dbg(sgm->dev, "ichrg_curr:%d prechrg_curr:%d chrg_vol:%d"
 		" term_curr:%d input_curr_lim:%d",
 		bat_info.constant_charge_current_max_ua,
@@ -1547,23 +1647,16 @@ static int sgm4154x_parse_dt(struct sgm4154x_device *sgm)
 		sgm->data.jeita_temp_t1_to_t2_cv = JEITA_TEMP_T1_TO_T2_CV;
 	}
 
-	if (of_property_read_u32(sgm->dev->of_node, "jeita_temp_t0_to_t1_cv", &val) >= 0)
-		sgm->data.jeita_temp_t0_to_t1_cv = val;
-	else {
-		dev_err(sgm->dev, "use default JEITA_TEMP_T0_TO_T1_CV:%d\n",JEITA_TEMP_T0_TO_T1_CV);
-		sgm->data.jeita_temp_t0_to_t1_cv = JEITA_TEMP_T0_TO_T1_CV;
-	}
-
-	if (of_property_read_u32(sgm->dev->of_node, "jeita_temp_below_t0_cv", &val) >= 0)
-		sgm->data.jeita_temp_below_t0_cv = val;
+	if (of_property_read_u32(sgm->dev->of_node, "jeita_temp_below_t1_cv", &val) >= 0)
+		sgm->data.jeita_temp_below_t1_cv = val;
 	else {
-		dev_err(sgm->dev, "use default JEITA_TEMP_BELOW_T0_CV:%d\n",JEITA_TEMP_BELOW_T0_CV);
-		sgm->data.jeita_temp_below_t0_cv = JEITA_TEMP_BELOW_T0_CV;
+		dev_err(sgm->dev, "use default JEITA_TEMP_BELOW_T1_CV:%d\n",JEITA_TEMP_BELOW_T1_CV);
+		sgm->data.jeita_temp_below_t1_cv = JEITA_TEMP_BELOW_T1_CV;
 	}
-	pr_err("%s,enable_sw_jeita = %d,CV1 = %d,CV2 = %d,CV3 = %d,CV4 = %d,CV5 = %d,CV6 = %d\n",__func__,
+	pr_err("%s,enable_sw_jeita = %d,CV1 = %d,CV2 = %d,CV3 = %d,CV4 = %d,CV5 = %d\n",__func__,
 			sgm->enable_sw_jeita,sgm->data.jeita_temp_above_t4_cv,sgm->data.jeita_temp_t3_to_t4_cv,
 			sgm->data.jeita_temp_t2_to_t3_cv,sgm->data.jeita_temp_t1_to_t2_cv,
-			sgm->data.jeita_temp_t0_to_t1_cv,sgm->data.jeita_temp_below_t0_cv);
+			sgm->data.jeita_temp_below_t1_cv);
 
 	if (of_property_read_u32(sgm->dev->of_node, "jeita_temp_above_t4_cc_current", &val) >= 0)
 		sgm->data.jeita_temp_above_t4_cc_current = val;
@@ -1583,15 +1676,15 @@ static int sgm4154x_parse_dt(struct sgm4154x_device *sgm)
 	else
 		sgm->data.jeita_temp_t1_to_t2_cc_current = JEITA_TEMP_T1_TO_T2_CC_CURRENT;
 
-	if (of_property_read_u32(sgm->dev->of_node, "jeita_temp_below_t0_cc_current", &val) >= 0)
-		sgm->data.jeita_temp_below_t0_cc_current = val;
+	if (of_property_read_u32(sgm->dev->of_node, "jeita_temp_below_t1_cc_current", &val) >= 0)
+		sgm->data.jeita_temp_below_t1_cc_current = val;
 	else
-		sgm->data.jeita_temp_below_t0_cc_current = JEITA_TEMP_BELOW_T0_CC_CURRENT;
+		sgm->data.jeita_temp_below_t1_cc_current = JEITA_TEMP_BELOW_T1_CC_CURRENT;
 
 	pr_err("%s,CC1 = %d,CC2 = %d,CC3 = %d,CC4 = %d,CC5 = %d\n",__func__,
 			sgm->data.jeita_temp_above_t4_cc_current,sgm->data.jeita_temp_t3_to_t4_cc_current,
 			sgm->data.jeita_temp_t2_to_t3_cc_current,sgm->data.jeita_temp_t1_to_t2_cc_current,
-			sgm->data.jeita_temp_below_t0_cc_current);
+			sgm->data.jeita_temp_below_t1_cc_current);
 
 	if (of_property_read_u32(sgm->dev->of_node, "temp_t4_thres", &val) >= 0)
 		sgm->data.temp_t4_thres = val;
@@ -1648,30 +1741,15 @@ static int sgm4154x_parse_dt(struct sgm4154x_device *sgm)
 		sgm->data.temp_t1_thres_plus_x_degree = TEMP_T1_THRES_PLUS_X_DEGREE;
 	}
 
-	if (of_property_read_u32(sgm->dev->of_node, "temp_t0_thres", &val) >= 0)
-		sgm->data.temp_t0_thres = val;
-	else {
-		dev_err(sgm->dev,"use default TEMP_T0_THRES:%d\n",TEMP_T0_THRES);
-		sgm->data.temp_t0_thres = TEMP_T0_THRES;
-	}
-
-	if (of_property_read_u32(sgm->dev->of_node, "temp_t0_thres_plus_x_degree", &val) >= 0)
-		sgm->data.temp_t0_thres_plus_x_degree = val;
-	else {
-		dev_err(sgm->dev,"use default TEMP_T0_THRES_PLUS_X_DEGREE:%d\n",TEMP_T0_THRES_PLUS_X_DEGREE);
-		sgm->data.temp_t0_thres_plus_x_degree = TEMP_T0_THRES_PLUS_X_DEGREE;
-	}
-
 	if (of_property_read_u32(sgm->dev->of_node, "temp_neg_10_thres", &val) >= 0)
 		sgm->data.temp_neg_10_thres = val;
 	else {
 		dev_err(sgm->dev,"use default TEMP_NEG_10_THRES:%d\n",TEMP_NEG_10_THRES);
 		sgm->data.temp_neg_10_thres = TEMP_NEG_10_THRES;
 	}
-	pr_err("%s,thres4 = %d,thres3 = %d,thres2 = %d,thres1 = %d,thres0 = %d\n",__func__,
+	pr_err("%s,thres4 = %d,thres3 = %d,thres2 = %d,thres1 = %d\n",__func__,
 			sgm->data.temp_t4_thres,sgm->data.temp_t3_thres,
-			sgm->data.temp_t2_thres,sgm->data.temp_t1_thres,
-			sgm->data.temp_t0_thres);
+			sgm->data.temp_t2_thres,sgm->data.temp_t1_thres);
 	return 0;
 }
 
diff --git a/drivers/power/supply/sgm4154x_charger.h b/drivers/power/supply/sgm4154x_charger.h
index e0c1eeacea4d..5af22f343731 100644
--- a/drivers/power/supply/sgm4154x_charger.h
+++ b/drivers/power/supply/sgm4154x_charger.h
@@ -213,15 +213,30 @@
 #define JEITA_TEMP_T3_TO_T4_CV	4100000
 #define JEITA_TEMP_T2_TO_T3_CV	4350000
 #define JEITA_TEMP_T1_TO_T2_CV	4350000
-#define JEITA_TEMP_T0_TO_T1_CV	0
-#define JEITA_TEMP_BELOW_T0_CV	0
+#define JEITA_TEMP_BELOW_T1_CV	0
+#define JEITA_TEMP_LOW_CV	4100000
+#define JEITA_TEMP_NORMAL_CV_H	1
+#define JEITA_TEMP_NORMAL_CV_L	0
+#define JEITA_TEMP_LOW_CV_H	0
+#define JEITA_TEMP_LOW_CV_L	1
+#define JEITA_TEMP_CV_H_MASK	BIT(4)
+#define JEITA_TEMP_CV_L_MASK	BIT(7)
+
+#define JEITA_TEMP_T2_LEVEL	4
+#define JEITA_TEMP_T3_LEVEL	4
+#define JEITA_TEMP_T2_SET_MASK	GENMASK(3, 2)
+#define JEITA_TEMP_T3_SET_MASK	GENMASK(1, 0)
 
 #define JEITA_TEMP_ABOVE_T4_CC_CURRENT	0
 #define JEITA_TEMP_T3_TO_T4_CC_CURRENT	1000000
 #define JEITA_TEMP_T2_TO_T3_CC_CURRENT	2400000
 #define JEITA_TEMP_T1_TO_T2_CC_CURRENT	2000000
-#define JEITA_TEMP_T0_TO_T1_CC_CURRENT	0
-#define JEITA_TEMP_BELOW_T0_CC_CURRENT	0
+#define JEITA_TEMP_BELOW_T1_CC_CURRENT	0
+#define JEITA_CUR_T2_LEVEL		2
+#define JEITA_CUR_T2_EN_MASK		BIT(6)
+#define JEITA_CUR_T2_SET_MASK		BIT(0)
+#define JEITA_CUR_T3_LEVEL		4
+#define JEITA_CUR_T3_SET_MASK		GENMASK(5, 4)
 
 #define TEMP_T4_THRES  50
 #define TEMP_T4_THRES_MINUS_X_DEGREE 47
@@ -231,10 +246,13 @@
 #define TEMP_T2_THRES_PLUS_X_DEGREE 16
 #define TEMP_T1_THRES  0
 #define TEMP_T1_THRES_PLUS_X_DEGREE 6
-#define TEMP_T0_THRES  0
-#define TEMP_T0_THRES_PLUS_X_DEGREE  0
 #define TEMP_NEG_10_THRES 0
 
+static int jeita_cool_thres[JEITA_TEMP_T2_LEVEL] = {5, 10, 15, 20};
+static int jeita_warm_thres[JEITA_TEMP_T3_LEVEL] = {40, 45, 50, 55};
+static int jeita_cool_cur_perc[JEITA_CUR_T2_LEVEL] = {50, 20};
+static int jeita_warm_cur_perc[JEITA_CUR_T3_LEVEL] = {0, 20, 50, 100};
+
 struct sgm4154x_init_data {
 	u32 ichg;	/* charge current		*/
 	u32 ilim;	/* input current		*/
@@ -267,13 +285,12 @@ struct sgm4154x_jeita {
 	int jeita_temp_t3_to_t4_cv;
 	int jeita_temp_t2_to_t3_cv;
 	int jeita_temp_t1_to_t2_cv;
-	int jeita_temp_t0_to_t1_cv;
-	int jeita_temp_below_t0_cv;
+	int jeita_temp_below_t1_cv;
 	int jeita_temp_above_t4_cc_current;
 	int jeita_temp_t3_to_t4_cc_current;
 	int jeita_temp_t2_to_t3_cc_current;
 	int jeita_temp_t1_to_t2_cc_current;
-	int jeita_temp_below_t0_cc_current;
+	int jeita_temp_below_t1_cc_current;
 	int temp_t4_thres;
 	int temp_t4_thres_minus_x_degree;
 	int temp_t3_thres;
@@ -282,8 +299,6 @@ struct sgm4154x_jeita {
 	int temp_t2_thres_plus_x_degree;
 	int temp_t1_thres;
 	int temp_t1_thres_plus_x_degree;
-	int temp_t0_thres;
-	int temp_t0_thres_plus_x_degree;
 	int temp_neg_10_thres;
 };
 
-- 
2.47.0

