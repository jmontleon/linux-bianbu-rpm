From 554977533a972d62fe7c395f6cb3d8b406f6b3c3 Mon Sep 17 00:00:00 2001
From: fuqiang <qiang.fu@spacemit.com>
Date: Sat, 12 Aug 2023 10:34:02 +0800
Subject: [PATCH 0082/1202] update vpu driver

1.disable VIDEO_LINLON by default
2.add severity and drain debug node
3.linlon vpu custom controls start from V4L2_CTRL_CLASS_CODEC+0x2000, not V4L2_CTRL_CLASS_JPEG+0x2000
4.update linlon vpu ext interface
5.update linlon vpu dev caps
6.fix:multi session decode fail before "crng init done"

Signed-off-by: fuqiang <qiang.fu@spacemit.com>
Change-Id: I1ca624604136733aa3e04e81cd5836a2643811c2
---
 drivers/media/vpu/Kconfig                     | 13 ++++-
 drivers/media/vpu/if/mvx_firmware_cache.c     | 31 ++++++++--
 drivers/media/vpu/if/mvx_if.c                 |  2 +-
 drivers/media/vpu/if/mvx_mmu.c                |  4 +-
 drivers/media/vpu/if/v4l2/mvx-v4l2-controls.h |  2 +-
 drivers/media/vpu/if/v4l2/mvx_ext_v4l2.c      | 17 ++++--
 drivers/media/vpu/if/v4l2/mvx_v4l2_buffer.c   |  2 +-
 drivers/media/vpu/if/v4l2/mvx_v4l2_session.c  |  4 +-
 drivers/media/vpu/if/v4l2/mvx_v4l2_vidioc.c   | 56 +++++++++++++++++++
 drivers/media/vpu/if/v4l2/mvx_v4l2_vidioc.h   | 10 +++-
 drivers/media/vpu/mvx_log.c                   | 17 ++----
 drivers/media/vpu/mvx_log.h                   |  2 +-
 drivers/media/vpu/mvx_log_group.c             |  2 +-
 include/media/v4l2-ioctl.h                    |  8 ---
 14 files changed, 125 insertions(+), 45 deletions(-)

diff --git a/drivers/media/vpu/Kconfig b/drivers/media/vpu/Kconfig
index ff68fd869afe..f2bc23094530 100755
--- a/drivers/media/vpu/Kconfig
+++ b/drivers/media/vpu/Kconfig
@@ -1,16 +1,25 @@
 config VIDEO_LINLON
 	tristate "Linlon VPU support."
+	depends on VIDEO_DEV
+	select VIDEOBUF2_VMALLOC
+	select VIDEOBUF2_CORE
+	select DMA_SHARED_BUFFER
 	select VIDEOBUF2_MEMOPS
 	select VIDEOBUF2_DMA_SG
-	depends on VIDEO_DEV
-	default y
+	default n
+	help
+		This enables support for the Linlon VPU family.
 
 config VIDEO_LINLON_FTRACE
 	depends on VIDEO_LINLON
 	bool "Send kernel space logs to ftrace."
 	default n
+	help
+		Send kernel space logs to ftrace.
 
 config VIDEO_LINLON_PRINT_FILE
 	depends on VIDEO_LINLON
 	bool "Append file and line number to kernel space log messages."
 	default y
+	help
+		Append file and line number to kernel space log messages.
diff --git a/drivers/media/vpu/if/mvx_firmware_cache.c b/drivers/media/vpu/if/mvx_firmware_cache.c
index d8e5eced7dab..7b656a64cf51 100755
--- a/drivers/media/vpu/if/mvx_firmware_cache.c
+++ b/drivers/media/vpu/if/mvx_firmware_cache.c
@@ -409,21 +409,31 @@ static ssize_t dirty_show(struct kobject *kobj,
 
 static struct kobj_attribute path_attr = __ATTR_RO(path);
 static struct kobj_attribute count_attr = __ATTR_RO(count);
-static struct kobj_attribute hw_ver = __ATTR_RO(hw_ver);
+static struct kobj_attribute hw_ver_attr = __ATTR_RO(hw_ver);
 static struct kobj_attribute dirty_attr = __ATTR_RO(dirty);
 
 static struct attribute *fw_bin_attrs[] = {
 	&path_attr.attr,
 	&count_attr.attr,
-	&hw_ver.attr,
+	&hw_ver_attr.attr,
 	&dirty_attr.attr,
 	NULL
 };
 
+static const struct attribute_group fw_bin_group = {
+	.name = "",
+	.attrs = fw_bin_attrs
+};
+
+static const struct attribute_group *fw_bin_groups[] = {
+	&fw_bin_group,
+	NULL
+};
+
 static struct kobj_type fw_bin_ktype = {
 	.release       = fw_bin_destroy,
 	.sysfs_ops     = &kobj_sysfs_ops,
-	//.default_attrs = fw_bin_attrs
+	.default_groups = fw_bin_groups
 };
 
 /**
@@ -458,7 +468,7 @@ static struct mvx_fw_bin *fw_bin_create(struct mvx_fw_cache *cache,
 		fw_bin->secure.secure = cache->secure;
 
 	ret = kobject_init_and_add(&fw_bin->kobj, &fw_bin_ktype, &cache->kobj,
-				   "%p", fw_bin);
+				   "%lx", (unsigned long)fw_bin);
 	if (ret != 0)
 		goto free_fw_bin;
 
@@ -586,11 +596,22 @@ static ssize_t cache_flush_store(struct kobject *kobj,
 static struct kobj_attribute cache_flush =
 	__ATTR(flush, 0600, cache_flush_show, cache_flush_store);
 
+
 static struct attribute *cache_attrs[] = {
 	&cache_flush.attr,
 	NULL
 };
 
+static const struct attribute_group cache_group = {
+	.name = "",
+	.attrs = cache_attrs
+};
+
+static const struct attribute_group *cache_groups[] = {
+	&cache_group,
+	NULL
+};
+
 static void cache_release(struct kobject *kobj)
 {
 	struct mvx_fw_cache *cache = kobj_to_fw_cache(kobj);
@@ -602,7 +623,7 @@ static void cache_release(struct kobject *kobj)
 static struct kobj_type cache_ktype = {
 	.release       = cache_release,
 	.sysfs_ops     = &kobj_sysfs_ops,
-	//.default_attrs = cache_attrs
+	.default_groups = cache_groups
 };
 
 static void cache_update(struct mvx_fw_cache *cache)
diff --git a/drivers/media/vpu/if/mvx_if.c b/drivers/media/vpu/if/mvx_if.c
index 8cd27860b1c8..d8dba8a1e942 100755
--- a/drivers/media/vpu/if/mvx_if.c
+++ b/drivers/media/vpu/if/mvx_if.c
@@ -33,9 +33,9 @@
  * Includes
  ****************************************************************************/
 
-#include <linux/version.h>
 #include <linux/debugfs.h>
 #include <linux/device.h>
+#include <linux/version.h>
 #include <linux/dma-mapping.h>
 #include <linux/export.h>
 #include <linux/platform_device.h>
diff --git a/drivers/media/vpu/if/mvx_mmu.c b/drivers/media/vpu/if/mvx_mmu.c
index ff39537d6c74..68ab5bebb774 100755
--- a/drivers/media/vpu/if/mvx_mmu.c
+++ b/drivers/media/vpu/if/mvx_mmu.c
@@ -421,7 +421,7 @@ static int append_sg_table(struct mvx_mmu_pages *pages,
 			   struct sg_table *sgt)
 {
 	size_t count;
-	struct sg_page_iter piter;
+	struct sg_dma_page_iter piter;
 
 	count = get_sg_table_npages(sgt) * MVX_PAGES_PER_PAGE;
 
@@ -432,7 +432,7 @@ static int append_sg_table(struct mvx_mmu_pages *pages,
 		return -ENOMEM;
 	}
 
-	for_each_sg_page(sgt->sgl, &piter, sgt->nents, 0) {
+	for_each_sg_dma_page(sgt->sgl, &piter, sgt->nents, 0) {
 		int j;
 		phys_addr_t base;
 
diff --git a/drivers/media/vpu/if/v4l2/mvx-v4l2-controls.h b/drivers/media/vpu/if/v4l2/mvx-v4l2-controls.h
index 63cd4df6cb24..658248f09ac4 100755
--- a/drivers/media/vpu/if/v4l2/mvx-v4l2-controls.h
+++ b/drivers/media/vpu/if/v4l2/mvx-v4l2-controls.h
@@ -339,7 +339,7 @@ struct v4l2_mvx_long_term_ref
  * Video for Linux 2 custom controls.
  */
 enum v4l2_cid_mve_video {
-	V4L2_CID_MVE_VIDEO_FRAME_RATE = V4L2_CTRL_CLASS_JPEG + 0x2000,
+	V4L2_CID_MVE_VIDEO_FRAME_RATE = V4L2_CTRL_CLASS_CODEC + 0x2000,
 	V4L2_CID_MVE_VIDEO_NALU_FORMAT,
 	V4L2_CID_MVE_VIDEO_STREAM_ESCAPING,
 	V4L2_CID_MVE_VIDEO_H265_PROFILE,
diff --git a/drivers/media/vpu/if/v4l2/mvx_ext_v4l2.c b/drivers/media/vpu/if/v4l2/mvx_ext_v4l2.c
index 4e49976cd1aa..cbf644a6d76f 100755
--- a/drivers/media/vpu/if/v4l2/mvx_ext_v4l2.c
+++ b/drivers/media/vpu/if/v4l2/mvx_ext_v4l2.c
@@ -69,8 +69,8 @@ static const struct v4l2_ioctl_ops mvx_v4l2_ioctl_ops = {
 	.vidioc_querycap                = mvx_v4l2_vidioc_querycap,
 	.vidioc_enum_fmt_vid_cap        = mvx_v4l2_vidioc_enum_fmt_vid_cap,
 	.vidioc_enum_fmt_vid_out        = mvx_v4l2_vidioc_enum_fmt_vid_out,
-	.vidioc_enum_fmt_vid_cap_mplane = mvx_v4l2_vidioc_enum_fmt_vid_cap,
-	.vidioc_enum_fmt_vid_out_mplane = mvx_v4l2_vidioc_enum_fmt_vid_out,
+	//.vidioc_enum_fmt_vid_cap_mplane = mvx_v4l2_vidioc_enum_fmt_vid_cap,
+	//.vidioc_enum_fmt_vid_out_mplane = mvx_v4l2_vidioc_enum_fmt_vid_out,
 	.vidioc_enum_framesizes         = mvx_v4l2_vidioc_enum_framesizes,
 	.vidioc_g_fmt_vid_cap           = mvx_v4l2_vidioc_g_fmt_vid_cap,
 	.vidioc_g_fmt_vid_cap_mplane    = mvx_v4l2_vidioc_g_fmt_vid_cap,
@@ -84,7 +84,8 @@ static const struct v4l2_ioctl_ops mvx_v4l2_ioctl_ops = {
 	.vidioc_try_fmt_vid_cap_mplane  = mvx_v4l2_vidioc_try_fmt_vid_cap,
 	.vidioc_try_fmt_vid_out         = mvx_v4l2_vidioc_try_fmt_vid_out,
 	.vidioc_try_fmt_vid_out_mplane  = mvx_v4l2_vidioc_try_fmt_vid_out,
-	.vidioc_g_crop                  = mvx_v4l2_vidioc_g_crop,
+	.vidioc_g_selection                  = mvx_v4l2_vidioc_g_selection,
+	.vidioc_s_selection             = mvx_v4l2_vidioc_s_selection,
 	.vidioc_streamon                = mvx_v4l2_vidioc_streamon,
 	.vidioc_streamoff               = mvx_v4l2_vidioc_streamoff,
 	.vidioc_encoder_cmd             = mvx_v4l2_vidioc_encoder_cmd,
@@ -98,7 +99,9 @@ static const struct v4l2_ioctl_ops mvx_v4l2_ioctl_ops = {
 	.vidioc_dqbuf                   = mvx_v4l2_vidioc_dqbuf,
 	.vidioc_subscribe_event         = mvx_v4l2_vidioc_subscribe_event,
 	.vidioc_unsubscribe_event       = v4l2_event_unsubscribe,
-	.vidioc_default                 = mvx_v4l2_vidioc_default
+	.vidioc_default                 = mvx_v4l2_vidioc_default,
+	.vidioc_g_parm = mvx_v4l2_vidioc_g_parm,
+	.vidioc_s_parm = mvx_v4l2_vidioc_s_parm,
 };
 
 /****************************************************************************
@@ -137,10 +140,12 @@ int mvx_ext_if_construct(struct mvx_ext_if *ext,
 	ext->vdev.release = video_device_release_empty;
 	ext->vdev.vfl_dir = VFL_DIR_M2M;
 	ext->vdev.v4l2_dev = &ext->v4l2_dev;
+	ext->vdev.device_caps = V4L2_CAP_VIDEO_M2M |
+			V4L2_CAP_VIDEO_M2M_MPLANE |
+			V4L2_CAP_EXT_PIX_FORMAT |
+			V4L2_CAP_STREAMING;
 	strncpy(ext->vdev.name, name, sizeof(ext->vdev.name));
-
 	video_set_drvdata(&ext->vdev, ext);
-	ext->vdev.device_caps = V4L2_CAP_VIDEO_OUTPUT | V4L2_CAP_VIDEO_CAPTURE | V4L2_CAP_VIDEO_OUTPUT_MPLANE | V4L2_CAP_VIDEO_CAPTURE_MPLANE;
 
 	ret = video_register_device(&ext->vdev, VFL_TYPE_VIDEO, -1);
 	if (ret != 0) {
diff --git a/drivers/media/vpu/if/v4l2/mvx_v4l2_buffer.c b/drivers/media/vpu/if/v4l2/mvx_v4l2_buffer.c
index da602881b63f..a3010dd57622 100755
--- a/drivers/media/vpu/if/v4l2/mvx_v4l2_buffer.c
+++ b/drivers/media/vpu/if/v4l2/mvx_v4l2_buffer.c
@@ -29,9 +29,9 @@
  * 
  */
 
-#include <linux/version.h>
 #include <linux/debugfs.h>
 #include <linux/time.h>
+#include <linux/version.h>
 #include "mvx_ext_if.h"
 #include "mvx_log_group.h"
 #include "mvx_seq.h"
diff --git a/drivers/media/vpu/if/v4l2/mvx_v4l2_session.c b/drivers/media/vpu/if/v4l2/mvx_v4l2_session.c
index 2a0a20d4a508..9c1a5052aaf3 100755
--- a/drivers/media/vpu/if/v4l2/mvx_v4l2_session.c
+++ b/drivers/media/vpu/if/v4l2/mvx_v4l2_session.c
@@ -146,7 +146,7 @@ static int session_debugfs_init(struct mvx_v4l2_session *session,
 	char name[20];
 	int i;
 
-	scnprintf(name, sizeof(name), "%p", &session->session);
+	scnprintf(name, sizeof(name), "%lx", (unsigned long)(&session->session));
 	session->dentry = debugfs_create_dir(name, parent);
 	if (IS_ERR_OR_NULL(session->dentry))
 		return -ENOMEM;
@@ -511,4 +511,4 @@ int mvx_v4l2_session_set_dsl_mode(struct mvx_v4l2_session *vsession,
         return ret;
 
     return 0;
-}
\ No newline at end of file
+}
diff --git a/drivers/media/vpu/if/v4l2/mvx_v4l2_vidioc.c b/drivers/media/vpu/if/v4l2/mvx_v4l2_vidioc.c
index 40c1aed6bfdf..cfb561ed2c2e 100755
--- a/drivers/media/vpu/if/v4l2/mvx_v4l2_vidioc.c
+++ b/drivers/media/vpu/if/v4l2/mvx_v4l2_vidioc.c
@@ -1103,6 +1103,62 @@ int mvx_v4l2_vidioc_g_crop(struct file *file,
 
 	return 0;
 }
+int mvx_v4l2_vidioc_g_selection(struct file *file, void *fh,
+				  struct v4l2_selection *s)
+{
+    struct v4l2_crop crop = { .type = s->type };
+    int ret;
+    ret = mvx_v4l2_vidioc_g_crop(file, fh, &crop);
+    if (ret == 0)
+    {
+        s->r = crop.c;
+    }
+    return ret;
+}
+int mvx_v4l2_vidioc_s_selection(struct file *file, void *fh,
+				  struct v4l2_selection *s)
+{
+    struct mvx_v4l2_session *vsession = file_to_session(file);
+    int ret = 0;
+    ret = mutex_lock_interruptible(&vsession->mutex);
+    if (ret != 0)
+        return ret;
+    ret = mvx_session_set_crop_left(&vsession->session, s->r.left);
+    ret = mvx_session_set_crop_top(&vsession->session, s->r.top);
+    mutex_unlock(&vsession->mutex);
+    return ret;
+}
+
+int mvx_v4l2_vidioc_s_parm(struct file *file, void *fh,
+			     struct v4l2_streamparm *a)
+{
+    struct mvx_v4l2_session *vsession = file_to_session(file);
+    int ret = 0;
+    ret = mutex_lock_interruptible(&vsession->mutex);
+    if (ret != 0)
+        return ret;
+    if (V4L2_TYPE_IS_OUTPUT(a->type)) {
+        int64_t framerate = ((int64_t)a->parm.output.timeperframe.denominator << 16)/a->parm.output.timeperframe.numerator;
+        ret = mvx_session_set_frame_rate(&vsession->session, framerate);
+    }
+    mutex_unlock(&vsession->mutex);
+    return ret;
+}
+int mvx_v4l2_vidioc_g_parm(struct file *file, void *fh,
+			     struct v4l2_streamparm *a)
+{
+    struct mvx_v4l2_session *vsession = file_to_session(file);
+    int ret = 0;
+    ret = mutex_lock_interruptible(&vsession->mutex);
+    if (ret != 0)
+       return ret;
+    if (V4L2_TYPE_IS_OUTPUT(a->type)) {
+        a->parm.output.timeperframe.numerator = 1 << 16;
+        a->parm.output.timeperframe.denominator = (int32_t)vsession->session.frame_rate;
+    }
+    mutex_unlock(&vsession->mutex);
+    return ret;
+}
 
 int mvx_v4l2_vidioc_streamon(struct file *file,
 			     void *priv,
diff --git a/drivers/media/vpu/if/v4l2/mvx_v4l2_vidioc.h b/drivers/media/vpu/if/v4l2/mvx_v4l2_vidioc.h
index 200d4603d60e..11e9f6df00e8 100755
--- a/drivers/media/vpu/if/v4l2/mvx_v4l2_vidioc.h
+++ b/drivers/media/vpu/if/v4l2/mvx_v4l2_vidioc.h
@@ -84,7 +84,8 @@ int mvx_v4l2_vidioc_try_fmt_vid_out(struct file *file,
 int mvx_v4l2_vidioc_g_crop(struct file *file,
 			   void *fh,
 			   struct v4l2_crop *a);
-
+int mvx_v4l2_vidioc_g_selection(struct file *file, void *fh,
+				  struct v4l2_selection *s);
 int mvx_v4l2_vidioc_streamon(struct file *file,
 			     void *priv,
 			     enum v4l2_buf_type type);
@@ -137,5 +138,10 @@ long mvx_v4l2_vidioc_default(struct file *file,
 			     bool valid_prio,
 			     unsigned int cmd,
 			     void *arg);
-
+int mvx_v4l2_vidioc_s_selection(struct file *file, void *fh,
+				  struct v4l2_selection *s);
+int mvx_v4l2_vidioc_g_parm(struct file *file, void *fh,
+			     struct v4l2_streamparm *a);
+int mvx_v4l2_vidioc_s_parm(struct file *file, void *fh,
+			     struct v4l2_streamparm *a);
 #endif /* _MVX_V4L2_VIDIOC_H_ */
diff --git a/drivers/media/vpu/mvx_log.c b/drivers/media/vpu/mvx_log.c
index a6f36ab71fbf..6c05ed3fb21f 100755
--- a/drivers/media/vpu/mvx_log.c
+++ b/drivers/media/vpu/mvx_log.c
@@ -900,24 +900,15 @@ int mvx_log_group_add(struct mvx_log *log,
 	group->dentry->d_inode->i_private = group;
 
 	/* Create <group>/severity. */
-	/*debugfs_create_u32("severity", 0600, group->dentry,
-				    &group->severity);
-	if (IS_ERR_OR_NULL(dentry)) {
-		pr_err("MVX: Failed to create '%s/severity' value.\n",
-		       name);
-		ret = -ENOMEM;
-		goto error;
-	}*/
+	debugfs_create_u32("severity", 0600, group->dentry, &group->severity);
 
 	/* Create <group>/drain. */
-	/*debugfs_create_file("drain", 0600, group->dentry, NULL,
-				     &group_drain_fops);
+	dentry = debugfs_create_file("drain", 0600, group->dentry, NULL, &group_drain_fops);
 	if (IS_ERR_OR_NULL(dentry)) {
-		pr_err("MVX: Failed to create '%s/severity' value.\n",
-		       name);
+		pr_err("MVX: Failed to create '%s/severity' value.\n", name);
 		ret = -ENOMEM;
 		goto error;
-	}*/
+	}
 
 	return 0;
 
diff --git a/drivers/media/vpu/mvx_log.h b/drivers/media/vpu/mvx_log.h
index 0dd86ca83600..50b6352ad476 100755
--- a/drivers/media/vpu/mvx_log.h
+++ b/drivers/media/vpu/mvx_log.h
@@ -71,7 +71,7 @@
 #define MVX_LOG_PRINT_SESSION(_lg, _severity, _session, _fmt, ...)	      \
 	do {								      \
 		if ((_severity) <= (_lg)->severity) {			      \
-			__MVX_LOG_PRINT(_lg, _severity, "%p " _fmt, _session, \
+			__MVX_LOG_PRINT(_lg, _severity, "%px " _fmt, _session, \
 					## __VA_ARGS__);		      \
 		}							      \
 	} while (0)
diff --git a/drivers/media/vpu/mvx_log_group.c b/drivers/media/vpu/mvx_log_group.c
index 06fcd43258e5..d4e1ba7d8bcc 100755
--- a/drivers/media/vpu/mvx_log_group.c
+++ b/drivers/media/vpu/mvx_log_group.c
@@ -78,7 +78,7 @@ int mvx_log_group_init(const char *entry_name)
 	if (ret != 0)
 		goto delete_log_entry;
 
-	mvx_log_drain_ram_construct(&drain_ram0_if, 64 * 1024);
+	mvx_log_drain_ram_construct(&drain_ram0_if, 256 * 1024);
 	ret = mvx_log_drain_ram_add(&log, "ram0", &drain_ram0_if);
 	if (ret != 0)
 		goto delete_dmesg_drain;
diff --git a/include/media/v4l2-ioctl.h b/include/media/v4l2-ioctl.h
index 477c773394fb..bdbb7e542321 100644
--- a/include/media/v4l2-ioctl.h
+++ b/include/media/v4l2-ioctl.h
@@ -305,14 +305,10 @@ struct v4l2_ioctl_ops {
 	/* VIDIOC_ENUM_FMT handlers */
 	int (*vidioc_enum_fmt_vid_cap)(struct file *file, void *fh,
 				       struct v4l2_fmtdesc *f);
-	int (*vidioc_enum_fmt_vid_cap_mplane)(struct file *file, void *fh,
-				       struct v4l2_fmtdesc *f);
 	int (*vidioc_enum_fmt_vid_overlay)(struct file *file, void *fh,
 					   struct v4l2_fmtdesc *f);
 	int (*vidioc_enum_fmt_vid_out)(struct file *file, void *fh,
 				       struct v4l2_fmtdesc *f);
-	int (*vidioc_enum_fmt_vid_out_mplane)(struct file *file, void *fh,
-				       struct v4l2_fmtdesc *f);
 	int (*vidioc_enum_fmt_sdr_cap)(struct file *file, void *fh,
 				       struct v4l2_fmtdesc *f);
 	int (*vidioc_enum_fmt_sdr_out)(struct file *file, void *fh,
@@ -335,8 +331,6 @@ struct v4l2_ioctl_ops {
 				    struct v4l2_format *f);
 	int (*vidioc_g_fmt_vbi_out)(struct file *file, void *fh,
 				    struct v4l2_format *f);
-	int (*vidioc_g_fmt_vbi_out_mplane)(struct file *file, void *fh,
-				    struct v4l2_format *f);
 	int (*vidioc_g_fmt_sliced_vbi_cap)(struct file *file, void *fh,
 					   struct v4l2_format *f);
 	int (*vidioc_g_fmt_sliced_vbi_out)(struct file *file, void *fh,
@@ -592,8 +586,6 @@ struct v4l2_ioctl_ops {
 	int (*vidioc_unsubscribe_event)(struct v4l2_fh *fh,
 					const struct v4l2_event_subscription *sub);
 
-	int (*vidioc_g_crop)(struct file *file, void *fh,
-					struct v4l2_crop *a);
 	/* For other private ioctls */
 	long (*vidioc_default)(struct file *file, void *fh,
 			       bool valid_prio, unsigned int cmd, void *arg);
-- 
2.47.0

