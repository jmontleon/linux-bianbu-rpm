From c5099a4042bdc31c7f9181df52466a74de06397e Mon Sep 17 00:00:00 2001
From: yanhaodong <haodong.yan@spacemit.com>
Date: Fri, 12 Apr 2024 18:27:42 +0800
Subject: [PATCH 0606/1448] fix wdt timeout-setting use max timeout if timeout
 out of range

Change-Id: Iefe6bc849b92cf78a90836180efebc202ce2391c
---
 drivers/watchdog/k1x_wdt.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/drivers/watchdog/k1x_wdt.c b/drivers/watchdog/k1x_wdt.c
index 0136842b01f2..75a4c8ec7f00 100755
--- a/drivers/watchdog/k1x_wdt.c
+++ b/drivers/watchdog/k1x_wdt.c
@@ -44,6 +44,7 @@
 #define CONFIG_SPACEMIT_WATCHDOG_ATBOOT		(0)
 /* default timeout is 60s */
 #define CONFIG_SPACEMIT_WATCHDOG_DEFAULT_TIME	(60)
+#define SPACEMIT_WATCHDOG_MAX_TIMEOUT		(255)
 #define SPACEMIT_WATCHDOG_EXPIRE_TIME		(100)
 /* touch watchdog every 30s */
 #define SPACEMIT_WATCHDOG_FEED_TIMEOUT	(30)
@@ -170,12 +171,14 @@ static int spa_wdt_set_timeout(struct watchdog_device *wdd, unsigned timeout)
 	 * the wdt timer is 16 bit,
 	 * frequence is 256HZ
 	 */
-	if ((long long)timeout > 0xffff) {
+	unsigned int tick = timeout << DEFAULT_SHIFT;
+	if ((long long)tick > 0xffff) {
 		dev_info(info->dev, "use default value!\n");
-		timeout = CONFIG_SPACEMIT_WATCHDOG_DEFAULT_TIME;
+		timeout = SPACEMIT_WATCHDOG_MAX_TIMEOUT;
+		tick = timeout << DEFAULT_SHIFT;
 	}
 
-	spa_wdt_write(info, WDT_WMR, timeout << DEFAULT_SHIFT);
+	spa_wdt_write(info, WDT_WMR, tick);
 
 	wdd->timeout = timeout;
 
-- 
2.47.0

