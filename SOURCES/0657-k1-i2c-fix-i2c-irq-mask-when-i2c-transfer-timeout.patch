From f10dbadbaf574b68851bfc16fb7f05aca7520a73 Mon Sep 17 00:00:00 2001
From: lijuan <juan.li@spacemit.com>
Date: Tue, 14 May 2024 11:16:42 +0800
Subject: [PATCH 0657/1189] k1:i2c: fix i2c irq mask when i2c transfer timeout

error log as follows:
[414274.216456] i2c-spacemit-k1x d401d800.i2c: msg completion timeout
[414274.225382] i2c-spacemit-k1x d401d800.i2c: bus reset, send clk: 0
[414274.235535] i2c-spacemit-k1x d401d800.i2c: i2c transfer retry 1, ret -110 mode 0 err 0x0
[414274.756433] i2c-spacemit-k1x d401d800.i2c: msg completion timeout
[414274.765899] i2c-spacemit-k1x d401d800.i2c: bus reset, send clk: 0
[414274.776865] i2c-spacemit-k1x d401d800.i2c: i2c transfer retry 2, ret -110 mode 0 err 0x0
[414275.300454] i2c-spacemit-k1x d401d800.i2c: msg completion timeout
[414275.310060] i2c-spacemit-k1x d401d800.i2c: bus reset, send clk: 0
[414275.320450] i2c-spacemit-k1x d401d800.i2c: i2c transfer retry 3, ret -110 mode 0 err 0x0
[414275.844384] i2c-spacemit-k1x d401d800.i2c: msg completion timeout
[414275.853655] i2c-spacemit-k1x d401d800.i2c: bus reset, send clk: 0
[414275.864297] spacemit-pmic-rtc spacemit-rtc@spm8821: failed to read rtc ctrl register: -110

i2c interrupt may be delayed when cpu0 in a critical context, cause
the i2c transfer complete timeout. there is a risk when another cpu
try disable i2c irq but cpu0 enter isr, the i2c interrupt will be
masked because of the interrupt triggered when irq disabled already.
Then, i2c interrupt will not be unmasked again, i2c driver will not work.

Change-Id: I6cfab6e0e9c4d63e87c04ab14ed17c3bc097cfbe
---
 drivers/i2c/busses/i2c-k1x.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/drivers/i2c/busses/i2c-k1x.c b/drivers/i2c/busses/i2c-k1x.c
index 700f799c2025..88c302cb584d 100644
--- a/drivers/i2c/busses/i2c-k1x.c
+++ b/drivers/i2c/busses/i2c-k1x.c
@@ -1344,10 +1344,12 @@ spacemit_i2c_xfer(struct i2c_adapter *adapt, struct i2c_msg msgs[], int num)
 							spacemit_i2c->timeout);
 		if (unlikely(time_left == 0)) {
 			dev_alert(spacemit_i2c->dev, "msg completion timeout\n");
+			synchronize_irq(spacemit_i2c->irq);
+			disable_irq(spacemit_i2c->irq);
 			spacemit_i2c_bus_reset(spacemit_i2c);
 			spacemit_i2c_reset(spacemit_i2c);
 			ret = -ETIMEDOUT;
-			goto err_xfer;
+			goto timeout_xfex;
 		}
 	}
 
@@ -1358,6 +1360,7 @@ spacemit_i2c_xfer(struct i2c_adapter *adapt, struct i2c_msg msgs[], int num)
 err_recover:
 	disable_irq(spacemit_i2c->irq);
 
+timeout_xfex:
 	/* disable spacemit i2c */
 	spacemit_i2c_disable(spacemit_i2c);
 
-- 
2.47.1

