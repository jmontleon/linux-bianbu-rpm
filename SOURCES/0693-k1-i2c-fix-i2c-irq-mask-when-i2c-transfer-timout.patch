From 36a6852995f1e0235929b638f5dcb3f037a00942 Mon Sep 17 00:00:00 2001
From: lijuan <juan.li@spacemit.com>
Date: Wed, 29 May 2024 19:43:55 +0800
Subject: [PATCH 0693/1204] k1: i2c: fix i2c irq mask when i2c transfer timout

error log as follows:
[414274.216456] i2c-spacemit-k1x d401d800.i2c: msg completion timeout
[414274.225382] i2c-spacemit-k1x d401d800.i2c: bus reset, send clk: 0
[414274.235535] i2c-spacemit-k1x d401d800.i2c: i2c transfer retry 1, ret -110 mode 0 err 0x0
[414274.756433] i2c-spacemit-k1x d401d800.i2c: msg completion timeout
[414274.765899] i2c-spacemit-k1x d401d800.i2c: bus reset, send clk: 0
[414274.776865] i2c-spacemit-k1x d401d800.i2c: i2c transfer retry 2, ret -110 mode 0 err 0x0
[414275.300454] i2c-spacemit-k1x d401d800.i2c: msg completion timeout
[414275.310060] i2c-spacemit-k1x d401d800.i2c: bus reset, send clk: 0
[414275.320450] i2c-spacemit-k1x d401d800.i2c: i2c transfer retry 3, ret -110 mode 0 err 0x0
[414275.844384] i2c-spacemit-k1x d401d800.i2c: msg completion timeout
[414275.853655] i2c-spacemit-k1x d401d800.i2c: bus reset, send clk: 0
[414275.864297] spacemit-pmic-rtc spacemit-rtc@spm8821: failed to read rtc ctrl register: -110

The IRQF_ONESHOT flag will mask the irq during the interrupt process, there is a risk when one CPU disables the irq in the i2c driver, the i2c irq will not unmask.Then, i2c interrupt will not be unmasked again, i2c driver will not work.
i2c enable/disable or mask/unmask irq by i2c driver.

Signed-off-by: lijuan <juan.li@spacemit.com>
Change-Id: Ibb31c00af31367e92e865c5fc2b495298fb3493c
---
 drivers/i2c/busses/i2c-k1x.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/drivers/i2c/busses/i2c-k1x.c b/drivers/i2c/busses/i2c-k1x.c
index 88c302cb584d..eda79cfb2422 100644
--- a/drivers/i2c/busses/i2c-k1x.c
+++ b/drivers/i2c/busses/i2c-k1x.c
@@ -1879,13 +1879,12 @@ static int spacemit_i2c_probe(struct platform_device *pdev)
 	}
 
 	ret = devm_request_irq(spacemit_i2c->dev, spacemit_i2c->irq, spacemit_i2c_int_handler,
-			IRQF_NO_SUSPEND | IRQF_ONESHOT,
+			IRQF_NO_SUSPEND | IRQF_NO_AUTOEN,
 			dev_name(spacemit_i2c->dev), spacemit_i2c);
 	if (ret) {
 		dev_err(spacemit_i2c->dev, "failed to request irq\n");
 		goto err_out;
 	}
-	disable_irq(spacemit_i2c->irq);
 
 	ret = spacemit_i2c_prepare_dma(spacemit_i2c);
 	if (ret) {
-- 
2.47.0

