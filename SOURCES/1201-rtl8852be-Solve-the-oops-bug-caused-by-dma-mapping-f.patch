From f8031a70ddba9dd4999a6002b98a70f662d095a5 Mon Sep 17 00:00:00 2001
From: huzhen <george.hu@spacemit.com>
Date: Fri, 25 Oct 2024 09:50:46 +0800
Subject: [PATCH 1201/1448] rtl8852be: Solve the oops bug caused by dma mapping
 failure

Change-Id: Ibeaa172d0aaacd7bcc19d871a10b9f3f88bf7292
---
 .../realtek/rtl8852be/phl/pltfm_ops_linux.h        | 12 ++++++++++--
 .../rtl8852be/platform/platform_spacemit_pci.c     | 14 +++++++++-----
 2 files changed, 19 insertions(+), 7 deletions(-)

diff --git a/drivers/net/wireless/realtek/rtl8852be/phl/pltfm_ops_linux.h b/drivers/net/wireless/realtek/rtl8852be/phl/pltfm_ops_linux.h
index a70bb0ea3ba7..610183b20570 100644
--- a/drivers/net/wireless/realtek/rtl8852be/phl/pltfm_ops_linux.h
+++ b/drivers/net/wireless/realtek/rtl8852be/phl/pltfm_ops_linux.h
@@ -269,7 +269,8 @@ static inline void _os_pkt_buf_unmap_rx_pci(struct dvobj_priv *pobj, u32 bus_add
 	if (g_pcie_reserved_mem_dev)
 		pdev->dev.dma_mask = NULL;
 #endif
-	dma_unmap_single(&pdev->dev, dma_addr, buf_sz, DMA_FROM_DEVICE);
+	if (dma_addr != DMA_MAPPING_ERROR)
+		dma_unmap_single(&pdev->dev, dma_addr, buf_sz, DMA_FROM_DEVICE);
 
 #ifdef RTW_CORE_RECORD
 	phl_add_record(d, REC_RX_UNMAP, bus_addr_l, buf_sz);
@@ -307,6 +308,9 @@ static inline void _os_pkt_buf_map_rx_pci(struct dvobj_priv *pobj,
 		pdev->dev.dma_mask = NULL;
 #endif
 	dma_addr = dma_map_single(&pdev->dev, skb->data, buf_sz, DMA_FROM_DEVICE);
+	if (dma_mapping_error(&pdev->dev, dma_addr)) {
+		dma_addr = DMA_MAPPING_ERROR;
+	}
 	*bus_addr_l = (u32)dma_addr;
 
 	#ifdef PHL_DMA_ADDR_64
@@ -432,6 +436,9 @@ static inline void *_os_pkt_buf_alloc_rx(void *d, u32 *bus_addr_l,
 	else
 	{
 		dma_addr = dma_map_single(&pdev->dev, skb->data, rxbuf_size, DMA_FROM_DEVICE);
+		if (dma_mapping_error(&pdev->dev, dma_addr)) {
+			dma_addr = DMA_MAPPING_ERROR;
+		}
 		*bus_addr_l = (u32)dma_addr;
 	}
 #endif
@@ -474,7 +481,8 @@ static inline void _os_pkt_buf_free_rx(void *d, u8 *vir_addr, u32 bus_addr_l,
 		_os_free_fake_skb(pdev, skb, buf_sz, cache);
 		return;
 	} else {
-		dma_unmap_single(&pdev->dev, bus_addr, buf_sz, DMA_FROM_DEVICE);
+		if (bus_addr != DMA_MAPPING_ERROR)
+			dma_unmap_single(&pdev->dev, bus_addr, buf_sz, DMA_FROM_DEVICE);
 	}
 #endif
 #endif /*CONFIG_PCI_HCI*/
diff --git a/drivers/net/wireless/realtek/rtl8852be/platform/platform_spacemit_pci.c b/drivers/net/wireless/realtek/rtl8852be/platform/platform_spacemit_pci.c
index 037a99c99d7c..ef0a5d32cbaf 100644
--- a/drivers/net/wireless/realtek/rtl8852be/platform/platform_spacemit_pci.c
+++ b/drivers/net/wireless/realtek/rtl8852be/platform/platform_spacemit_pci.c
@@ -23,7 +23,7 @@ extern int spacemit_wlan_set_power(int on);
 void pci_cache_wback(struct pci_dev *hwdev,
 			dma_addr_t *bus_addr, size_t size, int direction)
 {
-	if (NULL != hwdev && NULL != bus_addr) {
+	if (NULL != hwdev && NULL != bus_addr && *bus_addr != DMA_MAPPING_ERROR) {
 	  	dma_sync_single_for_device(&hwdev->dev, *bus_addr, size,
 					direction);
 	} else
@@ -32,7 +32,7 @@ void pci_cache_wback(struct pci_dev *hwdev,
 void pci_cache_inv(struct pci_dev *hwdev,
 			dma_addr_t *bus_addr, size_t size, int direction)
 {
-	if (NULL != hwdev && NULL != bus_addr) {
+	if (NULL != hwdev && NULL != bus_addr && *bus_addr != DMA_MAPPING_ERROR) {
 		dma_sync_single_for_cpu(&hwdev->dev, *bus_addr, size, direction);
 	} else
 		RTW_ERR("pcie hwdev handle or bus addr is NULL!\n");
@@ -43,6 +43,10 @@ void pci_get_bus_addr(struct pci_dev *hwdev,
 {
 	if (NULL != hwdev) {
 		*bus_addr = dma_map_single(&hwdev->dev, vir_addr, size, direction);
+		if (dma_mapping_error(&hwdev->dev, *bus_addr)) {
+			RTW_ERR("dma_map_single error, bus addr is invalid!\n");
+			*bus_addr = DMA_MAPPING_ERROR;
+		}
 	} else {
 		RTW_ERR("pcie hwdev handle is NULL!\n");
 		*bus_addr = (dma_addr_t)virt_to_phys(vir_addr);
@@ -52,7 +56,7 @@ void pci_get_bus_addr(struct pci_dev *hwdev,
 void pci_unmap_bus_addr(struct pci_dev *hwdev,
 			dma_addr_t *bus_addr, size_t size, int direction)
 {
-	if (NULL != hwdev && NULL != bus_addr) {
+	if (NULL != hwdev && NULL != bus_addr && *bus_addr != DMA_MAPPING_ERROR) {
 		dma_unmap_single(&hwdev->dev, *bus_addr, size, direction);
 	} else
 		RTW_ERR("pcie hwdev handle or bus addr is NULL!\n");
@@ -64,8 +68,8 @@ void *pci_alloc_cache_mem(struct pci_dev *pdev,
 
 	vir_addr = rtw_zmalloc(size);
 
-	if (!vir_addr)
-		bus_addr = NULL;
+	if (!vir_addr && bus_addr)
+		*bus_addr = DMA_MAPPING_ERROR;
 	else
 		pci_get_bus_addr(pdev, vir_addr, bus_addr, size, direction);
 
-- 
2.47.0

