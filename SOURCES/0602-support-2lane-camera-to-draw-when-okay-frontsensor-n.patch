From 643793d747811b8a4efec972cad03e1f75f9bf31 Mon Sep 17 00:00:00 2001
From: lizhirong <zhirong.li@spacemit.com>
Date: Thu, 18 Apr 2024 15:10:14 +0800
Subject: [PATCH 0602/1204] support 2lane camera to draw when okay frontsensor
 node

Change-Id: I757b3f06bab83d99dceb280692f3bd7eeb6e1fad
---
 arch/riscv/boot/dts/spacemit/k1-x_deb1.dts    |  9 +++++++++
 arch/riscv/boot/dts/spacemit/k1-x_deb2.dts    |  9 +++++++++
 .../spacemit/camera/cam_sensor/cam_sensor.c   | 20 +++++++++++++------
 3 files changed, 32 insertions(+), 6 deletions(-)

diff --git a/arch/riscv/boot/dts/spacemit/k1-x_deb1.dts b/arch/riscv/boot/dts/spacemit/k1-x_deb1.dts
index 967591b2aba0..3d0e4029cff4 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_deb1.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_deb1.dts
@@ -882,10 +882,19 @@ &backsensor_aux {
 };
 
 &frontsensor {
+	af_2v8-supply = <&ldo_3>;
 	avdd_2v8-supply = <&ldo_2>;
 	dovdd_1v8-supply = <&ldo_7>;
 	dvdd_1v2-supply = <&ldo_6>;
 
+	clocks = <&ccu CLK_CAMM1>;
+	clock-names = "cam_mclk1";
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_camera1>;
+
+	pwdn-gpios = <&gpio 114 0>;
+	reset-gpios = <&gpio 112 0>;
+
 	status = "disabled";
 };
 &csiphy0 {
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_deb2.dts b/arch/riscv/boot/dts/spacemit/k1-x_deb2.dts
index 9462616627f5..c94f6ee3666f 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_deb2.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_deb2.dts
@@ -843,10 +843,19 @@ &backsensor_aux {
 };
 
 &frontsensor {
+	af_2v8-supply = <&ldo_12>;
 	avdd_2v8-supply = <&ldo_10>;
 	dovdd_1v8-supply = <&ldo_11>;
 	dvdd_1v2-supply = <&ldo_20>;
 
+	clocks = <&ccu CLK_CAMM1>;
+	clock-names = "cam_mclk1";
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_camera1>;
+
+	pwdn-gpios = <&gpio 114 0>;
+	reset-gpios = <&gpio 112 0>;
+
 	status = "disabled";
 };
 &csiphy0 {
diff --git a/drivers/media/platform/spacemit/camera/cam_sensor/cam_sensor.c b/drivers/media/platform/spacemit/camera/cam_sensor/cam_sensor.c
index 343737d19b3f..8635db4d48e8 100755
--- a/drivers/media/platform/spacemit/camera/cam_sensor/cam_sensor.c
+++ b/drivers/media/platform/spacemit/camera/cam_sensor/cam_sensor.c
@@ -1198,8 +1198,8 @@ static int camsnr_of_parse(struct cam_sensor_device *sensor)
 	struct device *dev = NULL;
 	struct device_node *of_node = NULL;
 	u32 cell_id, twsi_no, dphy_no;
-	char mclk_name[32];
 	int ret;
+	const char *mclk_name;
 
 	SENSOR_DRIVER_CHECK_POINTER(sensor);
 	dev = &sensor->pdev->dev;
@@ -1239,16 +1239,25 @@ static int camsnr_of_parse(struct cam_sensor_device *sensor)
 	}
 	sensor->dphy_no = (u8) dphy_no;
 
+	ret = of_property_read_string(of_node, "clock-names", &mclk_name);
+	if (!ret) {
+		if (strcmp(mclk_name, "cam_mclk0") && strcmp(mclk_name, "cam_mclk1") && strcmp(mclk_name, "cam_mclk2")) {
+			cam_err("%s: error! only support cam_mclk0~2!", __func__);
+			return -EINVAL;
+		}
+	} else {
+		cam_err("%s: clock-names read failed", __func__);
+		return ret;
+	}
+
 	/* mclks */
-	snprintf(mclk_name, sizeof(mclk_name), "cam_mclk%d", cell_id);
 	sensor->mclk = devm_clk_get(dev, mclk_name);
 	if (IS_ERR(sensor->mclk)) {
 		cam_err("unable to get cam_mclk%d\n", cell_id);
 		ret = PTR_ERR(sensor->mclk);
 		goto st_err;
 	}
-//#if 0
-//#ifdef JINDIE_EVB
+
 	sensor->afvdd = devm_regulator_get(dev, "af_2v8");
 	if (IS_ERR(sensor->afvdd)) {
 		dev_warn(dev, "Failed to get regulator af_2v8\n");
@@ -1272,8 +1281,7 @@ static int camsnr_of_parse(struct cam_sensor_device *sensor)
 		dev_warn(dev, "Failed to get regulator dvdd_1v2\n");
 		sensor->dvdd = NULL;
 	}
-//#endif
-//#endif
+
 	/* pwdn-gpios */
 	sensor->pwdn = devm_gpiod_get(dev, "pwdn", GPIOD_OUT_HIGH);
 	if (IS_ERR(sensor->pwdn)) {
-- 
2.47.0

