From 6cccee23a1d4a342fcf0a0270e86220978ee0e6b Mon Sep 17 00:00:00 2001
From: Nell <xianbin.zhu@spacemit.com>
Date: Wed, 24 Jan 2024 22:06:57 +0800
Subject: [PATCH 0395/1206] k1x:deb1: support power-off system

Change-Id: Ied6688ae6a18d5c6024b272838183b12df423e30
---
 drivers/i2c/busses/i2c-k1x.c               | 16 ++++++---
 drivers/mfd/spacemit-mfd.c                 | 42 +++++++++++++++++++++-
 include/linux/mfd/spacemit/spacemit_pmic.h | 12 +++++++
 include/linux/mfd/spacemit/spm8821.h       |  7 ++++
 4 files changed, 71 insertions(+), 6 deletions(-)

diff --git a/drivers/i2c/busses/i2c-k1x.c b/drivers/i2c/busses/i2c-k1x.c
index dd89fef7d7d6..041ef8ae7578 100644
--- a/drivers/i2c/busses/i2c-k1x.c
+++ b/drivers/i2c/busses/i2c-k1x.c
@@ -1988,11 +1988,17 @@ static int spacemit_i2c_remove(struct platform_device *pdev)
 
 static void spacemit_i2c_shutdown(struct platform_device *pdev)
 {
-	struct spacemit_i2c_dev *spacemit_i2c = platform_get_drvdata(pdev);
-
-	mutex_lock(&spacemit_i2c->mtx);
-	spacemit_i2c->shutdown = true;
-	mutex_unlock(&spacemit_i2c->mtx);
+	/**
+	 * we should using i2c to communicate with pmic to shutdown the system
+	 * so we should not shutdown i2c
+	 */
+/**
+ *	struct spacemit_i2c_dev *spacemit_i2c = platform_get_drvdata(pdev);
+ *
+ *	mutex_lock(&spacemit_i2c->mtx);
+ *	spacemit_i2c->shutdown = true;
+ *	mutex_unlock(&spacemit_i2c->mtx);
+ */
 }
 
 static const struct of_device_id spacemit_i2c_dt_match[] = {
diff --git a/drivers/mfd/spacemit-mfd.c b/drivers/mfd/spacemit-mfd.c
index cb697b6befa6..f2779cfae373 100644
--- a/drivers/mfd/spacemit-mfd.c
+++ b/drivers/mfd/spacemit-mfd.c
@@ -34,6 +34,37 @@ static const struct of_device_id spacemit_pmic_of_match[] = {
 };
 MODULE_DEVICE_TABLE(of, spacemit_pmic_of_match);
 
+struct mfd_match_data *match_data;
+
+static void spacemit_pm_power_off(void)
+{
+	int ret;
+	struct spacemit_pmic *pmic = (struct spacemit_pmic *)match_data->ptr;
+
+	ret = regmap_update_bits(pmic->regmap, match_data->shutdown.reg,
+			match_data->shutdown.bit, match_data->shutdown.bit);
+	if (ret) {
+		pr_err("Failed to shutdown device!\n");
+	}
+
+	while (1) {
+		asm volatile ("wfi");
+	}
+
+	return;
+}
+
+static int spacemit_restart_notify(struct notifier_block *this, unsigned long mode, void *cmd)
+{
+	/* TODO */
+	return NOTIFY_DONE;
+}
+
+static struct notifier_block spacemit_restart_handler = {
+	.notifier_call = spacemit_restart_notify,
+	.priority = 192,
+};
+
 static int spacemit_prepare_sub_pmic(struct spacemit_pmic *pmic)
 {
 	struct i2c_client *client = pmic->i2c;
@@ -67,7 +98,6 @@ static int spacemit_pmic_probe(struct i2c_client *client,
 	struct spacemit_pmic *pmic;
 	const struct mfd_cell *cells;
 	const struct of_device_id *of_id;
-	struct mfd_match_data *match_data;
 
 	pmic = devm_kzalloc(&client->dev, sizeof(*pmic), GFP_KERNEL);
 	if (!pmic) {
@@ -89,6 +119,7 @@ static int spacemit_pmic_probe(struct i2c_client *client,
 	of_node_put(np);
 
 	match_data = (struct mfd_match_data *)of_id->data;
+	match_data->ptr = (void *)pmic;
 
 	pmic->regmap_cfg = match_data->regmap_cfg;
 	pmic->regmap_irq_chip = match_data->regmap_irq_chip;
@@ -146,6 +177,15 @@ static int spacemit_pmic_probe(struct i2c_client *client,
 		return -EINVAL;
 	}
 
+	if (match_data->shutdown.reg)
+		pm_power_off = spacemit_pm_power_off;
+
+	if (match_data->reboot.reg) {
+		ret = register_restart_handler(&spacemit_restart_handler);
+		if (ret)
+			pr_warn("failed to register rst handler, %d\n", ret);
+	}
+
 	return 0;
 }
 
diff --git a/include/linux/mfd/spacemit/spacemit_pmic.h b/include/linux/mfd/spacemit/spacemit_pmic.h
index 2976ce88bb2e..c42bf3760ba3 100644
--- a/include/linux/mfd/spacemit/spacemit_pmic.h
+++ b/include/linux/mfd/spacemit/spacemit_pmic.h
@@ -174,6 +174,18 @@ struct mfd_match_data {
 	const struct mfd_cell *mfd_cells;
 	int nr_cells;
 	const char *name;
+	void *ptr;
+
+	/* shutdown - reboot support */
+	struct {
+		unsigned char reg;
+		unsigned char bit;
+	} shutdown;
+
+	struct {
+		unsigned int reg;
+		unsigned char bit;
+	} reboot;
 };
 
 /* regulator: match data */
diff --git a/include/linux/mfd/spacemit/spm8821.h b/include/linux/mfd/spacemit/spm8821.h
index 172d11c29569..2b680f04ce8b 100644
--- a/include/linux/mfd/spacemit/spm8821.h
+++ b/include/linux/mfd/spacemit/spm8821.h
@@ -76,6 +76,9 @@ enum SPM8821_reg {
 #define SPM8821_SWITCH_CTRL_REG		0x59
 #define SPM8821_SWTICH_EN_MASK		0x1
 
+#define SPM8821_PWR_CTRL2		0x7e
+#define SPM8821_SW_SHUTDOWN_BIT_MSK	0x4
+
 #define SPM8821_REGMAP_CONFIG	\
 	static const struct regmap_config spm8821_regmap_config = {	\
 		.reg_bits = 8,	\
@@ -753,6 +756,10 @@ static struct mfd_match_data spm8821_mfd_match_data = {		\
 	.mfd_cells = spm8821,					\
 	.nr_cells = ARRAY_SIZE(spm8821),			\
 	.name = "spm8821",					\
+	.shutdown = {						\
+		.reg = SPM8821_PWR_CTRL2,			\
+		.bit = SPM8821_SW_SHUTDOWN_BIT_MSK,		\
+	},							\
 };
 
 #define SPM8821_PINCTRL_MATCH_DATA				\
-- 
2.47.0

