From a8a9de462e65656ec0d5ede5f7ae4d1d753b2264 Mon Sep 17 00:00:00 2001
From: zhangmeng <zhangmeng.kevin@spacemit.com>
Date: Tue, 26 Nov 2024 10:52:02 +0800
Subject: [PATCH 1137/1200] drm: spacemit:porting drm driver to linux-6.12

Change-Id: I41cf838018aa10ffd3dff840c55b30e9fb5c4d3d
---
 drivers/gpu/drm/spacemit/Kconfig             |  5 ++--
 drivers/gpu/drm/spacemit/dpu/dpu_trace.h     |  8 +++---
 drivers/gpu/drm/spacemit/dpu/saturn_fbcmem.c |  2 +-
 drivers/gpu/drm/spacemit/dpu/saturn_fbcmem.h |  2 +-
 drivers/gpu/drm/spacemit/lt8911exb.c         |  2 +-
 drivers/gpu/drm/spacemit/lt9711.c            |  2 +-
 drivers/gpu/drm/spacemit/spacemit_dpu.c      |  6 ++---
 drivers/gpu/drm/spacemit/spacemit_drm.c      |  9 +++----
 drivers/gpu/drm/spacemit/spacemit_dsi.c      |  4 +--
 drivers/gpu/drm/spacemit/spacemit_gem.c      |  1 +
 drivers/gpu/drm/spacemit/spacemit_hdmi.c     | 27 +++++++-------------
 drivers/gpu/drm/spacemit/spacemit_lib.c      |  3 +++
 drivers/gpu/drm/spacemit/spacemit_planes.c   |  4 +--
 drivers/gpu/drm/spacemit/spacemit_wb.c       |  5 ++--
 14 files changed, 36 insertions(+), 44 deletions(-)

diff --git a/drivers/gpu/drm/spacemit/Kconfig b/drivers/gpu/drm/spacemit/Kconfig
index 67de8a3b9f72..491298d6df0d 100644
--- a/drivers/gpu/drm/spacemit/Kconfig
+++ b/drivers/gpu/drm/spacemit/Kconfig
@@ -2,15 +2,16 @@
 
 config DRM_SPACEMIT
 	tristate "DRM Support for Spacemit"
-	select DRM
 	select DRM_KMS_HELPER
 	select DRM_GEM_CMA_HELPER
 	select DRM_KMS_CMA_HELPER
+	select DRM_GEM_DMA_HELPER
 	select DRM_MIPI_DSI
 	select DRM_PANEL
 	select VIDEOMODE_HELPERS
 	select BACKLIGHT_CLASS_DEVICE
 	select GKI_FIX_WORKAROUND if DRM_SPACEMIT=m
+	depends on DRM
 	default n
 	help
 	  Choose this option if you have a Spacemit soc chipsets.
@@ -51,4 +52,4 @@ config DRM_LT9711
 	select DRM_DP_AUX_BUS
 
 	help
-	  Support for Lontium LT9711 DSI to eDP driver.
\ No newline at end of file
+	  Support for Lontium LT9711 DSI to eDP driver.
diff --git a/drivers/gpu/drm/spacemit/dpu/dpu_trace.h b/drivers/gpu/drm/spacemit/dpu/dpu_trace.h
index 51f56217c1bf..8c81871c2289 100644
--- a/drivers/gpu/drm/spacemit/dpu/dpu_trace.h
+++ b/drivers/gpu/drm/spacemit/dpu/dpu_trace.h
@@ -109,7 +109,7 @@ DECLARE_EVENT_CLASS(dpu_status_template,
 		__field(int, status)
 	),
 	TP_fast_assign(
-		__assign_str(name_str, name);
+		__assign_str(name_str);
 		__entry->status = status;
 	),
 	TP_printk("%s: 0x%x",
@@ -149,7 +149,7 @@ DECLARE_EVENT_CLASS(dpu_ul_data_template,
 		__field(unsigned long, ul_data)
 	),
 	TP_fast_assign(
-		__assign_str(name_str, name);
+		__assign_str(name_str);
 		__entry->ul_data = ul_data;
 	),
 	TP_printk("%s: %ld",
@@ -169,7 +169,7 @@ DECLARE_EVENT_CLASS(dpu_uint64_t_data_template,
 		__field(uint64_t, data)
 	),
 	TP_fast_assign(
-		__assign_str(name_str, name);
+		__assign_str(name_str);
 		__entry->data = data;
 	),
 	TP_printk("%s: %lld",
@@ -270,7 +270,7 @@ TRACE_EVENT(dpu_reg_info,
 		__field(uint32_t, reg_num)
 	),
 	TP_fast_assign(
-		__assign_str(name_str, mod_name);
+		__assign_str(name_str);
 		__entry->p_addr = p_addr;
 		__entry->reg_num = reg_num;
 	),
diff --git a/drivers/gpu/drm/spacemit/dpu/saturn_fbcmem.c b/drivers/gpu/drm/spacemit/dpu/saturn_fbcmem.c
index d759c9ac46dd..b437904a0e7b 100644
--- a/drivers/gpu/drm/spacemit/dpu/saturn_fbcmem.c
+++ b/drivers/gpu/drm/spacemit/dpu/saturn_fbcmem.c
@@ -168,7 +168,7 @@ int get_afbc_data_plane_min_rdma_mem_size(u8 rdma_work_mode, u32 drm_4cc_fmt,
 }
 EXPORT_SYMBOL(get_afbc_data_plane_min_rdma_mem_size);
 
-void inline saturn_write_fbcmem_regs(struct drm_plane_state *state, u32 rdma_id,
+void saturn_write_fbcmem_regs(struct drm_plane_state *state, u32 rdma_id,
 				     u32 module_base, volatile RDMA_PATH_X_REG *rdma_regs)
 {
 	struct drm_crtc_state *crtc_state = state->crtc->state;
diff --git a/drivers/gpu/drm/spacemit/dpu/saturn_fbcmem.h b/drivers/gpu/drm/spacemit/dpu/saturn_fbcmem.h
index 738e50ae40c9..9ccd399f47c7 100644
--- a/drivers/gpu/drm/spacemit/dpu/saturn_fbcmem.h
+++ b/drivers/gpu/drm/spacemit/dpu/saturn_fbcmem.h
@@ -34,7 +34,7 @@ int saturn_cal_layer_fbcmem_size(struct drm_plane *plane, \
 int saturn_adjust_rdma_fbcmem(struct spacemit_hw_device *hwdev, \
 			      struct spacemit_dpu_rdma *rdmas);
 
-void inline saturn_write_fbcmem_regs(struct drm_plane_state *state, u32 rdma_id,
+void saturn_write_fbcmem_regs(struct drm_plane_state *state, u32 rdma_id,
 				     u32 module_base, volatile RDMA_PATH_X_REG *rdma_regs);
 
 #endif
diff --git a/drivers/gpu/drm/spacemit/lt8911exb.c b/drivers/gpu/drm/spacemit/lt8911exb.c
index 84ab49676381..7d222c80f075 100644
--- a/drivers/gpu/drm/spacemit/lt8911exb.c
+++ b/drivers/gpu/drm/spacemit/lt8911exb.c
@@ -20,7 +20,7 @@
 #include <linux/media-bus-format.h>
 #include <linux/atomic.h>
 #include <linux/workqueue.h>
-#include <asm/unaligned.h>
+#include <linux/unaligned.h>
 #include <drm/drm_atomic.h>
 #include <drm/drm_atomic_helper.h>
 #include <drm/drm_bridge.h>
diff --git a/drivers/gpu/drm/spacemit/lt9711.c b/drivers/gpu/drm/spacemit/lt9711.c
index 3c019801dd8f..6b81a89e262d 100644
--- a/drivers/gpu/drm/spacemit/lt9711.c
+++ b/drivers/gpu/drm/spacemit/lt9711.c
@@ -20,7 +20,7 @@
 #include <linux/media-bus-format.h>
 #include <linux/atomic.h>
 #include <linux/workqueue.h>
-#include <asm/unaligned.h>
+#include <linux/unaligned.h>
 #include <drm/drm_atomic.h>
 #include <drm/drm_atomic_helper.h>
 #include <drm/drm_bridge.h>
diff --git a/drivers/gpu/drm/spacemit/spacemit_dpu.c b/drivers/gpu/drm/spacemit/spacemit_dpu.c
index 752e26eab725..9d71efee4268 100644
--- a/drivers/gpu/drm/spacemit/spacemit_dpu.c
+++ b/drivers/gpu/drm/spacemit/spacemit_dpu.c
@@ -405,7 +405,7 @@ static void spacemit_crtc_atomic_flush(struct drm_crtc *crtc,
 
 static struct drm_crtc_state *spacemit_crtc_duplicate_state(struct drm_crtc *crtc)
 {
-	struct spacemit_crtc_state *state, *old_state;
+	struct spacemit_crtc_state *state;
 	struct spacemit_drm_private *priv = crtc->dev->dev_private;
 	struct spacemit_hw_device *hwdev = priv->hwdev;
 	u8 n_rdma, i;
@@ -413,7 +413,6 @@ static struct drm_crtc_state *spacemit_crtc_duplicate_state(struct drm_crtc *crt
 	if (WARN_ON(!crtc->state))
 		return NULL;
 
-	old_state = to_spacemit_crtc_state(crtc->state);
 	state = kzalloc(sizeof(*state), GFP_KERNEL);
 	if (!state)
 		return NULL;
@@ -986,10 +985,9 @@ static int spacemit_dpu_probe(struct platform_device *pdev)
 	return component_add(dev, &dpu_component_ops);
 }
 
-static int spacemit_dpu_remove(struct platform_device *pdev)
+static void spacemit_dpu_remove(struct platform_device *pdev)
 {
 	component_del(&pdev->dev, &dpu_component_ops);
-	return 0;
 }
 
 static int dpu_pm_suspend(struct device *dev)
diff --git a/drivers/gpu/drm/spacemit/spacemit_drm.c b/drivers/gpu/drm/spacemit/spacemit_drm.c
index da25ec8b3f3a..4c7b372a2d3e 100644
--- a/drivers/gpu/drm/spacemit/spacemit_drm.c
+++ b/drivers/gpu/drm/spacemit/spacemit_drm.c
@@ -6,11 +6,11 @@
 
 #include <drm/drm_atomic_helper.h>
 #include <drm/drm_crtc_helper.h>
-#include <drm/drm_fbdev_generic.h>
 #include <drm/drm_aperture.h>
 #include <drm/drm_framebuffer.h>
 #include <drm/drm_debugfs.h>
 #include <drm/drm_gem_framebuffer_helper.h>
+#include <drm/drm_fbdev_dma.h>
 #include <drm/drm_ioctl.h>
 #include <drm/drm_of.h>
 #include <linux/component.h>
@@ -186,7 +186,6 @@ static const struct file_operations spacemit_drm_fops = {
 	.compat_ioctl	= drm_compat_ioctl,
 	.poll			= drm_poll,
 	.read			= drm_read,
-	.llseek		= no_llseek,
 	.mmap		= spacemit_gem_mmap,
 };
 
@@ -265,7 +264,8 @@ static int spacemit_drm_bind(struct device *dev)
 	err = drm_dev_register(drm, 0);
 	if (err < 0)
 		goto err_kms_helper_poll_fini;
-	drm_fbdev_generic_setup(drm, 32);
+
+	drm_fbdev_dma_setup(drm, 32);
 
 	return 0;
 
@@ -436,10 +436,9 @@ static int spacemit_drm_probe(struct platform_device *pdev)
 	return spacemit_drm_of_component_probe(&pdev->dev, compare_of,  &drm_component_ops);
 }
 
-static int spacemit_drm_remove(struct platform_device *pdev)
+static void spacemit_drm_remove(struct platform_device *pdev)
 {
 	component_master_del(&pdev->dev, &drm_component_ops);
-	return 0;
 }
 
 static void spacemit_drm_shutdown(struct platform_device *pdev)
diff --git a/drivers/gpu/drm/spacemit/spacemit_dsi.c b/drivers/gpu/drm/spacemit/spacemit_dsi.c
index 03e9b1e2d909..959640832bc0 100644
--- a/drivers/gpu/drm/spacemit/spacemit_dsi.c
+++ b/drivers/gpu/drm/spacemit/spacemit_dsi.c
@@ -725,11 +725,9 @@ static int spacemit_dsi_probe(struct platform_device *pdev)
 	return component_add(&pdev->dev, &dsi_component_ops);
 }
 
-static int spacemit_dsi_remove(struct platform_device *pdev)
+static void spacemit_dsi_remove(struct platform_device *pdev)
 {
 	component_del(&pdev->dev, &dsi_component_ops);
-
-	return 0;
 }
 
 static const struct of_device_id spacemit_dsi_of_match[] = {
diff --git a/drivers/gpu/drm/spacemit/spacemit_gem.c b/drivers/gpu/drm/spacemit/spacemit_gem.c
index 40ff51db3957..09f4eef6f728 100644
--- a/drivers/gpu/drm/spacemit/spacemit_gem.c
+++ b/drivers/gpu/drm/spacemit/spacemit_gem.c
@@ -7,6 +7,7 @@
 #include <linux/dma-mapping.h>
 #include <linux/dma-buf.h>
 #include <linux/dma-map-ops.h>
+#include <linux/vmalloc.h>
 #include <drm/drm_prime.h>
 #include <drm/drm_gem_dma_helper.h>
 
diff --git a/drivers/gpu/drm/spacemit/spacemit_hdmi.c b/drivers/gpu/drm/spacemit/spacemit_hdmi.c
index 7531fe51cb45..fa59b6b874dd 100644
--- a/drivers/gpu/drm/spacemit/spacemit_hdmi.c
+++ b/drivers/gpu/drm/spacemit/spacemit_hdmi.c
@@ -114,13 +114,10 @@ static int spacemit_hdmi_config_video_vsi(struct spacemit_hdmi *hdmi,
 				      struct drm_display_mode *mode)
 {
 	union hdmi_infoframe frame;
-	int rc;
 
-	rc = drm_hdmi_vendor_infoframe_from_display_mode(&frame.vendor.hdmi,
+	return  drm_hdmi_vendor_infoframe_from_display_mode(&frame.vendor.hdmi,
 							 &hdmi->connector,
 							 mode);
-
-	return 0;
 }
 
 static int spacemit_hdmi_upload_frame(struct spacemit_hdmi *hdmi, int setup_rc,
@@ -290,7 +287,6 @@ int pll_reg (struct spacemit_hdmi *hdmi, int pixel_clock, int bit_depth) {
 	int hdmi_ec_reg = 0;
 	int hdmi_f0_reg = 0;
 	int hdmi_e8_reg = 0;
-	int pow = 0;
 	int bit_clock = bit_depth == EIGHT_BPP ? pixel_clock : pixel_clock * 125 / 100;
 
 	int integer_part = 0;
@@ -304,9 +300,6 @@ int pll_reg (struct spacemit_hdmi *hdmi, int pixel_clock, int bit_depth) {
 	pll7_reg = 0x50;
 	pll6_reg = 0xD | (pll6_bit_4_5(bit_clock, n) << 4) | (2 << 6);
 	pll5_reg = 0x40 | pll5_bit_0_2(bit_clock, n);
-
-	pow = (pll8_bit_5_6(bit_clock, n));
-
 	pll4_reg = integer_part;
 
 	hdmi_ec_reg = (pll7_reg << 24) | (pll6_reg << 16) | (pll5_reg << 8) | pll4_reg;
@@ -517,7 +510,7 @@ int edid_read (struct spacemit_hdmi *hdmi){
 	return 0;
 }
 
-static int spacemit_hdmi_get_edid_block(void *data, u8 *buf, unsigned int block, size_t len)
+static int spacemit_hdmi_get_edid_block(void *data, unsigned char *buf, unsigned int block, long unsigned int len)
 {
 	struct spacemit_hdmi *hdmi = data;
 	struct hdmi_data_info *hdmi_data = hdmi->hdmi_data;
@@ -763,7 +756,7 @@ static int spacemit_hdmi_connector_get_modes(struct drm_connector *connector)
 {
 	struct spacemit_hdmi *hdmi = connector_to_spacemit_hdmi(connector);
 	int ret;
-	struct edid *edid;
+	const struct drm_edid *drm_edid;
 	uint32_t value;
 
 	DRM_DEBUG("%s() \n", __func__);
@@ -780,15 +773,15 @@ static int spacemit_hdmi_connector_get_modes(struct drm_connector *connector)
 
 	hdmi->edid_done = false;
 
-	edid = drm_do_get_edid(connector, spacemit_hdmi_get_edid_block, hdmi);
-	if (edid) {
+	drm_edid = drm_edid_read_custom(connector, spacemit_hdmi_get_edid_block, hdmi);
+	if (drm_edid) {
 		if (hdmi->edid_done) {
-			drm_connector_update_edid_property(connector, edid);
-			ret = drm_add_edid_modes(connector, edid);
+			drm_edid_connector_update(connector, drm_edid);
+			ret = drm_edid_connector_add_modes(connector);
 		} else {
 			ret = drm_add_modes_noedid(connector, 1920, 1080);
 		}
-		kfree(edid);
+		drm_edid_free(drm_edid);
 	} else {
 		DRM_INFO("%s() get edid failed\n", __func__);
 		ret = drm_add_modes_noedid(connector, 1920, 1080);
@@ -1007,13 +1000,11 @@ static int spacemit_hdmi_probe(struct platform_device *pdev)
 	return component_add(&pdev->dev, &spacemit_hdmi_ops);
 }
 
-static int spacemit_hdmi_remove(struct platform_device *pdev)
+static void spacemit_hdmi_remove(struct platform_device *pdev)
 {
 	DRM_DEBUG("%s() \n", __func__);
 
 	component_del(&pdev->dev, &spacemit_hdmi_ops);
-
-	return 0;
 }
 
 static int hdmi_rt_pm_resume(struct device *dev)
diff --git a/drivers/gpu/drm/spacemit/spacemit_lib.c b/drivers/gpu/drm/spacemit/spacemit_lib.c
index 60aa57b691c7..c43f844ddc54 100644
--- a/drivers/gpu/drm/spacemit/spacemit_lib.c
+++ b/drivers/gpu/drm/spacemit/spacemit_lib.c
@@ -6,11 +6,14 @@
 
 #include <linux/device.h>
 #include <linux/module.h>
+#include <linux/of.h>
 #include <linux/of_graph.h>
 #include <linux/of_platform.h>
 #include <linux/slab.h>
+#include <linux/platform_device.h>
 #include <linux/uaccess.h>
 #include <linux/fs.h>
+#include <drm/drm_of.h>
 #include "spacemit_lib.h"
 
 struct bmp_header {
diff --git a/drivers/gpu/drm/spacemit/spacemit_planes.c b/drivers/gpu/drm/spacemit/spacemit_planes.c
index 7ac03567728f..a979f8612609 100644
--- a/drivers/gpu/drm/spacemit/spacemit_planes.c
+++ b/drivers/gpu/drm/spacemit/spacemit_planes.c
@@ -13,6 +13,7 @@
 #include <drm/drm_color_mgmt.h>
 #include <linux/component.h>
 #include <linux/dma-mapping.h>
+#include <linux/minmax.h>
 #include "spacemit_cmdlist.h"
 #include "spacemit_dmmu.h"
 #include "spacemit_dpu.h"
@@ -579,8 +580,7 @@ int spacemit_drm_plane_create_color_properties(struct drm_plane *plane,
 {
 	struct drm_device *dev = plane->dev;
 	struct drm_property *prop;
-	struct drm_prop_enum_list enum_list[max_t(int, DRM_COLOR_ENCODING_MAX,
-						       DRM_COLOR_RANGE_MAX)];
+	struct drm_prop_enum_list enum_list[MAX(DRM_COLOR_ENCODING_MAX, DRM_COLOR_RANGE_MAX)];
 	int i, len;
 
 	if (WARN_ON(supported_encodings == 0 ||
diff --git a/drivers/gpu/drm/spacemit/spacemit_wb.c b/drivers/gpu/drm/spacemit/spacemit_wb.c
index 3bcadfdf3cae..6aa3360e578d 100644
--- a/drivers/gpu/drm/spacemit/spacemit_wb.c
+++ b/drivers/gpu/drm/spacemit/spacemit_wb.c
@@ -66,9 +66,11 @@ static const struct drm_encoder_helper_funcs spacemit_wb_encoder_helper_funcs =
 	.atomic_check = spacemit_wb_encoder_atomic_check,
 };
 
+#if 0
 static const struct drm_encoder_funcs spacemit_wb_encoder_funcs = {
 	.destroy = drm_encoder_cleanup,
 };
+#endif
 
 static int spacemit_wb_connector_get_modes(struct drm_connector *connector)
 {
@@ -239,10 +241,9 @@ static int spacemit_wb_probe(struct platform_device *pdev)
 	return component_add(&pdev->dev, &spacemit_wb_component_ops);
 }
 
-static int spacemit_wb_remove(struct platform_device *pdev)
+static void spacemit_wb_remove(struct platform_device *pdev)
 {
 	component_del(&pdev->dev, &spacemit_wb_component_ops);
-	return 0;
 }
 
 static const struct of_device_id spacemit_wb_of_match[] = {
-- 
2.47.0

