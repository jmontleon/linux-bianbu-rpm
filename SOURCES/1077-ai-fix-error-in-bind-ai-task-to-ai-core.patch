From c1e4d41ae625280ba871609fdf72922a61193a96 Mon Sep 17 00:00:00 2001
From: zhangmeng <zhangmeng.kevin@spacemit.com>
Date: Fri, 16 Aug 2024 16:55:42 +0800
Subject: [PATCH 1077/1448] ai: fix error in bind ai task to ai core

Change-Id: Ic4d5ab9a55dea38e7cb15d093eb3a03c927d1694
---
 arch/riscv/kernel/traps.c | 25 ++++++++++++++++---------
 1 file changed, 16 insertions(+), 9 deletions(-)

diff --git a/arch/riscv/kernel/traps.c b/arch/riscv/kernel/traps.c
index d3b29e15c161..3ea81cb513d0 100644
--- a/arch/riscv/kernel/traps.c
+++ b/arch/riscv/kernel/traps.c
@@ -162,21 +162,28 @@ DO_ERROR_INFO(do_trap_insn_fault,
 asmlinkage __visible __trap_section void do_trap_insn_illegal(struct pt_regs *regs)
 {
 	bool handled;
-
 #ifdef CONFIG_BIND_THREAD_TO_AICORES
-        if ((regs->epc & AI_OPCODE_MASK0) == AI_OPCODE_MATCH0 ||
-            (regs->epc & AI_OPCODE_MASK1) == AI_OPCODE_MATCH1) {
-                struct cpumask mask;
-                pid_t pid = current->pid;
-				mask = ai_core_mask_get();
-                sched_setaffinity(pid, &mask);
-		return;
-        }
+	u32 epc;
 #endif
 
 	if (user_mode(regs)) {
 		irqentry_enter_from_user_mode(regs);
 
+#ifdef CONFIG_BIND_THREAD_TO_AICORES
+		/* check if trapped by ai instruction */
+		__get_user(epc, (u32 __user *)regs->epc);
+		if ((epc & AI_OPCODE_MASK0) == AI_OPCODE_MATCH0 ||
+			(epc & AI_OPCODE_MASK1) == AI_OPCODE_MATCH1) {
+			struct cpumask mask;
+			mask = ai_core_mask_get();
+			local_irq_enable();
+			sched_setaffinity(current->pid, &mask);
+			local_irq_disable();
+			irqentry_exit_to_user_mode(regs);
+			return;
+		}
+#endif
+
 		local_irq_enable();
 
 		handled = riscv_v_first_use_handler(regs);
-- 
2.47.0

