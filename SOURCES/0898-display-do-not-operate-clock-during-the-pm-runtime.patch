From b935828a2339d08c6f5582645845d70ab16c113f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E2=80=9Clilijun=E2=80=9D?= <“lijun.li@spacemit.com”>
Date: Tue, 2 Jul 2024 17:15:35 +0800
Subject: [PATCH 0898/1448] display: do not operate clock during the pm runtime

Change-Id: I39f36fccd4f46a2e418148e41e06a0cd7fa27dd9
---
 drivers/gpu/drm/spacemit/spacemit_dpu.c | 99 +++----------------------
 1 file changed, 11 insertions(+), 88 deletions(-)

diff --git a/drivers/gpu/drm/spacemit/spacemit_dpu.c b/drivers/gpu/drm/spacemit/spacemit_dpu.c
index 0c441c18b781..292f17aa3757 100644
--- a/drivers/gpu/drm/spacemit/spacemit_dpu.c
+++ b/drivers/gpu/drm/spacemit/spacemit_dpu.c
@@ -301,14 +301,13 @@ static void spacemit_crtc_atomic_enable(struct drm_crtc *crtc,
 
 	/* If bootloader logo is boot on, release its resources first */
 	if (unlikely(spacemit_dpu_logo_booton)) {
+		dpu_pm_suspend(dpu->dev);
 		pm_runtime_put_sync(dpu->dev);
 		spacemit_dpu_free_bootloader_mem();
 	}
 
-	if (!pm_runtime_status_suspended(dpu->dev))
-		dpu_pm_resume(dpu->dev);
-	else
-		pm_runtime_get_sync(dpu->dev);
+	pm_runtime_get_sync(dpu->dev);
+	dpu_pm_resume(dpu->dev);
 
 #ifdef CONFIG_SPACEMIT_DEBUG
 	dpu->is_working = true;
@@ -334,10 +333,8 @@ static void spacemit_crtc_atomic_disable(struct drm_crtc *crtc,
 	dpu->is_working = false;
 #endif
 
-	if (!pm_runtime_status_suspended(dpu->dev))
-		dpu_pm_suspend(dpu->dev);
-	else
-		pm_runtime_put_sync(dpu->dev);
+	dpu_pm_suspend(dpu->dev);
+	pm_runtime_put_sync(dpu->dev);
 
 	spin_lock_irq(&drm->event_lock);
 	if (crtc->state->event) {
@@ -962,8 +959,9 @@ static int spacemit_dpu_probe(struct platform_device *pdev)
 	// reset dpu
 	pm_runtime_enable(&pdev->dev);
 	pm_runtime_get_sync(&pdev->dev);
-
-	pm_runtime_put_sync(dpu->dev);
+	dpu_pm_resume(&pdev->dev);
+	dpu_pm_suspend(&pdev->dev);
+	pm_runtime_put_sync(&pdev->dev);
 	msleep(10);
 
 	/*
@@ -971,8 +969,10 @@ static int spacemit_dpu_probe(struct platform_device *pdev)
 	 * done in probe func as power domain framework will turn
 	 * on/off lcd power domain before/after probe func.
 	 */
-	if (spacemit_dpu_logo_booton)
+	if (spacemit_dpu_logo_booton) {
 		pm_runtime_get_sync(&pdev->dev);
+		dpu_pm_resume(&pdev->dev);
+	}
 
 	dpu->is_probed = true;
 
@@ -1083,95 +1083,18 @@ static int dpu_pm_resume(struct device *dev)
 static int dpu_rt_pm_suspend(struct device *dev)
 {
 	struct spacemit_dpu *dpu = dev_get_drvdata(dev);
-	int result;
 
 	DRM_DEBUG("%s() type %d\n", __func__, dpu->type);
 
-	if (dpu->core && dpu->core->disable_clk)
-		dpu->core->disable_clk(dpu);
-
-	if (dpu->type == HDMI) {
-		if (!IS_ERR_OR_NULL(dpu->hdmi_reset)) {
-			result = reset_control_assert(dpu->hdmi_reset);
-			if (result < 0) {
-				DRM_INFO("Failed to assert hdmi_reset: %d\n", result);
-			}
-		}
-	} else if (dpu->type == DSI) {
-
-		if (!IS_ERR_OR_NULL(dpu->lcd_reset)) {
-			result = reset_control_assert(dpu->lcd_reset);
-			if (result < 0) {
-				DRM_INFO("Failed to assert lcd_reset: %d\n", result);
-			}
-		}
-		if (!IS_ERR_OR_NULL(dpu->esc_reset)) {
-			result = reset_control_assert(dpu->esc_reset);
-			if (result < 0) {
-				DRM_INFO("Failed to assert esc_reset: %d\n", result);
-			}
-		}
-		if (!IS_ERR_OR_NULL(dpu->mclk_reset)) {
-			result = reset_control_assert(dpu->mclk_reset);
-			if (result < 0) {
-				DRM_INFO("Failed to assert mclk_reset: %d\n", result);
-			}
-		}
-		if (!IS_ERR_OR_NULL(dpu->dsi_reset)) {
-			result = reset_control_assert(dpu->dsi_reset);
-			if (result < 0) {
-				DRM_INFO("Failed to assert dsi_reset: %d\n", result);
-			}
-		}
-	}
-
 	return 0;
 }
 
 static int dpu_rt_pm_resume(struct device *dev)
 {
 	struct spacemit_dpu *dpu = dev_get_drvdata(dev);
-	int result;
 
 	DRM_DEBUG("%s() type %d\n", __func__, dpu->type);
 
-	if (dpu->type == HDMI) {
-		if (!IS_ERR_OR_NULL(dpu->hdmi_reset)) {
-			result = reset_control_deassert(dpu->hdmi_reset);
-			if (result < 0) {
-				DRM_INFO("Failed to deassert hdmi_reset: %d\n", result);
-			}
-		}
-	} else if (dpu->type == DSI){
-		if (!IS_ERR_OR_NULL(dpu->dsi_reset)) {
-			result = reset_control_deassert(dpu->dsi_reset);
-			if (result < 0) {
-				DRM_INFO("Failed to deassert dsi_reset: %d\n", result);
-			}
-		}
-		if (!IS_ERR_OR_NULL(dpu->mclk_reset)) {
-			result = reset_control_deassert(dpu->mclk_reset);
-			if (result < 0) {
-				DRM_INFO("Failed to deassert mclk_reset: %d\n", result);
-			}
-		}
-		if (!IS_ERR_OR_NULL(dpu->esc_reset)) {
-			result = reset_control_deassert(dpu->esc_reset);
-			if (result < 0) {
-				DRM_INFO("Failed to deassert esc_reset: %d\n", result);
-			}
-		}
-		if (!IS_ERR_OR_NULL(dpu->lcd_reset)) {
-			result = reset_control_deassert(dpu->lcd_reset);
-			if (result < 0) {
-				DRM_INFO("Failed to deassert lcd_reset: %d\n", result);
-			}
-		}
-	}
-
-	if (dpu->core && dpu->core->enable_clk)
-		dpu->core->enable_clk(dpu);
-
 	return 0;
 }
 
-- 
2.47.0

