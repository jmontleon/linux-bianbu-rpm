From 3068a21bb1782ba12708125569cf2598ec2673eb Mon Sep 17 00:00:00 2001
From: wanlong <long.wan@spacemit.com>
Date: Mon, 22 May 2023 11:09:59 +0800
Subject: [PATCH 0024/1202] riscv: mm: fix reserve cma for platform not having
 ZONE_DMA32

In case the phys_ram_base is exceeding SZ_4G, zone dma32 is empty,
and the cma reserve in dma_contiguous_reserve() will fail, to avoid
this situation, we should modify the limit.

Change-Id: I5504523c5b54a4e9d5582fcdbeb2665efb5292f3
---
 arch/riscv/Kconfig   | 1 +
 arch/riscv/mm/init.c | 7 ++++++-
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/arch/riscv/Kconfig b/arch/riscv/Kconfig
index 7612c52e9b1e..4e393a071e3f 100644
--- a/arch/riscv/Kconfig
+++ b/arch/riscv/Kconfig
@@ -214,6 +214,7 @@ config RISCV
 	select UACCESS_MEMCPY if !MMU
 	select USER_STACKTRACE_SUPPORT
 	select ZONE_DMA32 if 64BIT
+	select ZONE_DMA32 if 64BIT && !SOC_SPACEMIT_K1PRO
 
 config RUSTC_SUPPORTS_RISCV
 	def_bool y
diff --git a/arch/riscv/mm/init.c b/arch/riscv/mm/init.c
index 15b2eda4c364..d8c5016905af 100644
--- a/arch/riscv/mm/init.c
+++ b/arch/riscv/mm/init.c
@@ -318,7 +318,12 @@ static void __init setup_bootmem(void)
 	if (!IS_ENABLED(CONFIG_BUILTIN_DTB))
 		memblock_reserve(dtb_early_pa, fdt_totalsize(dtb_early_va));
 
-	dma_contiguous_reserve(dma32_phys_limit);
+#ifdef CONFIG_ZONE_DMA32
+ 	dma_contiguous_reserve(dma32_phys_limit);
+#else
+	dma_contiguous_reserve(PFN_PHYS(max_low_pfn));
+#endif
+
 	if (IS_ENABLED(CONFIG_64BIT))
 		hugetlb_cma_reserve(PUD_SHIFT - PAGE_SHIFT);
 }
-- 
2.47.0

