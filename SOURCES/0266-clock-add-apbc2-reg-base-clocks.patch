From 2f5da76ceb620deb75b8d5bc52d621ef6ae21ffc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E2=80=9Cweijinmei=E2=80=9D?= <jinmei.wei@spacemit.com>
Date: Thu, 28 Dec 2023 17:59:15 +0800
Subject: [PATCH 0266/1200] clock: add apbc2 reg base clocks

Change-Id: I479c6150be26891e691c4f170f7beef7235e599e
---
 drivers/clk/spacemit/ccu-spacemit-k1x.c       | 72 ++++++++++++++++++-
 drivers/clk/spacemit/ccu-spacemit-k1x.h       |  2 +
 .../dt-bindings/clock/spacemit-k1x-clock.h    | 10 ++-
 3 files changed, 82 insertions(+), 2 deletions(-)

diff --git a/drivers/clk/spacemit/ccu-spacemit-k1x.c b/drivers/clk/spacemit/ccu-spacemit-k1x.c
index 9da72995438f..abe7b4b29daf 100755
--- a/drivers/clk/spacemit/ccu-spacemit-k1x.c
+++ b/drivers/clk/spacemit/ccu-spacemit-k1x.c
@@ -153,6 +153,16 @@ DEFINE_SPINLOCK(g_cru_lock);
 #define APMU_EMAC1_CLK_RES_CTRL     0x3ec
 /* end of APMU register offset */
 
+/* APBC2 register offset */
+#define APBC2_UART1_CLK_RST		0x00
+#define APBC2_SSP2_CLK_RST		0x04
+#define APBC2_TWSI3_CLK_RST		0x08
+#define APBC2_RTC_CLK_RST		0x0c
+#define APBC2_TIMERS0_CLK_RST		0x10
+#define APBC2_KPC_CLK_RST		0x14
+#define APBC2_GPIO_CLK_RST		0x1c
+/* end of APBC2 register offset */
+
 struct spacemit_k1x_clk k1x_clock_controller;
 
 //apbs
@@ -1006,6 +1016,51 @@ static SPACEMIT_CCU_GATE(emac1_ptp_clk, "emac1_ptp_clk", "pll1_d3_819p2",
 	BIT(15), BIT(15), 0x0,
 	0);
 
+//apbc2
+static const char * const uart1_sec_parent_names[] = {
+	"pll1_m3d128_57p6", "slow_uart1_14p74", "slow_uart2_48"
+};
+static SPACEMIT_CCU_MUX_GATE(uart1_sec_clk, "uart1_sec_clk", uart1_sec_parent_names,
+	BASE_TYPE_APBC2, APBC2_UART1_CLK_RST,
+	4, 3, 0x3, 0x3, 0x0,
+	0);
+
+static const char *ssp2_sec_parent_names[] = { "pll1_d384_6p4", "pll1_d192_12p8", "pll1_d96_25p6",
+	"pll1_d48_51p2", "pll1_d768_3p2", "pll1_d1536_1p6", "pll1_d3072_0p8"
+};
+static SPACEMIT_CCU_MUX_GATE(ssp2_sec_clk, "ssp2_sec_clk", ssp2_sec_parent_names,
+	BASE_TYPE_APBC2, APBC2_SSP2_CLK_RST,
+	4, 3, 0x3, 0x3, 0x0,
+	0);
+static const char *twsi3_sec_parent_names[] = {
+	"pll1_d78_31p5", "pll1_d48_51p2", "pll1_d40_61p44"
+};
+static SPACEMIT_CCU_MUX_GATE(twsi3_sec_clk, "twsi3_sec_clk", twsi3_sec_parent_names,
+	BASE_TYPE_APBC2, APBC2_TWSI3_CLK_RST,
+	4, 3, 0x3, 0x3, 0x0,
+	0);
+static SPACEMIT_CCU_GATE(rtc_sec_clk, "rtc_sec_clk", "clk_32k",
+	BASE_TYPE_APBC2, APBC2_RTC_CLK_RST,
+	0x83, 0x83, 0x0, 0);
+static const char *timer_sec_parent_names[] = {
+	"pll1_d192_12p8", "clk_32k", "pll1_d384_6p4", "vctcxo_3", "vctcxo_1"
+};
+static SPACEMIT_CCU_MUX_GATE(timers0_sec_clk, "timers0_sec_clk", timer_sec_parent_names,
+	BASE_TYPE_APBC2, APBC2_TIMERS0_CLK_RST,
+	4, 3, 0x3, 0x3, 0x0,
+	0);
+static const char *kpc_sec_parent_names[] = {
+	"pll1_d192_12p8", "clk_32k", "pll1_d384_6p4", "vctcxo_3", "vctcxo_1"
+};
+static SPACEMIT_CCU_MUX_GATE(kpc_sec_clk, "kpc_sec_clk", kpc_sec_parent_names,
+	BASE_TYPE_APBC2, APBC2_KPC_CLK_RST,
+	4, 3, 0x3, 0x3, 0x0,
+	0);
+static SPACEMIT_CCU_GATE(gpio_sec_clk, "gpio_sec_clk", "vctcxo_24",
+	BASE_TYPE_APBC2, APBC2_GPIO_CLK_RST,
+	0x3, 0x3, 0x0,
+	0);
+
 static struct clk_hw_onecell_data spacemit_k1x_hw_clks = {
 	.hws	= {
 		[CLK_PLL2]		= &pll2.common.hw,
@@ -1177,7 +1232,13 @@ static struct clk_hw_onecell_data spacemit_k1x_hw_clks = {
 		[CLK_EMAC0_PTP]		= &emac0_ptp_clk.common.hw,
 		[CLK_EMAC1_BUS]		= &emac1_bus_clk.common.hw,
 		[CLK_EMAC1_PTP]		= &emac1_ptp_clk.common.hw,
-
+		[CLK_SEC_UART1]		= &uart1_sec_clk.common.hw,
+		[CLK_SEC_SSP2]		= &ssp2_sec_clk.common.hw,
+		[CLK_SEC_TWSI3]		= &twsi3_sec_clk.common.hw,
+		[CLK_SEC_RTC]		= &rtc_sec_clk.common.hw,
+		[CLK_SEC_TIMERS0]	= &timers0_sec_clk.common.hw,
+		[CLK_SEC_KPC]		= &kpc_sec_clk.common.hw,
+		[CLK_SEC_GPIO]		= &gpio_sec_clk.common.hw,
 	},
 	.num = CLK_MAX_NO,
 };
@@ -1248,6 +1309,9 @@ int ccu_common_init(struct clk_hw * hw, struct spacemit_k1x_clk *clk_info)
 	case BASE_TYPE_AUDC:
 		common->base = clk_info->audio_ctrl_base;
 		break;
+	case BASE_TYPE_APBC2:
+		common->base = clk_info->apbc2_base;
+		break;
 	default:
 		common->base = clk_info->apbc_base;
 		break;
@@ -1351,6 +1415,12 @@ static void spacemit_k1x_ccu_probe(struct device_node *np)
 			pr_err("failed to map ddrc registers\n");
 			goto out;
 		}
+
+		clk_info->apbc2_base = of_iomap(np, 7);
+		if (!clk_info->apbc2_base) {
+			pr_err("failed to map apbc2 registers\n");
+			goto out;
+		}
 	}
 	ret = spacemit_ccu_probe(np, clk_info, hw_clks);
 	LOG_INFO("init clock finish");
diff --git a/drivers/clk/spacemit/ccu-spacemit-k1x.h b/drivers/clk/spacemit/ccu-spacemit-k1x.h
index e31dee144bfe..46577e254328 100755
--- a/drivers/clk/spacemit/ccu-spacemit-k1x.h
+++ b/drivers/clk/spacemit/ccu-spacemit-k1x.h
@@ -19,6 +19,7 @@ enum ccu_base_type{
 	BASE_TYPE_DCIU       = 5,
 	BASE_TYPE_DDRC       = 6,
 	BASE_TYPE_AUDC       = 7,
+	BASE_TYPE_APBC2      = 8,
 };
 
 enum {
@@ -57,6 +58,7 @@ struct spacemit_k1x_clk {
 	void __iomem *dciu_base;
 	void __iomem *ddrc_base;
 	void __iomem *audio_ctrl_base;
+	void __iomem *apbc2_base;
 };
 
 struct clk_hw_table {
diff --git a/include/dt-bindings/clock/spacemit-k1x-clock.h b/include/dt-bindings/clock/spacemit-k1x-clock.h
index 78ebfc49c747..71200be019f0 100755
--- a/include/dt-bindings/clock/spacemit-k1x-clock.h
+++ b/include/dt-bindings/clock/spacemit-k1x-clock.h
@@ -173,5 +173,13 @@
 #define CLK_EMAC1_BUS  167
 #define CLK_EMAC1_PTP  168
 
-#define CLK_MAX_NO     169
+#define CLK_SEC_UART1   169
+#define CLK_SEC_SSP2    170
+#define CLK_SEC_TWSI3   171
+#define CLK_SEC_RTC     172
+#define CLK_SEC_TIMERS0 173
+#define CLK_SEC_KPC     174
+#define CLK_SEC_GPIO    175
+
+#define CLK_MAX_NO      176
 #endif /* _DT_BINDINGS_CLK_SPACEMIT_K1X_H_ */
-- 
2.47.0

