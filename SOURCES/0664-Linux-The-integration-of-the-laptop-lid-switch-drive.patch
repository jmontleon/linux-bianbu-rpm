From a3b037f3075e5cf74d8da60bdb4bee958a9184b9 Mon Sep 17 00:00:00 2001
From: goumin <min.gou@spacemit.com>
Date: Wed, 15 May 2024 21:25:44 +0800
Subject: [PATCH 0664/1200] Linux:The integration of the laptop lid switch
 driver requires waitingfor another commit to update the systemd package
 before it can function properly.

Change-Id: I40a2c23479270561a8bb8f981cd30dd6f73f25e1
---
 arch/riscv/boot/dts/spacemit/k1-x_kx312.dts |   6 +
 arch/riscv/configs/k1_defconfig             |   2 +
 drivers/soc/spacemit/Kconfig                |   6 +
 drivers/soc/spacemit/Makefile               |   1 +
 drivers/soc/spacemit/spacemit_lid.c         | 122 ++++++++++++++++++++
 5 files changed, 137 insertions(+)
 create mode 100644 drivers/soc/spacemit/spacemit_lid.c

diff --git a/arch/riscv/boot/dts/spacemit/k1-x_kx312.dts b/arch/riscv/boot/dts/spacemit/k1-x_kx312.dts
index efce0fd59df3..e91fd36b4dc3 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_kx312.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_kx312.dts
@@ -145,6 +145,12 @@ vcc_touchpad: vcc-touchpad {
 		gpios = <&gpio 49 0>;
 		vin-supply = <&ldo_8>;
 	};
+
+	spacemit_lid:spacemit_lid {
+		compatible = "spacemit,k1x-lid";
+		scan-interval-ms = <1000>;
+		lid-gpios     = <&gpio 74 0>;
+	};
 };
 
 &uart0 {
diff --git a/arch/riscv/configs/k1_defconfig b/arch/riscv/configs/k1_defconfig
index 937ae86ed972..28b58931887f 100644
--- a/arch/riscv/configs/k1_defconfig
+++ b/arch/riscv/configs/k1_defconfig
@@ -359,6 +359,7 @@ CONFIG_TOUCHSCREEN_GOODIX=y
 CONFIG_INPUT_MISC=y
 CONFIG_INPUT_UINPUT=y
 CONFIG_INPUT_SPACEMIT_POWERKEY=y
+CONFIG_SERIO_LIBPS2=y
 CONFIG_SERIAL_EARLYCON_RISCV_SBI=y
 CONFIG_SERIAL_PXA=y
 CONFIG_SERIAL_PXA_SPACEMIT_K1X=y
@@ -693,6 +694,7 @@ CONFIG_RPMSG_VIRTIO=y
 # CONFIG_DPAA2_CONSOLE is not set
 CONFIG_SPACEMIT_PM_DOMAINS=y
 CONFIG_SPACEMIT_REBOOT_CONTROL=y
+CONFIG_SPACEMIT_LID_CONTROL=y
 CONFIG_SPACEMI_K1X_DMA_RANGE=y
 CONFIG_CHIP_MEDIA_JPU=y
 CONFIG_SPACEMIT_V2D=y
diff --git a/drivers/soc/spacemit/Kconfig b/drivers/soc/spacemit/Kconfig
index 88612802f0eb..c36e986f25bb 100644
--- a/drivers/soc/spacemit/Kconfig
+++ b/drivers/soc/spacemit/Kconfig
@@ -21,6 +21,12 @@ config SPACEMIT_REBOOT_CONTROL
 	help
 	  Spacemit reboot into fastboot mode
 
+config SPACEMIT_LID_CONTROL
+	tristate "Spacemit lid control"
+	depends on SOC_SPACEMIT_K1X
+	help
+	  Spacemit screen lid control
+
 config SPACEMI_K1X_DMA_RANGE
 	tristate "Spacemit dram range driver for k1x"
 	depends on SOC_SPACEMIT_K1X
diff --git a/drivers/soc/spacemit/Makefile b/drivers/soc/spacemit/Makefile
index 5d865c275a69..61fc72c15c4e 100644
--- a/drivers/soc/spacemit/Makefile
+++ b/drivers/soc/spacemit/Makefile
@@ -4,3 +4,4 @@ obj-$(CONFIG_SPACEMIT_V2D)    += v2d/
 obj-$(CONFIG_SPACEMIT_RFKILL)   += spacemit-rf/
 obj-$(CONFIG_SPACEMIT_REBOOT_CONTROL)	+= spacemit_reboot.o
 obj-$(CONFIG_SPACEMI_K1X_DMA_RANGE) += k1x-dma-range.o
+obj-$(CONFIG_SPACEMIT_LID_CONTROL)	+= spacemit_lid.o
diff --git a/drivers/soc/spacemit/spacemit_lid.c b/drivers/soc/spacemit/spacemit_lid.c
new file mode 100644
index 000000000000..37031d806aeb
--- /dev/null
+++ b/drivers/soc/spacemit/spacemit_lid.c
@@ -0,0 +1,122 @@
+// SPDX-License-Identifier: GPL-2.0-only
+/*
+ * Driver for simulating a mouse on GPIO lines.
+ *
+ * Copyright (C) 2007 Atmel Corporation
+ * Copyright (C) 2017 Linus Walleij <linus.walleij@linaro.org>
+ */
+
+#include <linux/module.h>
+#include <linux/platform_device.h>
+#include <linux/input.h>
+#include <linux/gpio/consumer.h>
+#include <linux/property.h>
+#include <linux/of.h>
+
+/**
+ * struct gpio_lid
+ *
+ * This struct must be added to the platform_device in the board code.
+ * It is used by the gpio_lid driver to setup GPIO lines and to
+ * calculate mouse movement.
+ */
+struct gpio_lid {
+	u32 scan_ms;
+	struct gpio_desc *blid;
+	int old_state;
+};
+
+/*
+ * Timer function which is run every scan_ms ms when the device is opened.
+ * The dev input variable is set to the input_dev pointer.
+ */
+static void spacemit_lid_scan(struct input_dev *input)
+{
+	struct gpio_lid *gpio = input_get_drvdata(input);
+	int state = 0;
+
+	if (gpio->blid)
+		state = gpiod_get_value(gpio->blid);
+
+	if (gpio->old_state != state) {
+		dev_warn(&input->dev, "spacemit_lid: state = %d\n", state);
+		gpio->old_state = state;
+ 		input_report_switch(input, SW_LID, !state);
+ 		input_sync(input);
+	}
+}
+
+static int spacemit_lid_probe(struct platform_device *pdev)
+{
+	struct device *dev = &pdev->dev;
+	struct gpio_lid *glid;
+	struct input_dev *input;
+	int error;
+
+	glid = devm_kzalloc(dev, sizeof(*glid), GFP_KERNEL);
+	if (!glid)
+		return -ENOMEM;
+
+	/* Assign some default scanning time */
+	error = device_property_read_u32(dev, "scan-interval-ms", &glid->scan_ms);
+	if (error || glid->scan_ms == 0) {
+		dev_warn(dev, "invalid scan time, set to 1000 ms\n");
+		glid->scan_ms = 1000;
+	}
+
+	glid->blid = devm_gpiod_get(dev, "lid", GPIOD_IN);
+	if (IS_ERR(glid->blid))
+		return PTR_ERR(glid->blid);
+
+	glid->old_state = 0;
+
+	input = devm_input_allocate_device(dev);
+	if (!input)
+		return -ENOMEM;
+
+	input->name = pdev->name;
+	input->id.bustype = BUS_HOST;
+
+	input_set_drvdata(input, glid);
+
+	if (glid->blid)
+		input_set_capability(input, EV_SW, SW_LID);
+
+	error = input_setup_polling(input, spacemit_lid_scan);
+	if (error)
+		return error;
+
+	input_set_poll_interval(input, glid->scan_ms);
+
+	error = input_register_device(input);
+	if (error) {
+		dev_err(dev, "could not register input device\n");
+		return error;
+	}
+
+	dev_dbg(dev, "%d ms scan time, buttons: %s\n",
+		glid->scan_ms,
+		glid->blid ? "" : "lid");
+
+	return 0;
+}
+
+static const struct of_device_id spacemit_lid_of_match[] = {
+	{ .compatible = "spacemit,k1x-lid", },
+	{ },
+};
+MODULE_DEVICE_TABLE(of, spacemit_lid_of_match);
+
+static struct platform_driver spacemit_lid_device_driver = {
+	.probe		= spacemit_lid_probe,
+	.driver		= {
+		.name	= "spacemit-lid",
+		.of_match_table = spacemit_lid_of_match,
+	}
+};
+module_platform_driver(spacemit_lid_device_driver);
+
+MODULE_AUTHOR("Hans-Christian Egtvedt <egtvedt@samfundet.no>");
+MODULE_DESCRIPTION("spacemit lid driver");
+MODULE_LICENSE("GPL");
+MODULE_ALIAS("platform:spacemit-lid"); /* work with hotplug and coldplug */
-- 
2.47.0

