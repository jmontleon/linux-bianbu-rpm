From f762632084e0a54b5307aa57690ded75b717e502 Mon Sep 17 00:00:00 2001
From: wanlong <long.wan@spacemit.com>
Date: Wed, 26 Jun 2024 10:14:49 +0800
Subject: [PATCH 0881/1448] wireless: rtl8852bs: enable gpio wakeup

Change-Id: I1835975a3d9e08fe715fd2313a5b1b20cd68bd27
---
 drivers/net/wireless/realtek/rtl8852bs/Makefile        |  4 ++--
 .../realtek/rtl8852bs/os_dep/linux/sdio_intf.c         | 10 ++++++++++
 drivers/net/wireless/realtek/rtl8852bs/phl/phl_wow.c   |  6 +++---
 3 files changed, 15 insertions(+), 5 deletions(-)

diff --git a/drivers/net/wireless/realtek/rtl8852bs/Makefile b/drivers/net/wireless/realtek/rtl8852bs/Makefile
index 8794b98d980c..2af36254f16b 100644
--- a/drivers/net/wireless/realtek/rtl8852bs/Makefile
+++ b/drivers/net/wireless/realtek/rtl8852bs/Makefile
@@ -161,7 +161,7 @@ endif
 EXTRA_CFLAGS += -DRTW_NETWORK_LINK_MAX=$(RTW_NETWORK_LINK_MAX)
 EXTRA_CFLAGS += -DDTYPE=$(DTYPE)
 ######################## Wake On Lan ##########################
-CONFIG_WOWLAN = n
+CONFIG_WOWLAN = y
 # CONFIG_WAKE_TYPE definition:
 #    bit0: magic packet
 #    bit1: unicast packet (default pattern match)
@@ -172,7 +172,7 @@ CONFIG_WAKEUP_TYPE = 0x0f
 #bit0: disBBRF off, #bit1: Wireless remote controller (WRC)
 CONFIG_SUSPEND_TYPE = 0
 CONFIG_WOW_STA_MIX = n
-CONFIG_GPIO_WAKEUP = n
+CONFIG_GPIO_WAKEUP = y
 # Please contact with RTK support team first. After getting the agreement from RTK support team, 
 # you are just able to modify the CONFIG_WAKEUP_GPIO_IDX with customized requirement.
 CONFIG_WAKEUP_GPIO_IDX = default
diff --git a/drivers/net/wireless/realtek/rtl8852bs/os_dep/linux/sdio_intf.c b/drivers/net/wireless/realtek/rtl8852bs/os_dep/linux/sdio_intf.c
index de6ea4bdcc4c..50aa730fd074 100644
--- a/drivers/net/wireless/realtek/rtl8852bs/os_dep/linux/sdio_intf.c
+++ b/drivers/net/wireless/realtek/rtl8852bs/os_dep/linux/sdio_intf.c
@@ -16,6 +16,7 @@
 
 #include <drv_types.h>
 #include <platform_ops.h>
+#include <linux/pm_wakeirq.h>
 extern struct rtw_intf_ops sdio_ops;
 
 #ifndef CONFIG_SDIO_HCI
@@ -171,6 +172,7 @@ static u8 gpio_hostwakeup_alloc_irq(_adapter *padapter)
 {
 	int err;
 	u32 status = 0;
+	struct device *dev = dvobj_to_dev(padapter->dvobj);
 
 	if (oob_irq == 0) {
 		RTW_INFO("oob_irq ZERO!\n");
@@ -197,6 +199,8 @@ static u8 gpio_hostwakeup_alloc_irq(_adapter *padapter)
 	} else
 		RTW_INFO("allocate gpio irq %d ok\n", oob_irq);
 
+	device_init_wakeup(dev, true);
+	dev_pm_set_wake_irq(dev, oob_irq);
 #ifndef CONFIG_PLATFORM_ARM_SUN8I
 	enable_irq_wake(oob_irq);
 #endif
@@ -205,10 +209,13 @@ static u8 gpio_hostwakeup_alloc_irq(_adapter *padapter)
 
 static void gpio_hostwakeup_free_irq(_adapter *padapter)
 {
+	struct device *dev = dvobj_to_dev(padapter->dvobj);
 
 	if (oob_irq == 0)
 		return;
 
+	dev_pm_clear_wake_irq(dev);
+	device_init_wakeup(dev, false);
 #ifndef CONFIG_PLATFORM_ARM_SUN8I
 	disable_irq_wake(oob_irq);
 #endif
@@ -1017,6 +1024,9 @@ static int __init rtw_drv_entry(void)
 #endif /* CONFIG_RTKM */
 
 	rtw_android_wifictrl_func_add();
+#ifdef CONFIG_GPIO_WAKEUP
+	platform_wifi_get_oob_irq(&oob_irq);
+#endif
 
 	ret = platform_wifi_power_on();
 	if (ret) {
diff --git a/drivers/net/wireless/realtek/rtl8852bs/phl/phl_wow.c b/drivers/net/wireless/realtek/rtl8852bs/phl/phl_wow.c
index 1a8645d6b356..3bde6ea26659 100644
--- a/drivers/net/wireless/realtek/rtl8852bs/phl/phl_wow.c
+++ b/drivers/net/wireless/realtek/rtl8852bs/phl/phl_wow.c
@@ -1971,7 +1971,7 @@ enum rtw_phl_status phl_wow_ps_pwr_cfg(struct phl_wow_info *wow_info, bool enter
 	struct phl_info_t *phl_info = wow_info->phl_info;
 
 	if (wow_info->ps_pwr_lvl == PS_PWR_LVL_PWRON)
-		return hstatus;
+		return (enum rtw_phl_status)hstatus;
 
 	if (wow_info->op_mode == RTW_WOW_OP_DISCONNECT_STBY) {
 		hstatus = rtw_hal_ps_pwr_lvl_cfg(phl_info->phl_com, phl_info->hal,
@@ -2059,7 +2059,7 @@ enum rtw_phl_status rtw_phl_cfg_wow_set_sw_gpio_mode(void *phl, struct rtw_wow_g
 
 	wow_gpio->dev2hst_gpio = info->dev2hst_gpio;
 	wow_gpio->dev2hst_gpio_mode = info->dev2hst_gpio_mode;
-	phl_status = rtw_hal_set_sw_gpio_mode(phl_info->phl_com, phl_info->hal
+	phl_status = (enum rtw_phl_status)rtw_hal_set_sw_gpio_mode(phl_info->phl_com, phl_info->hal
 		, wow_gpio->dev2hst_gpio_mode, wow_gpio->dev2hst_gpio);
 
 	PHL_INFO("%s, gpio=%d, gpio_mode=%d\n", __FUNCTION__
@@ -2078,7 +2078,7 @@ enum rtw_phl_status rtw_phl_cfg_wow_sw_gpio_ctrl(void *phl, struct rtw_wow_gpio_
 	FUNCIN();
 
 	wow_gpio->dev2hst_high = info->dev2hst_high;
-	phl_status = rtw_hal_sw_gpio_ctrl(phl_info->phl_com, phl_info->hal
+	phl_status = (enum rtw_phl_status)rtw_hal_sw_gpio_ctrl(phl_info->phl_com, phl_info->hal
 		, wow_gpio->dev2hst_high, wow_gpio->dev2hst_gpio);
 
 	PHL_INFO("%s, gpio=%d, output=%d\n", __FUNCTION__
-- 
2.47.0

