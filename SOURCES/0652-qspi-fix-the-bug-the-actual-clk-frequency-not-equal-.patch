From 10b4b4e0cb939089ef307728f4a766c6d075f4ec Mon Sep 17 00:00:00 2001
From: huzhen <george.hu@spacemit.com>
Date: Tue, 14 May 2024 14:41:47 +0800
Subject: [PATCH 0652/1205] qspi: fix the bug the actual clk frequency not
 equal the set frequency

  The correct way to set the frequency of qspi
   1.disable clk and assert reset
   2.set the frequency
   3.enable clk and deassert reset.

Change-Id: I7d71bb38407b6010e1847dae4c7aa9ee6dc2f88d
---
 drivers/spi/spi-k1x-qspi.c | 30 +++++++++++++-----------------
 1 file changed, 13 insertions(+), 17 deletions(-)

diff --git a/drivers/spi/spi-k1x-qspi.c b/drivers/spi/spi-k1x-qspi.c
index b517b96cd999..467b6fa53145 100644
--- a/drivers/spi/spi-k1x-qspi.c
+++ b/drivers/spi/spi-k1x-qspi.c
@@ -402,7 +402,9 @@ static int qspi_set_func_clk(struct k1x_qspi *qspi)
 		dev_err(qspi->dev, "can not find the bus clock\n");
 		return -EINVAL;
 	}
-	clk_prepare_enable(qspi->bus_clk);
+
+	clk_disable_unprepare(qspi->bus_clk);
+	clk_disable_unprepare(qspi->clk);
 
 	ret = clk_set_rate(qspi->clk, qspi->max_hz);
 	if (ret) {
@@ -416,25 +418,14 @@ static int qspi_set_func_clk(struct k1x_qspi *qspi)
 		return ret;
 	}
 
+	clk_prepare_enable(qspi->bus_clk);
+
 	dev_dbg(qspi->dev, "bus clock %dHz, PMUap reg[0x%08x]:0x%08x\n",
 		qspi->max_hz, qspi->pmuap_reg, qspi_readl(qspi, qspi->pmuap_addr));
 
 	return 0;
 }
 
-static int qspi_controller_reset(struct k1x_qspi *qspi)
-{
-	qspi->resets = devm_reset_control_array_get_optional_exclusive(qspi->dev);
-	if (IS_ERR(qspi->resets)) {
-		dev_err(qspi->dev, "Failed to get qspi's resets\n");
-		return PTR_ERR(qspi->resets);
-	}
-
-	reset_control_deassert(qspi->resets);
-	return 0;
-}
-
-
 static void qspi_config_mfp(struct k1x_qspi *qspi)
 {
 	int cs = qspi->cs_selected;
@@ -1327,14 +1318,19 @@ static int k1x_qspi_host_init(struct k1x_qspi *qspi)
 	void __iomem *base = qspi->io_map;
 	u32 reg;
 
+	qspi->resets = devm_reset_control_array_get_optional_exclusive(qspi->dev);
+	if (IS_ERR(qspi->resets)) {
+		dev_err(qspi->dev, "Failed to get qspi's resets\n");
+		return PTR_ERR(qspi->resets);
+	}
+
 	/* config mfp */
 	qspi_config_mfp(qspi);
 
+	reset_control_assert(qspi->resets);
 	/* set PMUap */
 	qspi_set_func_clk(qspi);
-
-	/* reset qspi controller */
-	qspi_controller_reset(qspi);
+	reset_control_deassert(qspi->resets);
 
 	/* rest qspi */
 	qspi_reset(qspi);
-- 
2.47.0

