From 90e0741f1401e9c23fce3e48cf6fc58d2f88b83c Mon Sep 17 00:00:00 2001
From: Pan Junzhong <junzhong.pan@spacemit.com>
Date: Thu, 12 Dec 2024 20:46:36 +0800
Subject: [PATCH 1394/1451] k1: usb: dwc3: gadget: notify disconnect from
 role-switch none

Change-Id: I8aa96a00686d71fcb8b0d8daeff5f778215cff70
---
 drivers/usb/dwc3/core.h   |  4 ++++
 drivers/usb/dwc3/drd.c    | 18 ++++++++++++++++++
 drivers/usb/dwc3/gadget.c | 38 +++++++++++++++++++++++++++++++++++++-
 3 files changed, 59 insertions(+), 1 deletion(-)

diff --git a/drivers/usb/dwc3/core.h b/drivers/usb/dwc3/core.h
index 516bace7e1dc..6ffc1e54ae30 100644
--- a/drivers/usb/dwc3/core.h
+++ b/drivers/usb/dwc3/core.h
@@ -1309,6 +1309,10 @@ struct dwc3 {
 
 	unsigned		connected:1;
 	unsigned		softconnect:1;
+#ifdef CONFIG_SOC_SPACEMIT_K1X
+	bool			monitor_vbus:1;
+	bool			vbus_session:1;
+#endif
 	unsigned		delayed_status:1;
 	unsigned		ep0_bounced:1;
 	unsigned		ep0_expect_in:1;
diff --git a/drivers/usb/dwc3/drd.c b/drivers/usb/dwc3/drd.c
index 57ddd2e43022..b5fcc9978698 100644
--- a/drivers/usb/dwc3/drd.c
+++ b/drivers/usb/dwc3/drd.c
@@ -452,6 +452,17 @@ static int dwc3_usb_role_switch_set(struct usb_role_switch *sw,
 		break;
 	case USB_ROLE_DEVICE:
 		mode = DWC3_GCTL_PRTCAP_DEVICE;
+#ifdef CONFIG_SOC_SPACEMIT_K1X
+		if (dwc->monitor_vbus && dwc->gadget)
+			usb_gadget_vbus_connect(dwc->gadget);
+		break;
+#endif
+#ifdef CONFIG_SOC_SPACEMIT_K1X
+	case USB_ROLE_NONE:
+		mode = DWC3_GCTL_PRTCAP_DEVICE;
+		if (dwc->monitor_vbus && dwc->gadget)
+			usb_gadget_vbus_disconnect(dwc->gadget);
+#endif
 		break;
 	default:
 		if (dwc->role_switch_default_mode == USB_DR_MODE_HOST)
@@ -477,7 +488,14 @@ static enum usb_role dwc3_usb_role_switch_get(struct usb_role_switch *sw)
 		role = USB_ROLE_HOST;
 		break;
 	case DWC3_GCTL_PRTCAP_DEVICE:
+#ifdef CONFIG_SOC_SPACEMIT_K1X
+		if (dwc->vbus_session)
+			role = USB_ROLE_DEVICE;
+		else
+			role = USB_ROLE_NONE;
+#else
 		role = USB_ROLE_DEVICE;
+#endif
 		break;
 	case DWC3_GCTL_PRTCAP_OTG:
 		role = dwc->current_otg_role;
diff --git a/drivers/usb/dwc3/gadget.c b/drivers/usb/dwc3/gadget.c
index 9b8099cba414..3246f9b2b9d7 100644
--- a/drivers/usb/dwc3/gadget.c
+++ b/drivers/usb/dwc3/gadget.c
@@ -2750,6 +2750,34 @@ static int dwc3_gadget_soft_connect(struct dwc3 *dwc)
 	return dwc3_gadget_run_stop(dwc, true);
 }
 
+#ifdef CONFIG_SOC_SPACEMIT_K1X
+static void dwc3_gadget_disconnect_interrupt(struct dwc3 *dwc);
+
+static int dwc3_gadget_vbus_session(struct usb_gadget *g, int vbus_on)
+{
+	struct dwc3		*dwc = gadget_to_dwc(g);
+	unsigned long flags;
+
+	vbus_on = !!vbus_on;
+
+	dwc->vbus_session = vbus_on;
+
+	if (vbus_on || !dwc->connected || !dwc->gadget_driver) {
+		dev_dbg(dwc->dev, "do nothing when vbus %d\n", vbus_on);
+		return 0;
+	}
+
+	dev_dbg(dwc->dev, "phy/connector report vbus disconnected\n");
+	local_bh_disable();
+	spin_lock_irqsave(&dwc->lock, flags);
+	dwc3_gadget_disconnect_interrupt(dwc);
+	spin_unlock_irqrestore(&dwc->lock, flags);
+	local_bh_enable();
+
+	return 0;
+}
+#endif
+
 static int dwc3_gadget_pullup(struct usb_gadget *g, int is_on)
 {
 	struct dwc3		*dwc = gadget_to_dwc(g);
@@ -3162,6 +3190,9 @@ static const struct usb_gadget_ops dwc3_gadget_ops = {
 	.func_wakeup		= dwc3_gadget_func_wakeup,
 	.set_remote_wakeup	= dwc3_gadget_set_remote_wakeup,
 	.set_selfpowered	= dwc3_gadget_set_selfpowered,
+#ifdef CONFIG_SOC_SPACEMIT_K1X
+	.vbus_session		= dwc3_gadget_vbus_session,
+#endif
 	.pullup			= dwc3_gadget_pullup,
 	.udc_start		= dwc3_gadget_start,
 	.udc_stop		= dwc3_gadget_stop,
@@ -4649,7 +4680,12 @@ int dwc3_gadget_init(struct dwc3 *dwc)
 	dwc->gadget->name		= "dwc3-gadget";
 	dwc->gadget->lpm_capable	= !dwc->usb2_gadget_lpm_disable;
 	dwc->gadget->wakeup_capable	= true;
-
+#ifdef CONFIG_SOC_SPACEMIT_K1X
+	dwc->monitor_vbus = device_property_read_bool(dwc->dev, "monitor-vbus");
+	dwc->vbus_session = !dwc->monitor_vbus;
+	if (dwc->monitor_vbus)
+		dev_info(dev, "enable vbus monitoring\n");
+#endif
 	/*
 	 * FIXME We might be setting max_speed to <SUPER, however versions
 	 * <2.20a of dwc3 have an issue with metastability (documented
-- 
2.47.0

