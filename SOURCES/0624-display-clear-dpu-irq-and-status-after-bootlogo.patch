From 714a3ee3b50d896311bda79dd933463cf6ca4e68 Mon Sep 17 00:00:00 2001
From: lilijun <lijun.li@spacemit.com>
Date: Tue, 30 Apr 2024 15:48:06 +0800
Subject: [PATCH 0624/1189] display: clear dpu irq and status after bootlogo

Change-Id: I1cba77d635caf4038f684913433fb5d2f1d3ab3c
---
 drivers/gpu/drm/spacemit/dpu/dpu_saturn.c | 45 +++++++++++++++++++++++
 1 file changed, 45 insertions(+)

diff --git a/drivers/gpu/drm/spacemit/dpu/dpu_saturn.c b/drivers/gpu/drm/spacemit/dpu/dpu_saturn.c
index 9e18561bbd08..d1e92d4c4233 100644
--- a/drivers/gpu/drm/spacemit/dpu/dpu_saturn.c
+++ b/drivers/gpu/drm/spacemit/dpu/dpu_saturn.c
@@ -475,17 +475,62 @@ static int dpu_update_bw(struct spacemit_dpu *dpu, uint64_t bw)
 static int dpu_finish_uboot(struct spacemit_dpu *dpu)
 {
 	void __iomem *base;
+	u32 value;
+
+	DRM_DEBUG("%s() type %d\n", __func__, dpu->type);
 
 	if (dpu->type == HDMI) {
 		base = (void __iomem *)ioremap(0xC0440000, 0x2A000);
+		// hdmi dpu int regs
+		writel(0x00, base + 0x910);
+		writel(0x00, base + 0x938);
+		//writel(0x00, base + 0x960);
+
+		// hdmi dpu ctl regs
 		writel(0x00, base + 0x560);
 		writel(0x01, base + 0x56c);
+		// writel(0x00, base + 0x58c);
+
+		value = readl_relaxed(base + 0x910);
+		DRM_DEBUG("%s hdmi int reg4 0x910:0x%x\n", __func__, value);
+		value = readl_relaxed(base + 0x938);
+		DRM_DEBUG("%s hdmi int reg14 0x938:0x%x\n", __func__, value);
+		value = readl_relaxed(base + 0x960);
+		DRM_DEBUG("%s hdmi int reg24 0x960:0x%x\n", __func__, value);
+		value = readl_relaxed(base + 0x560);
+		DRM_DEBUG("%s hdmi ctl reg24 0x560:0x%x\n", __func__, value);
+		value = readl_relaxed(base + 0x56c);
+		DRM_DEBUG("%s hdmi ctl reg27 0x56c:0x%x\n", __func__, value);
+		value = readl_relaxed(base + 0x58c);
+		DRM_DEBUG("%s hdmi ctl reg35 0x56c:0x%x\n", __func__, value);
+
 		udelay(100);
 		iounmap(base);
 	} else if (dpu->type == DSI) {
 		base = (void __iomem *)ioremap(0xc0340000, 0x2A000);
+		// mipi dsi dpu int regs
+		writel(0x00, base + 0x910);
+		writel(0x00, base + 0x938);
+		//writel(0x00, base + 0x960);
+
+		// mipi dsi dpu ctl regs
 		writel(0x00, base + 0x560);
 		writel(0x01, base + 0x56c);
+		// writel(0x00, base + 0x58c);
+
+		value = readl_relaxed(base + 0x910);
+		DRM_DEBUG("%s mipi dsi int reg4 0x910:0x%x\n", __func__, value);
+		value = readl_relaxed(base + 0x938);
+		DRM_DEBUG("%s mipi dsi int reg14 0x938:0x%x\n", __func__, value);
+		value = readl_relaxed(base + 0x960);
+		DRM_DEBUG("%s mipi dsi int reg24 0x960:0x%x\n", __func__, value);
+		value = readl_relaxed(base + 0x560);
+		DRM_DEBUG("%s mipi dsi ctl reg24 0x560:0x%x\n", __func__, value);
+		value = readl_relaxed(base + 0x56c);
+		DRM_DEBUG("%s mipi dsi ctl reg27 0x56c:0x%x\n", __func__, value);
+		value = readl_relaxed(base + 0x58c);
+		DRM_DEBUG("%s mipi dsi ctl reg35 0x56c:0x%x\n", __func__, value);
+
 		udelay(100);
 		iounmap(base);
 	} else {
-- 
2.47.1

