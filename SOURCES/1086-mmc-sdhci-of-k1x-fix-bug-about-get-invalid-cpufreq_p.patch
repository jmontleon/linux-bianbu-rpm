From 2761f8483e112c7451be05ab8c73b15e00a1b128 Mon Sep 17 00:00:00 2001
From: wanlong <long.wan@spacemit.com>
Date: Sat, 9 Nov 2024 11:50:48 +0800
Subject: [PATCH 1086/1204] mmc: sdhci-of-k1x: fix bug about get invalid
 cpufreq_policy

Change-Id: I8b7190983fec01d1c76172a5c09cd009a2868275
---
 drivers/mmc/host/sdhci-of-k1x.c | 9 ++++-----
 1 file changed, 4 insertions(+), 5 deletions(-)

diff --git a/drivers/mmc/host/sdhci-of-k1x.c b/drivers/mmc/host/sdhci-of-k1x.c
index 8ea334cc4c4e..1c91e1a73431 100644
--- a/drivers/mmc/host/sdhci-of-k1x.c
+++ b/drivers/mmc/host/sdhci-of-k1x.c
@@ -1187,7 +1187,7 @@ static int spacemit_sdhci_execute_sw_tuning(struct sdhci_host *host, u32 opcode)
 	struct mmc_ios ios = mmc->ios;
 	struct k1x_sdhci_platdata *pdata = mmc->parent->platform_data;
 	struct rx_tuning *rxtuning = &pdata->rxtuning;
-	struct cpufreq_policy *policy;
+	struct cpufreq_policy *policy = NULL;
 	unsigned int clk_rate;
 
 	/*
@@ -1239,7 +1239,7 @@ static int spacemit_sdhci_execute_sw_tuning(struct sdhci_host *host, u32 opcode)
 
 	/* specify cpu freq during tuning rx windows if current cpufreq exceed 1.6G */
 	if (pdata->rx_tuning_freq) {
-		clk_rate= cpufreq_generic_get(0);
+		clk_rate = cpufreq_generic_get(0);
 		if (clk_rate && (clk_rate != pdata->rx_tuning_freq)) {
 			policy = cpufreq_cpu_get(0);
 			if (policy) {
@@ -1284,11 +1284,10 @@ static int spacemit_sdhci_execute_sw_tuning(struct sdhci_host *host, u32 opcode)
 		mmc_hostname(mmc), rxtuning->select_delay[0]);
 
 restore_freq:
-	if (pdata->rx_tuning_freq) {
+	if (pdata->rx_tuning_freq && policy) {
 		if (clk_rate)
 			cpufreq_driver_target(policy, clk_rate, 0);
-		if (policy)
-			cpufreq_cpu_put(policy);
+		cpufreq_cpu_put(policy);
 	}
 	return ret;
 }
-- 
2.47.0

