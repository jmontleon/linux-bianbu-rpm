From 3cecae611c295a87846719ecaa735fb1e91d7399 Mon Sep 17 00:00:00 2001
From: huzhen <george.hu@spacemit.com>
Date: Fri, 29 Mar 2024 17:48:16 +0800
Subject: [PATCH 0532/1206] pcie: getting the num lanes of pcie controller in
 phy_init

Change-Id: I77b4f4f1041cf9b931bebb435d3b1dd1b2007a94
---
 drivers/pci/controller/dwc/pcie-k1x.c | 17 +++++++++++------
 1 file changed, 11 insertions(+), 6 deletions(-)

diff --git a/drivers/pci/controller/dwc/pcie-k1x.c b/drivers/pci/controller/dwc/pcie-k1x.c
index 90ef7db15ad7..f5948d1a1706 100755
--- a/drivers/pci/controller/dwc/pcie-k1x.c
+++ b/drivers/pci/controller/dwc/pcie-k1x.c
@@ -137,6 +137,7 @@ struct k1x_pcie {
 	struct phy		**phy;
 	int pcie_init_before_kernel;
 	int			port_id;
+	int			num_lanes;
 	int			link_gen;
 	struct irq_domain	*irq_domain;
 	enum dw_pcie_device_mode mode;
@@ -376,12 +377,7 @@ void rterm_force(struct k1x_pcie *k1x, u32 pcie_rcal)
 	int i, lane;
 	u32 val = 0;
 
-	if (k1x->port_id != 0x0) {
-		lane = 2;
-	} else {
-		lane = 1;
-	}
-
+	lane = k1x->num_lanes;
 	printk("pcie_rcal = 0x%08x\n", pcie_rcal);
 	printk("pcie port id = %d, lane num = %d\n", k1x->port_id, lane);
 
@@ -1485,6 +1481,15 @@ static int __init k1x_pcie_probe(struct platform_device *pdev)
 		return -EINVAL;
 	}
 
+	if (of_property_read_u32(np, "num-lanes", &k1x->num_lanes)) {
+		dev_warn(dev, "Failed to get pcie's port num-lanes.\n");
+		k1x->num_lanes = 1;
+	}
+	if((k1x->num_lanes < 1) || (k1x->num_lanes > 2)) {
+		dev_warn(dev, "configuration of num-lanes is invalid.\n");
+		k1x->num_lanes = 1;
+	}
+
 	/* parse clk source*/
 	k1x->clk_pcie = devm_clk_get(dev, "pcie-clk");
 	if (IS_ERR(k1x->clk_pcie))
-- 
2.47.0

