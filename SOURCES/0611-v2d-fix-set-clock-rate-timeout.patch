From 5956ca2764c36c120789b2d7ad87bda9d55287d5 Mon Sep 17 00:00:00 2001
From: lilijun <lijun.li@spacemit.com>
Date: Fri, 26 Apr 2024 14:38:45 +0800
Subject: [PATCH 0611/1204] v2d: fix set clock rate timeout

Change-Id: I982954e91d357daedfb2e90a335f6bca73299754
---
 arch/riscv/boot/dts/spacemit/k1-x.dtsi |  2 ++
 drivers/soc/spacemit/v2d/v2d_drv.c     | 23 +++++++++++++++++++++++
 drivers/soc/spacemit/v2d/v2d_priv.h    |  2 ++
 3 files changed, 27 insertions(+)

diff --git a/arch/riscv/boot/dts/spacemit/k1-x.dtsi b/arch/riscv/boot/dts/spacemit/k1-x.dtsi
index a1576fa16ea6..01a41b5ec0b2 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x.dtsi
+++ b/arch/riscv/boot/dts/spacemit/k1-x.dtsi
@@ -2225,6 +2225,8 @@ v2d@c0100000 {
 			clocks = <&ccu CLK_DPU_MCLK>,
 				 <&ccu CLK_V2D>;
 			clock-names = "v2d-io", "v2d-core";
+			resets = <&reset RESET_V2D>;
+			reset-names= "v2d_reset";
 			interrupt-parent = <&intc>;
 			interrupts = <86>;
 			interconnects = <&dram_range1>;
diff --git a/drivers/soc/spacemit/v2d/v2d_drv.c b/drivers/soc/spacemit/v2d/v2d_drv.c
index f153a540ce74..ef8364552656 100644
--- a/drivers/soc/spacemit/v2d/v2d_drv.c
+++ b/drivers/soc/spacemit/v2d/v2d_drv.c
@@ -777,6 +777,7 @@ static int v2d_probe(struct platform_device *pdev)
 	void __iomem *base;
 	int i, rval = 0;
 	struct sched_param param;
+	int ret;
 
 	info = devm_kzalloc(dev, sizeof(struct v2d_info), GFP_KERNEL);
 	if (info == NULL) {
@@ -790,6 +791,18 @@ static int v2d_probe(struct platform_device *pdev)
 		V2DLOGE("Could not get v2d core clk!\n");
 		return -EINVAL;
 	}
+
+	info->v2d_reset = devm_reset_control_get_optional_shared(&pdev->dev, "v2d_reset");
+	if (IS_ERR_OR_NULL(info->v2d_reset)) {
+		V2DLOGE("Could not get v2d reset!\n");
+		return -EINVAL;
+	}
+
+	ret = reset_control_deassert(info->v2d_reset);
+	if (ret < 0) {
+		V2DLOGI("Failed to deassert v2d_reset\n");
+	}
+	clk_prepare_enable(info->clkcore);
 	clk_set_rate(info->clkcore, 409600000);
 
 	info->clkio = devm_clk_get(dev, "v2d-io");
@@ -890,6 +903,7 @@ static int v2d_remove(struct platform_device *pdev)
 	struct v2d_info *info = platform_get_drvdata(pdev);
 	struct device *dev = &info->pdev->dev;
 	int i;
+	int ret;
 
 	//V2DLOGI("remove v2d driver!\n");
 	v2d_iommu_deinit(pdev);
@@ -907,6 +921,15 @@ static int v2d_remove(struct platform_device *pdev)
 	misc_deregister(&info->mdev);
 	if(info->v2d_job_done_wq)
 		destroy_workqueue(info->v2d_job_done_wq);
+
+	if (__clk_is_enabled(info->clkcore)) {
+		clk_disable_unprepare(info->clkcore);
+	}
+	ret = reset_control_assert(info->v2d_reset);
+	if (ret < 0) {
+		V2DLOGI("Failed to assert v2d_reset\n");
+	}
+
 	v2dInfo = NULL;
 
 	return 0;
diff --git a/drivers/soc/spacemit/v2d/v2d_priv.h b/drivers/soc/spacemit/v2d/v2d_priv.h
index 328a6a062768..6a8860494ef2 100644
--- a/drivers/soc/spacemit/v2d/v2d_priv.h
+++ b/drivers/soc/spacemit/v2d/v2d_priv.h
@@ -20,6 +20,7 @@
 #include <linux/slab.h>
 #include <linux/iommu.h>
 #include <linux/pm_qos.h>
+#include <linux/reset.h>
 
 #define V2D_PRINT_DEBUG
 #define V2D_FALSE 0
@@ -80,6 +81,7 @@ struct v2d_info {
 	void __iomem            *v2dreg_iomem_base;
 	struct clk              *clkcore;
 	struct clk              *clkio;
+	struct reset_control    *v2d_reset;
 	int                     refcount;
 	int                     do_reset;
 	struct mutex            power_mutex;
-- 
2.47.0

