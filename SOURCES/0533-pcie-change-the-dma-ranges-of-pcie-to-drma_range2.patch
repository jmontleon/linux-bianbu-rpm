From bec524dcf9a59e522bbb401b1dfd8db55fd2bff0 Mon Sep 17 00:00:00 2001
From: huzhen <george.hu@spacemit.com>
Date: Fri, 29 Mar 2024 19:39:10 +0800
Subject: [PATCH 0533/1205] pcie: change the dma ranges of pcie to drma_range2

  As the pcie controller occasionally makes errors when accessing dram 2G-4G space,
  the dma ranges of pcie does not include 2G-4G.

Change-Id: Ib579708b0b9cdc6fef853e0e50ffdac02367ab1c
---
 arch/riscv/boot/dts/spacemit/k1-x.dtsi | 16 +++++++++++++---
 drivers/pci/controller/dwc/pcie-k1x.c  | 12 ++++++++----
 2 files changed, 21 insertions(+), 7 deletions(-)

diff --git a/arch/riscv/boot/dts/spacemit/k1-x.dtsi b/arch/riscv/boot/dts/spacemit/k1-x.dtsi
index fe7cb8562aef..e2ad8556c0c0 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x.dtsi
+++ b/arch/riscv/boot/dts/spacemit/k1-x.dtsi
@@ -549,6 +549,16 @@ dram_range1: dram_range@1 {
 			status = "okay";
 		};
 
+		dram_range2: dram_range@2 {
+			compatible = "spacemit-dram-bus";
+			#address-cells = <2>;
+			#size-cells = <2>;
+			dma-ranges = <0x0 0x00000000 0x0 0x00000000 0x0 0x80000000>,
+				     <0x1 0x00000000 0x1 0x80000000 0x3 0x00000000>;
+			#interconnect-cells = <0>;
+			status = "okay";
+		};
+
 		clint0: clint@e4000000 {
 			compatible = "riscv,clint0";
 			interrupts-extended = <
@@ -1844,7 +1854,7 @@ pcie0_rc: pcie@ca000000 {
 			#size-cells = <2>;
 			ranges = <0x01000000 0x0 0x80002000 0 0x80002000 0x0 0x100000>,
 				<0x02000000 0x0 0x80102000 0 0x80102000 0x0 0x0f000000>;
-			interconnects = <&dram_range1>;
+			interconnects = <&dram_range2>;
 			interconnect-names = "dma-mem";
 
 			interrupts = <141>, <145>;
@@ -1892,7 +1902,7 @@ pcie1_rc: pcie@ca400000 {
 			#size-cells = <2>;
 			ranges = <0x01000000 0x0 0x90002000 0 0x90002000 0x0 0x100000>,
 				<0x02000000 0x0 0x90102000 0 0x90102000 0x0 0x0f000000>;
-			interconnects = <&dram_range1>;
+			interconnects = <&dram_range2>;
 			interconnect-names = "dma-mem";
 
 			interrupts = <142>, <146>;
@@ -1940,7 +1950,7 @@ pcie2_rc: pcie@ca800000 {
 			#size-cells = <2>;
 			ranges = <0x01000000 0x0 0xa0002000 0 0xa0002000 0x0 0x100000>,
 				<0x02000000 0x0 0xa0102000 0 0xa0102000 0x0 0x10000000>;
-			interconnects = <&dram_range1>;
+			interconnects = <&dram_range2>;
 			interconnect-names = "dma-mem";
 
 			interrupts = <143>, <147>;
diff --git a/drivers/pci/controller/dwc/pcie-k1x.c b/drivers/pci/controller/dwc/pcie-k1x.c
index f5948d1a1706..d773e5c26358 100755
--- a/drivers/pci/controller/dwc/pcie-k1x.c
+++ b/drivers/pci/controller/dwc/pcie-k1x.c
@@ -142,8 +142,8 @@ struct k1x_pcie {
 	struct irq_domain	*irq_domain;
 	enum dw_pcie_device_mode mode;
 	struct page             *msi_page;
+	struct page             *msix_page;
 	dma_addr_t              msix_addr;
-	void __iomem            *msix_vaddr;
 	struct	clk *clk_pcie;  /*include master slave slave_lite clk*/
 	struct	clk *clk_master;
 	struct	clk *clk_slave;
@@ -827,9 +827,13 @@ void k1x_pcie_msix_addr_alloc(struct dw_pcie_rp *pp)
 	u64 msi_target;
 	u32 reg;
 
-	k1x->msix_vaddr = dma_alloc_coherent(dev, PAGE_SIZE, &(k1x->msix_addr), GFP_KERNEL);
-	if (!k1x->msix_addr) {
-		dev_err(dev, "Failed to alloc MSIx data\n");
+	k1x->msix_page = alloc_page(GFP_KERNEL);
+	k1x->msix_addr = dma_map_page(dev, k1x->msix_page, 0, PAGE_SIZE,
+				    DMA_FROM_DEVICE);
+	if (dma_mapping_error(dev, k1x->msix_addr)) {
+		dev_err(dev, "Failed to map MSIX address\n");
+		__free_page(k1x->msix_page);
+		k1x->msix_page = NULL;
 		return;
 	}
 	msi_target = (u64)k1x->msix_addr;
-- 
2.47.0

