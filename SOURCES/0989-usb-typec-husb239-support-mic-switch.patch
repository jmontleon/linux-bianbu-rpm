From 2792e53b8347ad2049f234f631e79d34a39ebfcf Mon Sep 17 00:00:00 2001
From: wanlong <long.wan@spacemit.com>
Date: Tue, 27 Aug 2024 16:22:42 +0800
Subject: [PATCH 0989/1206] usb: typec: husb239: support mic switch

Change-Id: I741a22c473ade0f7758adb9432f0bce9e6401a96
---
 arch/riscv/boot/dts/spacemit/k1-x_MUSE-Paper.dts |  7 +++----
 drivers/usb/typec/husb239.c                      | 10 ++++++++++
 2 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Paper.dts b/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Paper.dts
index e57c358743bb..8c8fd9fec450 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Paper.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Paper.dts
@@ -375,6 +375,7 @@ husb239_u3: tcpc@42 {
 		chg-gpio = <&gpio 04 0>;
 		int-gpio = <&gpio 01 0>;
 		aud-gpio = <&gpio 86 0>;
+		mic-gpio = <&gpio 79 0>;
 		orient-oe-gpio  = <&gpio 48 0>;
 		orient-sel-gpio = <&gpio 78 0>;
 		orientation;
@@ -664,8 +665,7 @@ &range PRI_TCK  1 (MUX_MODE1 | EDGE_NONE | PULL_DOWN | PAD_1V8_DS2)
 		&range PRI_TDO  1 (MUX_MODE1 | EDGE_NONE | PULL_UP   | PAD_1V8_DS2)
 		&range GPIO_74  1 (MUX_MODE0 | EDGE_NONE | PULL_UP   | PAD_1V8_DS2)
 		&range GPIO_76  1 (MUX_MODE0 | EDGE_NONE | PULL_UP   | PAD_3V_DS4)
-		&range GPIO_78  1 (MUX_MODE0 | EDGE_NONE | PULL_UP   | PAD_3V_DS4)
-		&range GPIO_80  1 (MUX_MODE0 | EDGE_NONE | PULL_UP   | PAD_3V_DS4)
+		&range GPIO_78  3 (MUX_MODE0 | EDGE_NONE | PULL_UP   | PAD_3V_DS4)
 		&range GPIO_81  3 (MUX_MODE0 | EDGE_NONE | PULL_UP   | PAD_1V8_DS2)
 		&range GPIO_86  1 (MUX_MODE0 | EDGE_NONE | PULL_UP   | PAD_1V8_DS2)
 		&range GPIO_89  1 (MUX_MODE0 | EDGE_NONE | PULL_UP   | PAD_1V8_DS2)
@@ -705,8 +705,7 @@ &pinctrl 63  GPIO_63  5
 		&pinctrl 70  PRI_TDI  4
 		&pinctrl 74  GPIO_74  1
 		&pinctrl 76  GPIO_76  1
-		&pinctrl 78  GPIO_78  1
-		&pinctrl 80  GPIO_80  4
+		&pinctrl 78  GPIO_78  6
 		&pinctrl 86  GPIO_86  1
 		&pinctrl 89  GPIO_89  4
 		&pinctrl 96  DVL0     2
diff --git a/drivers/usb/typec/husb239.c b/drivers/usb/typec/husb239.c
index 4c0b565c40d8..1bc6e441a05e 100644
--- a/drivers/usb/typec/husb239.c
+++ b/drivers/usb/typec/husb239.c
@@ -180,6 +180,7 @@ struct husb239 {
 	struct gpio_desc *en_gpiod; /* chip enable gpio */
 	struct gpio_desc *chg_gpiod;/* stop charge while set vbus */
 	struct gpio_desc *aud_gpiod;/* audio switch gpio */
+	struct gpio_desc *mic_gpiod;/* mic switch gpio */
 
 	struct gpio_desc *sel_gpiod;/* sel gpio, for orient switch */
 	struct gpio_desc *oe_gpiod; /* oe gpio, for orient switch */
@@ -407,6 +408,8 @@ static int husb239_attach(struct husb239 *husb239)
 			(husb239_get_accessory(husb239) == TYPEC_ACCESSORY_AUDIO)) {
 		/* sel = 0 audp/audn, sel = 1 hdp/hdn */
 		gpiod_set_value(husb239->aud_gpiod, 1);
+		/* sel = 0 micp = sleeve, sel = 1 micp = ring2 */
+		gpiod_set_value(husb239->mic_gpiod, 1);
 		husb239->audio_on = true;
 		dev_info(husb239->dev, "audo accessory attach\n");
 		ret = husb239_register_partner(husb239, 0, TYPEC_ACCESSORY_AUDIO);
@@ -453,6 +456,7 @@ static int husb239_attach(struct husb239 *husb239)
 vbus_disable:
 	if (husb239->audio_on) {
 		gpiod_set_value(husb239->aud_gpiod, 0);
+		gpiod_set_value(husb239->mic_gpiod, 0);
 		husb239->audio_on = false;
 	}
 	if (husb239->vbus_on) {
@@ -486,6 +490,7 @@ static void husb239_detach(struct husb239 *husb239)
 
 	if (husb239->audio_on) {
 		gpiod_set_value(husb239->aud_gpiod, 0);
+		gpiod_set_value(husb239->mic_gpiod, 0);
 		husb239->audio_on = false;
 		dev_info(husb239->dev, "audo accessory detach\n");
 	}
@@ -720,6 +725,11 @@ static int husb239_typec_port_probe(struct husb239 *husb239)
 		return PTR_ERR(husb239->aud_gpiod);
 	}
 
+	husb239->mic_gpiod = devm_gpiod_get_optional(dev, "mic", GPIOD_OUT_LOW);
+	if (IS_ERR(husb239->mic_gpiod)) {
+		return PTR_ERR(husb239->mic_gpiod);
+	}
+
 	connector = device_get_named_child_node(dev, "connector");
 	if (connector) {
 		info->role_sw = fwnode_usb_role_switch_get(connector);
-- 
2.47.0

