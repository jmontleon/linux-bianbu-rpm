From 30dffe3e9f055291b4a5f123a647500a951eee13 Mon Sep 17 00:00:00 2001
From: zhouxl <zhouxl@spacemit.com>
Date: Fri, 10 May 2024 18:18:04 +0800
Subject: [PATCH 0669/1448] add reboot mode select support while P1 reset will
 power off k1

Change-Id: Ida579928e674bd2faad6cfeac0331ca082ae3986
---
 drivers/mfd/spacemit-mfd.c                 | 25 +++++++++++++++++++++-
 drivers/soc/spacemit/spacemit_reboot.c     |  2 +-
 include/linux/mfd/spacemit/spacemit_pmic.h |  6 ++++++
 include/linux/mfd/spacemit/spm8821.h       |  9 +++++++-
 4 files changed, 39 insertions(+), 3 deletions(-)

diff --git a/drivers/mfd/spacemit-mfd.c b/drivers/mfd/spacemit-mfd.c
index 85458ef5ac63..306fa94b8d62 100644
--- a/drivers/mfd/spacemit-mfd.c
+++ b/drivers/mfd/spacemit-mfd.c
@@ -27,6 +27,19 @@ SY8810L_MFD_CELL;
 SY8810L_REGMAP_CONFIG;
 SY8810L_MFD_MATCH_DATA;
 
+struct restart_config_info
+{
+	const char *cmd_para;
+	uint32_t value;
+};
+
+static const struct restart_config_info config_info[] = {
+	// enter uboot fastboot mode after restart
+	{"fastboot", 1},
+	// enter uboot shell after restart
+	{"uboot", 2},
+};
+
 static const struct of_device_id spacemit_pmic_of_match[] = {
 	{ .compatible = "spacemit,spm8821" , .data = (void *)&spm8821_mfd_match_data },
 	{ .compatible = "spacemit,pm853" , .data = (void *)&pm853_mfd_match_data },
@@ -57,9 +70,19 @@ static void spacemit_pm_power_off(void)
 
 static int spacemit_restart_notify(struct notifier_block *this, unsigned long mode, void *cmd)
 {
-	int ret;
+	int i, ret;
 	struct spacemit_pmic *pmic = (struct spacemit_pmic *)match_data->ptr;
 
+	if (NULL != cmd) {
+		for (i = 0; i < ARRAY_SIZE(config_info); i++) {
+			if (0 == strcmp(cmd, config_info[i].cmd_para)) {
+				regmap_update_bits(pmic->regmap, match_data->non_reset.reg,
+						match_data->non_reset.bit, config_info[i].value);
+				break;
+			}
+		}
+	}
+
 	ret = regmap_update_bits(pmic->regmap, match_data->reboot.reg,
 			match_data->reboot.bit, match_data->reboot.bit);
 	if (ret) {
diff --git a/drivers/soc/spacemit/spacemit_reboot.c b/drivers/soc/spacemit/spacemit_reboot.c
index 7375ec3c387a..37ea23766908 100755
--- a/drivers/soc/spacemit/spacemit_reboot.c
+++ b/drivers/soc/spacemit/spacemit_reboot.c
@@ -14,7 +14,7 @@
 
 #define RESET_REG_VALUE 0x55a
 #define RESET_REG_VALUE1 0x55f
-static char *rebootcmd = "bootloader";
+static char *rebootcmd = "fastboot";
 static char *shellcmd = "uboot";
 
 struct spacemit_reboot_ctrl {
diff --git a/include/linux/mfd/spacemit/spacemit_pmic.h b/include/linux/mfd/spacemit/spacemit_pmic.h
index b1e58621913f..78d0b209e525 100644
--- a/include/linux/mfd/spacemit/spacemit_pmic.h
+++ b/include/linux/mfd/spacemit/spacemit_pmic.h
@@ -186,6 +186,12 @@ struct mfd_match_data {
 		unsigned int reg;
 		unsigned char bit;
 	} reboot;
+
+	/* value will be kept in register while reset pmic  */
+	struct {
+		unsigned int reg;
+		unsigned char bit;
+	} non_reset;
 };
 
 /* regulator: match data */
diff --git a/include/linux/mfd/spacemit/spm8821.h b/include/linux/mfd/spacemit/spm8821.h
index 831c151cf783..c94aa6f1cfc3 100644
--- a/include/linux/mfd/spacemit/spm8821.h
+++ b/include/linux/mfd/spacemit/spm8821.h
@@ -22,7 +22,7 @@ enum SPM8821_reg {
 	SPM8821_ID_SWITCH1,
 };
 
-#define SPACEMIT_SPM8821_MAX_REG	0xA8
+#define SPACEMIT_SPM8821_MAX_REG	0xB0
 
 #define SPM8821_BUCK_VSEL_MASK		0xff
 #define SMP8821_BUCK_EN_MASK		0x1
@@ -80,6 +80,9 @@ enum SPM8821_reg {
 #define SPM8821_SW_SHUTDOWN_BIT_MSK	0x4
 #define SPM8821_SW_RESET_BIT_MSK	0x2
 
+#define SPM8821_NON_RESET_REG		0xAB
+#define SPM8821_RESTART_CFG_BIT_MSK	0x3
+
 #define SPM8821_REGMAP_CONFIG	\
 	static const struct regmap_config spm8821_regmap_config = {	\
 		.reg_bits = 8,	\
@@ -765,6 +768,10 @@ static struct mfd_match_data spm8821_mfd_match_data = {		\
 		.reg = SPM8821_PWR_CTRL2,			\
 		.bit = SPM8821_SW_RESET_BIT_MSK,		\
 	},							\
+	.non_reset = {						\
+		.reg = SPM8821_NON_RESET_REG,			\
+		.bit = SPM8821_RESTART_CFG_BIT_MSK,		\
+	},							\
 };
 
 #define SPM8821_PINCTRL_MATCH_DATA				\
-- 
2.47.0

