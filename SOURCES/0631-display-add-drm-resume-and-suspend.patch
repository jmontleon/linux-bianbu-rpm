From 47ca86bf1b9831565712156873d4abbe4ae02693 Mon Sep 17 00:00:00 2001
From: lilijun <lijun.li@spacemit.com>
Date: Tue, 7 May 2024 14:31:16 +0800
Subject: [PATCH 0631/1206] display: add drm resume and suspend

Change-Id: I0b7259bdbcaffb28ef94d9562ec67c241b073b96
---
 drivers/gpu/drm/spacemit/dpu/dpu_saturn.c | 24 +++++++++++++++--------
 drivers/gpu/drm/spacemit/spacemit_drm.c   | 24 +++++++++++++++++++++++
 drivers/gpu/drm/spacemit/spacemit_hdmi.c  |  6 ++++--
 3 files changed, 44 insertions(+), 10 deletions(-)

diff --git a/drivers/gpu/drm/spacemit/dpu/dpu_saturn.c b/drivers/gpu/drm/spacemit/dpu/dpu_saturn.c
index d1e92d4c4233..d311c3302e48 100644
--- a/drivers/gpu/drm/spacemit/dpu/dpu_saturn.c
+++ b/drivers/gpu/drm/spacemit/dpu/dpu_saturn.c
@@ -475,22 +475,28 @@ static int dpu_update_bw(struct spacemit_dpu *dpu, uint64_t bw)
 static int dpu_finish_uboot(struct spacemit_dpu *dpu)
 {
 	void __iomem *base;
+	void __iomem *hdmi;
 	u32 value;
 
 	DRM_DEBUG("%s() type %d\n", __func__, dpu->type);
 
 	if (dpu->type == HDMI) {
 		base = (void __iomem *)ioremap(0xC0440000, 0x2A000);
-		// hdmi dpu int regs
-		writel(0x00, base + 0x910);
-		writel(0x00, base + 0x938);
-		//writel(0x00, base + 0x960);
+		hdmi = (void __iomem *)ioremap(0xC0400500, 0x200);
 
 		// hdmi dpu ctl regs
 		writel(0x00, base + 0x560);
 		writel(0x01, base + 0x56c);
 		// writel(0x00, base + 0x58c);
 
+		// hdmi dpu int regs
+		writel(0x00, base + 0x910);
+		writel(0x00, base + 0x938);
+		//writel(0x00, base + 0x960);
+
+		// hdmi close pll clock
+		writel(0x00, hdmi + 0xe4);
+
 		value = readl_relaxed(base + 0x910);
 		DRM_DEBUG("%s hdmi int reg4 0x910:0x%x\n", __func__, value);
 		value = readl_relaxed(base + 0x938);
@@ -506,18 +512,20 @@ static int dpu_finish_uboot(struct spacemit_dpu *dpu)
 
 		udelay(100);
 		iounmap(base);
+		iounmap(hdmi);
 	} else if (dpu->type == DSI) {
 		base = (void __iomem *)ioremap(0xc0340000, 0x2A000);
-		// mipi dsi dpu int regs
-		writel(0x00, base + 0x910);
-		writel(0x00, base + 0x938);
-		//writel(0x00, base + 0x960);
 
 		// mipi dsi dpu ctl regs
 		writel(0x00, base + 0x560);
 		writel(0x01, base + 0x56c);
 		// writel(0x00, base + 0x58c);
 
+		// mipi dsi dpu int regs
+		writel(0x00, base + 0x910);
+		writel(0x00, base + 0x938);
+		//writel(0x00, base + 0x960);
+
 		value = readl_relaxed(base + 0x910);
 		DRM_DEBUG("%s mipi dsi int reg4 0x910:0x%x\n", __func__, value);
 		value = readl_relaxed(base + 0x938);
diff --git a/drivers/gpu/drm/spacemit/spacemit_drm.c b/drivers/gpu/drm/spacemit/spacemit_drm.c
index 108cf40902b8..fe26dc568efe 100644
--- a/drivers/gpu/drm/spacemit/spacemit_drm.c
+++ b/drivers/gpu/drm/spacemit/spacemit_drm.c
@@ -456,6 +456,29 @@ static void spacemit_drm_shutdown(struct platform_device *pdev)
 	drm_atomic_helper_shutdown(drm);
 }
 
+#ifdef CONFIG_PM_SLEEP
+static int spacemit_drm_suspend(struct device *dev)
+{
+	struct spacemit_drm_private *priv = dev_get_drvdata(dev);
+	struct drm_device *drm = priv->ddev;
+
+	return drm_mode_config_helper_suspend(drm);
+}
+
+static int spacemit_drm_resume(struct device *dev)
+{
+	struct spacemit_drm_private *priv = dev_get_drvdata(dev);
+	struct drm_device *drm = priv->ddev;
+
+	return drm_mode_config_helper_resume(drm);
+}
+#endif
+
+static const struct dev_pm_ops spacemit_drm_pm_ops = {
+	SET_SYSTEM_SLEEP_PM_OPS(spacemit_drm_suspend,
+				spacemit_drm_resume)
+};
+
 static const struct of_device_id drm_match_table[] = {
 	{
 		.compatible = "spacemit,saturn-hdmi",
@@ -477,6 +500,7 @@ static struct platform_driver spacemit_drm_driver = {
 	.driver = {
 		.name = "spacemit-drm-drv",
 		.of_match_table = drm_match_table,
+		.pm = &spacemit_drm_pm_ops,
 	},
 };
 
diff --git a/drivers/gpu/drm/spacemit/spacemit_hdmi.c b/drivers/gpu/drm/spacemit/spacemit_hdmi.c
index 50c954e1f770..cad53ed63cab 100644
--- a/drivers/gpu/drm/spacemit/spacemit_hdmi.c
+++ b/drivers/gpu/drm/spacemit/spacemit_hdmi.c
@@ -545,13 +545,12 @@ void hdmi_init (struct spacemit_hdmi *hdmi, int pixel_clock, int bit_depth){
 
 	pll_reg(hdmi, pixel_clock, bit_depth);
 	writel(0x3, hdmi->regs + 0xe4);
-	udelay(200);
-
 	value = readl_relaxed(hdmi->regs + 0xe4);
 	DRM_INFO("%s() hdmi pll lock status 0x%x\n", __func__, value);
 	// while ( (value & 0x10000) != 0) {
 	// 	value = readl_relaxed(hdmi->regs + 0xe4);
 	// }
+	udelay(100);
 
 	value = 0x3018C000| bit_depth;
 	writel(value, hdmi->regs + 0x28);
@@ -620,9 +619,12 @@ static void spacemit_hdmi_encoder_disable(struct drm_encoder *encoder)
 {
 	struct spacemit_hdmi *hdmi = encoder_to_spacemit_hdmi(encoder);
 	struct spacemit_dpu *dpu = crtc_to_dpu(encoder->crtc);
+	u32 value = 0;
 	DRM_INFO("%s()\n", __func__);
 
 	spacemit_dpu_stop(dpu);
+	writel(0x00, hdmi->regs + 0xe4);
+	udelay(100);
 	spacemit_hdmi_set_pwr_mode(hdmi, LOWER_PWR);
 }
 
-- 
2.47.0

