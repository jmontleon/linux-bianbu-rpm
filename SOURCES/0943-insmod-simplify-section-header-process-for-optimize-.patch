From a0e65aa6d20d0dc9ddb2dec485afd31e3126fe99 Mon Sep 17 00:00:00 2001
From: zhangmeng <zhangmeng.kevin@spacemit.com>
Date: Tue, 20 Aug 2024 09:44:29 +0800
Subject: [PATCH 0943/1204] insmod: simplify section header process for
 optimize insmod speed

Change-Id: I24f37b06fb891f66431b40c1954d2758782fbd11
---
 arch/riscv/kernel/module-sections.c | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/arch/riscv/kernel/module-sections.c b/arch/riscv/kernel/module-sections.c
index e264e59e596e..8b3f4335a1db 100644
--- a/arch/riscv/kernel/module-sections.c
+++ b/arch/riscv/kernel/module-sections.c
@@ -55,6 +55,8 @@ unsigned long module_emit_plt_entry(struct module *mod, unsigned long val)
 	return (unsigned long)&plt[i];
 }
 
+/* it seems that the duplicate check is not necessary */
+#ifndef CONFIG_SOC_SPACEMIT
 static int is_rela_equal(const Elf_Rela *x, const Elf_Rela *y)
 {
 	return x->r_info == y->r_info && x->r_addend == y->r_addend;
@@ -69,6 +71,7 @@ static bool duplicate_rela(const Elf_Rela *rela, int idx)
 	}
 	return false;
 }
+#endif
 
 static void count_max_entries(Elf_Rela *relas, int num,
 			      unsigned int *plts, unsigned int *gots)
@@ -78,10 +81,16 @@ static void count_max_entries(Elf_Rela *relas, int num,
 	for (i = 0; i < num; i++) {
 		type = ELF_RISCV_R_TYPE(relas[i].r_info);
 		if (type == R_RISCV_CALL_PLT) {
+#ifndef CONFIG_SOC_SPACEMIT
+/* it seems that the duplicate check is not necessary */
 			if (!duplicate_rela(relas, i))
+#endif
 				(*plts)++;
 		} else if (type == R_RISCV_GOT_HI20) {
+#ifndef CONFIG_SOC_SPACEMIT
+/* it seems that the duplicate check is not necessary */
 			if (!duplicate_rela(relas, i))
+#endif
 				(*gots)++;
 		}
 	}
-- 
2.47.0

