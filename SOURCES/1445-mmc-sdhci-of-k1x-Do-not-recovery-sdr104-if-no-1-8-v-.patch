From 29dd3f22ed86c646459a5c1e98d32c6e8a45b5e7 Mon Sep 17 00:00:00 2001
From: wanlong <long.wan@spacemit.com>
Date: Fri, 17 Jan 2025 10:46:57 +0800
Subject: [PATCH 1445/1451] mmc: sdhci-of-k1x: Do not recovery sdr104 if
 no-1-8-v is enabled

Change-Id: I7993bbb2b24a0fa869f2be45cf25f5cbf484148d
---
 drivers/mmc/host/sdhci-of-k1x.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/drivers/mmc/host/sdhci-of-k1x.c b/drivers/mmc/host/sdhci-of-k1x.c
index 1c91e1a73431..e9de295013cb 100644
--- a/drivers/mmc/host/sdhci-of-k1x.c
+++ b/drivers/mmc/host/sdhci-of-k1x.c
@@ -569,6 +569,7 @@ static int spacemit_sdhci_card_busy(struct mmc_host *mmc)
 static void spacemit_init_card_quriks(struct mmc_host *mmc, struct mmc_card *card)
 {
 	struct k1x_sdhci_platdata *pdata = mmc->parent->platform_data;
+	struct sdhci_host *host = mmc_priv(mmc);
 	struct rx_tuning *rxtuning = &pdata->rxtuning;
 
 	if (mmc->caps2 & MMC_CAP2_NO_MMC) {
@@ -581,7 +582,8 @@ static void spacemit_init_card_quriks(struct mmc_host *mmc, struct mmc_card *car
 				/* fallback bus speed */
 				mmc->caps &= ~MMC_CAP_UHS_SDR104;
 				rxtuning->tuning_fail = 0;
-			} else if (!(pdata->host_caps_disable & MMC_CAP_UHS_SDR104)) {
+			} else if (!(pdata->host_caps_disable & MMC_CAP_UHS_SDR104)
+				&& !(host->quirks2 & SDHCI_QUIRK2_NO_1_8_V)) {
 				/* recovery sdr104 capability */
 				mmc->caps |= MMC_CAP_UHS_SDR104;
 			}
-- 
2.47.0

