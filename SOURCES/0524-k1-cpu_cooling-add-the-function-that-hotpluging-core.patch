From b1601e7fda2e7298ebb578bd42520b06c045e0fb Mon Sep 17 00:00:00 2001
From: Nell <xianbin.zhu@spacemit.com>
Date: Fri, 22 Mar 2024 11:10:36 +0800
Subject: [PATCH 0524/1448] k1:cpu_cooling: add the function that hotpluging
 cores when the temprature of cpu becauses high

Change-Id: Ie1ad0e8aed7140ba7a27000e151fd8dd4c1d9377
---
 drivers/cpufreq/spacemit-cpufreq.c | 13 +++++++++++++
 1 file changed, 13 insertions(+)

diff --git a/drivers/cpufreq/spacemit-cpufreq.c b/drivers/cpufreq/spacemit-cpufreq.c
index 3da356a9f106..6d47a155d9d7 100644
--- a/drivers/cpufreq/spacemit-cpufreq.c
+++ b/drivers/cpufreq/spacemit-cpufreq.c
@@ -22,6 +22,12 @@ static struct notifier_block vol_constraints_notifier;
 static struct freq_constraints vol_constraints;
 static struct per_device_qos *vol_qos[CONFIG_NR_CPUS];
 
+#ifdef CONFIG_CPU_HOTPLUG_THERMAL
+struct thermal_cooling_device **ghotplug_cooling;
+extern struct thermal_cooling_device **
+of_hotplug_cooling_register(struct cpufreq_policy *policy);
+#endif
+
 static int spacemit_vol_qos_notifier_call(struct notifier_block *nb, unsigned long action, void *data)
 {
 	regulator_set_voltage(vol_qos[0]->regulator, action * 1000, action * 1000);
@@ -77,6 +83,13 @@ static int spacemit_policy_notifier(struct notifier_block *nb,
 		freq_qos_add_request(&vol_constraints, &vol_qos[cpu]->qos, FREQ_QOS_MIN,
 				regulator_get_voltage(vol_qos[cpu]->regulator) / 1000);
 
+#ifdef CONFIG_CPU_HOTPLUG_THERMAL
+       ghotplug_cooling = of_hotplug_cooling_register(policy);
+       if (!ghotplug_cooling) {
+               pr_err("register hotplug cpu cooling failed\n");
+               return -EINVAL;
+       }
+#endif
 	return 0;
 }
 
-- 
2.47.0

