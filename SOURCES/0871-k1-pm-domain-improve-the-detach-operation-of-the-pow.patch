From e219e228d2aef02e3b81e74b6dfdad6afe32c8be Mon Sep 17 00:00:00 2001
From: Nell <xianbin.zhu@spacemit.com>
Date: Tue, 6 Aug 2024 16:32:38 +0800
Subject: [PATCH 0871/1206] k1:pm-domain: improve the detach operation of the
 power domain

Change-Id: Ieaae5c588472c22ec4db02502e49aa1d48651a7f
---
 drivers/soc/spacemit/pm_domain/atomic_qos.c   | 34 +++++++++++++++++++
 drivers/soc/spacemit/pm_domain/atomic_qos.h   |  2 ++
 .../soc/spacemit/pm_domain/k1x-pm_domain.c    |  8 ++++-
 3 files changed, 43 insertions(+), 1 deletion(-)

diff --git a/drivers/soc/spacemit/pm_domain/atomic_qos.c b/drivers/soc/spacemit/pm_domain/atomic_qos.c
index 68f987e10cdb..24117ffc728f 100644
--- a/drivers/soc/spacemit/pm_domain/atomic_qos.c
+++ b/drivers/soc/spacemit/pm_domain/atomic_qos.c
@@ -274,3 +274,37 @@ int atomic_freq_qos_update_request(struct atomic_freq_qos_request *req, s32 new_
 
 	return atomic_freq_qos_apply(req, PM_QOS_UPDATE_REQ, new_value);
 }
+
+static inline int atomic_freq_qos_request_active(struct atomic_freq_qos_request *req)
+{
+	return !IS_ERR_OR_NULL(req->qos);
+}
+
+/**
+ * atomic_freq_qos_remove_request - Remove frequency QoS request from its list.
+ * @req: Request to remove.
+ *
+ * Remove the given frequency QoS request from the list of constraints it
+ * belongs to and recompute the effective constraint value for that list.
+ *
+ * Return 1 if the effective constraint value has changed, 0 if the effective
+ * constraint value has not changed, or a negative error code on failures.
+ */
+int atomic_freq_qos_remove_request(struct atomic_freq_qos_request *req)
+{
+	int ret;
+
+	if (!req)
+		return -EINVAL;
+
+	if (WARN(!atomic_freq_qos_request_active(req),
+		"%s() called for unknown object\n", __func__))
+		return -EINVAL;
+
+	ret = atomic_freq_qos_apply(req, PM_QOS_REMOVE_REQ, PM_QOS_DEFAULT_VALUE);
+	req->qos = NULL;
+	req->type = 0;
+
+	return ret;
+}
+EXPORT_SYMBOL_GPL(atomic_freq_qos_remove_request);
diff --git a/drivers/soc/spacemit/pm_domain/atomic_qos.h b/drivers/soc/spacemit/pm_domain/atomic_qos.h
index 61d0837bffe3..c32e88653bd1 100644
--- a/drivers/soc/spacemit/pm_domain/atomic_qos.h
+++ b/drivers/soc/spacemit/pm_domain/atomic_qos.h
@@ -89,5 +89,7 @@ int atomic_freq_qos_add_request(struct atomic_freq_constraints *qos,
  */
 int atomic_freq_qos_update_request(struct atomic_freq_qos_request *req, s32 new_value);
 
+int atomic_freq_qos_remove_request(struct atomic_freq_qos_request *req);
+
 #endif
 
diff --git a/drivers/soc/spacemit/pm_domain/k1x-pm_domain.c b/drivers/soc/spacemit/pm_domain/k1x-pm_domain.c
index ccf4e5e0317d..49f4f6dd8345 100644
--- a/drivers/soc/spacemit/pm_domain/k1x-pm_domain.c
+++ b/drivers/soc/spacemit/pm_domain/k1x-pm_domain.c
@@ -475,12 +475,18 @@ static void spacemit_pd_detach_dev(struct generic_pm_domain *genpd, struct devic
 		pm_clk_destroy(dev);
 
 	if (pos->handle_regulator) {
-		dev_pm_qos_remove_notifier(dev, &pos->notifier, DEV_PM_QOS_MAX_FREQUENCY);
 		while (--pos->rgr_count >= 0)
 			devm_regulator_put(pos->rgr[pos->rgr_count]);
 	}
 
+	if (pos->handle_pm_domain) {
+		atomic_freq_qos_remove_request(&pos->qos);
+	}
+
+	dev_pm_qos_remove_request(&pos->req);
+	dev_pm_qos_remove_notifier(dev, &pos->notifier, DEV_PM_QOS_MAX_FREQUENCY);
 	list_del(&pos->qos_node);
+	devm_kfree(dev, pos);
 }
 
 static int spacemit_cpuidle_qos_notfier_call(struct notifier_block *nb, unsigned long action, void *data)
-- 
2.47.0

