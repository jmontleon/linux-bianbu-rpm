diff --git a/drivers/gpu/drm/spacemit/dpu/dpu_debug.c b/drivers/gpu/drm/spacemit/dpu/dpu_debug.c
index 9245ee407c29..3d0587207ac9 100644
--- a/drivers/gpu/drm/spacemit/dpu/dpu_debug.c
+++ b/drivers/gpu/drm/spacemit/dpu/dpu_debug.c
@@ -309,8 +309,6 @@ void dpu_dump_fps(struct spacemit_dpu *dpu)
 	tmp_tm = timespec64_sub(cur_tm, dpu->last_tm);
 	dpu->last_tm.tv_sec = cur_tm.tv_sec;
 	dpu->last_tm.tv_nsec = cur_tm.tv_nsec;
-	if (tmp_tm.tv_sec == 0)
-		trace_printk("fps: %ld\n", 1000000000 / (tmp_tm.tv_nsec / 1000));
 }
 
 void dpu_underrun_wq_stop_trace(struct work_struct *work)
diff --git a/drivers/hwtracing/stm/dummy_stm.c b/drivers/hwtracing/stm/dummy_stm.c
index 38528ffdc0b3..66bfd740924a 100644
--- a/drivers/hwtracing/stm/dummy_stm.c
+++ b/drivers/hwtracing/stm/dummy_stm.c
@@ -27,8 +27,6 @@ dummy_stm_packet(struct stm_data *stm_data, unsigned int master,
 
 	if (size < 8)
 		pl &= (1ull << (size * 8)) - 1;
-	trace_printk("[%u:%u] [pkt: %x/%x] (%llx)\n", master, channel,
-		     packet, size, pl);
 #endif
 	return size;
 }
diff --git a/drivers/media/platform/spacemit/camera/cam_util/cam_dbg.h b/drivers/media/platform/spacemit/camera/cam_util/cam_dbg.h
index bcf88b892951..ce9faf1151db 100644
--- a/drivers/media/platform/spacemit/camera/cam_util/cam_dbg.h
+++ b/drivers/media/platform/spacemit/camera/cam_util/cam_dbg.h
@@ -87,7 +87,6 @@ void cam_debug(int module_tag, const char *cam_level, const char *func, int line
 #define cam_dbg(format, ...)                                      \
 	cam_debug(CAM_MODULE_TAG, "cam_dbg", __func__, __LINE__, format, ##__VA_ARGS__)
 
-#define CAM_DBG_TRACE
 #ifdef CAM_DBG_TRACE
 #define cam_trace(f, args...)	trace_printk(f, ##args)
 #else
diff --git a/drivers/media/platform/spacemit/vpu_k1x/mvx_log.c b/drivers/media/platform/spacemit/vpu_k1x/mvx_log.c
index 1f7706a8332d..6bbac6c5cedd 100644
--- a/drivers/media/platform/spacemit/vpu_k1x/mvx_log.c
+++ b/drivers/media/platform/spacemit/vpu_k1x/mvx_log.c
@@ -821,13 +821,11 @@ static void drain_ftrace_data(struct mvx_log_drain *drain,
 {
 	size_t i;
 
-	trace_printk("count=%zu\n", count);
 
 	for (i = 0; i < count; ++i) {
 		const char *p = vec[i].iov_base;
 		size_t length = vec[i].iov_len;
 
-		trace_printk("  length=%zu\n", length);
 
 		while (length > 0) {
 			size_t j = min_t(size_t, length, 32);
@@ -842,7 +840,6 @@ static void drain_ftrace_data(struct mvx_log_drain *drain,
 				n += scnprintf(&buf[n], sizeof(buf) - n,
 					       " %02x", *p++);
 
-			trace_printk("%s\n", buf);
 		}
 	}
 }
