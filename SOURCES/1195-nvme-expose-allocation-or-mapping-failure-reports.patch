From 9ffc426f0c762d5d60a315382bdabeadc00f3285 Mon Sep 17 00:00:00 2001
From: lijuan <juan.li@spacemit.com>
Date: Wed, 23 Oct 2024 10:30:37 +0800
Subject: [PATCH 1195/1451] nvme: expose allocation or mapping failure reports

Change-Id: Id61d1a9caaea249c41fce1174c068d417d77e6f4
---
 drivers/nvme/host/pci.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/drivers/nvme/host/pci.c b/drivers/nvme/host/pci.c
index 52c8fd3d5c47..c905cb8879eb 100644
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@ -801,7 +801,7 @@ static blk_status_t nvme_map_data(struct nvme_dev *dev, struct request *req,
 		goto out_free_sg;
 
 	rc = dma_map_sgtable(dev->dev, &iod->sgt, rq_dma_dir(req),
-			     DMA_ATTR_NO_WARN);
+			     0);
 	if (rc) {
 		if (rc == -EREMOTEIO)
 			ret = BLK_STS_TARGET;
@@ -1920,7 +1920,7 @@ static void nvme_free_host_mem(struct nvme_dev *dev)
 
 		dma_free_attrs(dev->dev, size, dev->host_mem_desc_bufs[i],
 			       le64_to_cpu(desc->addr),
-			       DMA_ATTR_NO_KERNEL_MAPPING | DMA_ATTR_NO_WARN);
+			       DMA_ATTR_NO_KERNEL_MAPPING);
 	}
 
 	kfree(dev->host_mem_desc_bufs);
@@ -1964,7 +1964,7 @@ static int __nvme_alloc_host_mem(struct nvme_dev *dev, u64 preferred,
 
 		len = min_t(u64, chunk_size, preferred - size);
 		bufs[i] = dma_alloc_attrs(dev->dev, len, &dma_addr, GFP_KERNEL,
-				DMA_ATTR_NO_KERNEL_MAPPING | DMA_ATTR_NO_WARN);
+				DMA_ATTR_NO_KERNEL_MAPPING);
 		if (!bufs[i])
 			break;
 
@@ -1990,7 +1990,7 @@ static int __nvme_alloc_host_mem(struct nvme_dev *dev, u64 preferred,
 
 		dma_free_attrs(dev->dev, size, bufs[i],
 			       le64_to_cpu(descs[i].addr),
-			       DMA_ATTR_NO_KERNEL_MAPPING | DMA_ATTR_NO_WARN);
+			       DMA_ATTR_NO_KERNEL_MAPPING);
 	}
 
 	kfree(bufs);
-- 
2.47.0

