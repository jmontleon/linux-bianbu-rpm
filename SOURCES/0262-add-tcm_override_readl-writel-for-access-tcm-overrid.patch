From 2768afd8615873f1dba4b1443b6af3b8201c1090 Mon Sep 17 00:00:00 2001
From: zhangmeng <zhangmeng.kevin@spacemit.com>
Date: Tue, 26 Dec 2023 20:56:29 +0800
Subject: [PATCH 0262/1448] add tcm_override_readl/writel for access tcm
 override i/o

on the spacemit k1x platform, there is some i/o area
is override by the tcm, so, need switch the tcm when
read or write these i/o area

Change-Id: I99790e18f637aa1b3bc2a177e7c51964ecb6ed44
---
 arch/riscv/include/asm/csr.h  |  6 +-----
 arch/riscv/include/asm/mmio.h | 38 +++++++++++++++++++++++++++++++++++
 2 files changed, 39 insertions(+), 5 deletions(-)

diff --git a/arch/riscv/include/asm/csr.h b/arch/riscv/include/asm/csr.h
index e48e9b667929..fee6fc66c8a7 100644
--- a/arch/riscv/include/asm/csr.h
+++ b/arch/riscv/include/asm/csr.h
@@ -396,6 +396,7 @@
 #ifdef CONFIG_SOC_SPACEMIT_K1X
 /* TCM enable register */
 #define CSR_TCMCFG		0x5db
+#define TCM_EN			_AC(0x00000001, UL) /* TCM Access Enable */
 #endif
 
 #ifdef CONFIG_RISCV_M_MODE
@@ -518,11 +519,6 @@
 			      : "memory");			\
 })
 
-#ifdef CONFIG_SOC_SPACEMIT_K1X
-#define tcm_config_save()		csr_read(CSR_TCMCFG)
-#define tcm_config_restore(flags)	csr_set(CSR_TCMCFG, flags)
-#endif
-
 #endif /* __ASSEMBLY__ */
 
 #endif /* _ASM_RISCV_CSR_H */
diff --git a/arch/riscv/include/asm/mmio.h b/arch/riscv/include/asm/mmio.h
index 4c58ee7f95ec..07a79ac791a4 100644
--- a/arch/riscv/include/asm/mmio.h
+++ b/arch/riscv/include/asm/mmio.h
@@ -148,4 +148,42 @@ static inline u64 __raw_readq(const volatile void __iomem *addr)
 #define writeq(v, c)	({ __io_bw(); writeq_cpu((v), (c)); __io_aw(); })
 #endif
 
+
+#ifdef CONFIG_SOC_SPACEMIT_K1X
+/*
+  on the spacemit k1x platform, there is some i/o area
+  is override by the tcm, so, need switch the tcm when
+  read or write these i/o area
+*/
+#include <asm/irqflags.h>
+
+/* i/o read on the tcm override area */
+static inline u32 tcm_override_readl(const volatile void __iomem *addr)
+{
+	u32	val;
+	unsigned long flags, tcm_csr;
+
+	flags = arch_local_irq_save();
+	tcm_csr = csr_read_clear(CSR_TCMCFG, TCM_EN);
+	val = readl(addr);
+	csr_set(CSR_TCMCFG, tcm_csr);
+	arch_local_irq_restore(flags);
+
+	return val;
+}
+
+/* i/o write on the tcm override area */
+static inline void tcm_override_writel(u32 val, volatile void __iomem *addr)
+{
+	unsigned long flags, tcm_csr;
+
+	flags = arch_local_irq_save();
+	tcm_csr = csr_read_clear(CSR_TCMCFG, TCM_EN);
+	writel(val, addr);
+	csr_set(CSR_TCMCFG, tcm_csr);
+	arch_local_irq_restore(flags);
+}
+
+#endif
+
 #endif /* _ASM_RISCV_MMIO_H */
-- 
2.47.0

