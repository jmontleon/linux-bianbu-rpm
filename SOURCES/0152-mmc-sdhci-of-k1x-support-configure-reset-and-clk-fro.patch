From 552d5016f955d6202ebf75f4bb8749a27adacc9e Mon Sep 17 00:00:00 2001
From: wanlong <long.wan@spacemit.com>
Date: Fri, 17 Nov 2023 12:25:44 +0800
Subject: [PATCH 0152/1200] mmc: sdhci-of-k1x: support configure reset and clk
 from dts

Change-Id: I0abb879fa4c92ac888a51c1fce16583ddc9b1361
---
 arch/riscv/boot/dts/spacemit/k1-x.dtsi | 49 ++++++++------------------
 drivers/mmc/host/sdhci-of-k1x.c        | 16 +++++++++
 2 files changed, 31 insertions(+), 34 deletions(-)

diff --git a/arch/riscv/boot/dts/spacemit/k1-x.dtsi b/arch/riscv/boot/dts/spacemit/k1-x.dtsi
index ade29c08d18e..30ac61cb020f 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x.dtsi
+++ b/arch/riscv/boot/dts/spacemit/k1-x.dtsi
@@ -296,34 +296,6 @@ pll_clk_emac_ptp: clock-pll_clk_emac_ptp {
 			clock-output-names = "pll_clk_emac_ptp";
 		};
 
-		pll_clk_sdh0: clock-pll_clk_sdh0 {
-			#clock-cells = <0>;
-			compatible = "fixed-clock";
-			clock-frequency = <10000000>;
-			clock-output-names = "pll_clk_sdh0";
-		};
-
-		pll_clk_sdh1: clock-pll_clk_sdh1 {
-			#clock-cells = <0>;
-			compatible = "fixed-clock";
-			clock-frequency = <10000000>;
-			clock-output-names = "pll_clk_sdh1";
-		};
-
-		pll_clk_sdh2: clock-pll_clk_sdh2 {
-			#clock-cells = <0>;
-			compatible = "fixed-clock";
-			clock-frequency = <10000000>;
-			clock-output-names = "pll_clk_sdh2";
-		};
-
-		pll_clk_axi: clock-pll_clk_axi {
-			#clock-cells = <0>;
-			compatible = "fixed-clock";
-			clock-frequency = <10000000>;
-			clock-output-names = "pll_clk_axi";
-		};
-
 		pll_clk_usb: clock-pll_clk_usb {
 			#clock-cells = <0>;
 			compatible = "fixed-clock";
@@ -766,8 +738,11 @@ sdhci0: sdh@d4280000 {
 			reg = <0x0 0xd4280000 0x0 0x200>;
 			interrupts = <99>;
 			interrupt-parent = <&intc>;
-			clocks = <&pll_clk_sdh0
-				  &pll_clk_axi>;
+			resets = <&reset RESET_SDH_AXI>,
+					 <&reset RESET_SDH0>;
+			reset-names = "sdh_axi", "sdh0";
+			clocks = <&ccu CLK_SDH0>,
+					 <&ccu CLK_SDH_AXI>;
 			clock-names = "sdh-io", "sdh-core";
 			status = "disabled";
 		};
@@ -777,8 +752,11 @@ sdhci1: sdh@d4280800 {
 			reg = <0x0 0xd4280800 0x0 0x200>;
 			interrupts = <100>;
 			interrupt-parent = <&intc>;
-			clocks = <&pll_clk_sdh1
-				  &pll_clk_axi>;
+			resets = <&reset RESET_SDH_AXI>,
+					 <&reset RESET_SDH1>;
+			reset-names = "sdh_axi", "sdh1";
+			clocks = <&ccu CLK_SDH1>,
+					 <&ccu CLK_SDH_AXI>;
 			clock-names = "sdh-io", "sdh-core";
 			status = "disabled";
 		};
@@ -788,8 +766,11 @@ sdhci2: sdh@d4281000 {
 			reg = <0x0 0xd4281000 0x0 0x200>;
 			interrupts = <101>;
 			interrupt-parent = <&intc>;
-			clocks = <&pll_clk_sdh2
-				  &pll_clk_axi>;
+			resets = <&reset RESET_SDH_AXI>,
+					 <&reset RESET_SDH2>;
+			reset-names = "sdh_axi", "sdh2";
+			clocks = <&ccu CLK_SDH2>,
+					 <&ccu CLK_SDH_AXI>;
 			clock-names = "sdh-io", "sdh-core";
 			status = "disabled";
 		};
diff --git a/drivers/mmc/host/sdhci-of-k1x.c b/drivers/mmc/host/sdhci-of-k1x.c
index 030bc3845fed..7b5a919498fb 100644
--- a/drivers/mmc/host/sdhci-of-k1x.c
+++ b/drivers/mmc/host/sdhci-of-k1x.c
@@ -27,6 +27,7 @@
 #include <linux/pm.h>
 #include <linux/pm_runtime.h>
 #include <linux/slab.h>
+#include <linux/reset.h>
 
 #include "sdhci.h"
 #include "sdhci-pltfm.h"
@@ -123,6 +124,7 @@ static struct sdhci_host* sdio_host;
 struct sdhci_spacemit {
 	struct clk *clk_core;
 	struct clk *clk_io;
+	struct reset_control *reset;
 	unsigned char power_mode;
 	struct pinctrl_state *pin;
 	struct pinctrl *pinctrl;
@@ -1289,6 +1291,17 @@ static int spacemit_sdhci_probe(struct platform_device *pdev)
 	if (!IS_ERR(spacemit->clk_core))
 		clk_prepare_enable(spacemit->clk_core);
 
+	spacemit->reset = devm_reset_control_array_get_optional_shared(dev);
+	if (IS_ERR(spacemit->reset)) {
+		dev_err(dev, "failed to get reset control\n");
+		ret = PTR_ERR(spacemit->reset);
+		goto err_rst_get;
+	}
+
+	ret = reset_control_deassert(spacemit->reset);
+	if (ret)
+		goto err_rst_get;
+
 	match = of_match_device(of_match_ptr(sdhci_spacemit_of_match), &pdev->dev);
 	if (match) {
 		ret = mmc_of_parse(host->mmc);
@@ -1379,6 +1392,8 @@ static int spacemit_sdhci_probe(struct platform_device *pdev)
 	pm_runtime_disable(&pdev->dev);
 	pm_runtime_put_noidle(&pdev->dev);
 err_of_parse:
+	reset_control_assert(spacemit->reset);
+err_rst_get:
 	clk_disable_unprepare(spacemit->clk_io);
 	clk_disable_unprepare(spacemit->clk_core);
 err_clk_get:
@@ -1398,6 +1413,7 @@ static int spacemit_sdhci_remove(struct platform_device *pdev)
 	pm_runtime_put_noidle(&pdev->dev);
 	sdhci_remove_host(host, 1);
 
+	reset_control_assert(spacemit->reset);
 	clk_disable_unprepare(spacemit->clk_io);
 	clk_disable_unprepare(spacemit->clk_core);
 
-- 
2.47.0

