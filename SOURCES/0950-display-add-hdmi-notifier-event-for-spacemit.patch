From 6da20b2c24dcbf1ca668fe4c50e65a4805cb2506 Mon Sep 17 00:00:00 2001
From: lilijun <lijun.li@spacemit.com>
Date: Fri, 9 Aug 2024 16:51:57 +0800
Subject: [PATCH 0950/1206] display: add hdmi notifier event for spacemit

Change-Id: Ie6a945b540b42384d65ea125b778dd9a1bc2fdff
---
 drivers/gpu/drm/spacemit/spacemit_hdmi.c | 23 +++++++++++++++++++++++
 drivers/gpu/drm/spacemit/spacemit_hdmi.h | 11 +++++++++++
 include/soc/spacemit/spacemit_panel.h    | 10 ++++++++++
 3 files changed, 44 insertions(+)

diff --git a/drivers/gpu/drm/spacemit/spacemit_hdmi.c b/drivers/gpu/drm/spacemit/spacemit_hdmi.c
index cde07b9102f0..3cef50d9f8b9 100644
--- a/drivers/gpu/drm/spacemit/spacemit_hdmi.c
+++ b/drivers/gpu/drm/spacemit/spacemit_hdmi.c
@@ -707,6 +707,27 @@ static struct drm_encoder_helper_funcs spacemit_hdmi_encoder_helper_funcs = {
 	.atomic_check = spacemit_hdmi_encoder_atomic_check,
 };
 
+/* spacemit_hdmi_register_client - register a client notifier */
+int spacemit_hdmi_register_client(struct notifier_block *nb)
+{
+	return blocking_notifier_chain_register(&hdmi_notifier_list, nb);
+}
+EXPORT_SYMBOL(spacemit_hdmi_register_client);
+
+/* spacemit_hdmi_unregister_client - unregister a client notifier */
+int spacemit_hdmi_unregister_client(struct notifier_block *nb)
+{
+	return blocking_notifier_chain_unregister(&hdmi_notifier_list, nb);
+}
+EXPORT_SYMBOL(spacemit_hdmi_unregister_client);
+
+/* spacemit_hdmi_notifier_call_chain - notify clients of hdmi status events */
+int spacemit_hdmi_notifier_call_chain(unsigned long val, void *v)
+{
+	return blocking_notifier_call_chain(&hdmi_notifier_list, val, v);
+}
+EXPORT_SYMBOL_GPL(spacemit_hdmi_notifier_call_chain);
+
 static enum drm_connector_status
 spacemit_hdmi_connector_detect(struct drm_connector *connector, bool force)
 {
@@ -724,10 +745,12 @@ spacemit_hdmi_connector_detect(struct drm_connector *connector, bool force)
 
 	if (hdmi_get_plug_in_status(hdmi)) {
 		DRM_INFO("%s() hdmi status connected\n", __func__);
+		spacemit_hdmi_notifier_call_chain(DRM_HDMI_EVENT_CONNECTED, "status");
 		status = connector_status_connected;
 
 	} else {
 		DRM_INFO("%s() hdmi status disconnected\n", __func__);
+		spacemit_hdmi_notifier_call_chain(DRM_HDMI_EVENT_DISCONNECTED, "status");
 		status = connector_status_disconnected;
 	}
 
diff --git a/drivers/gpu/drm/spacemit/spacemit_hdmi.h b/drivers/gpu/drm/spacemit/spacemit_hdmi.h
index 21009e49a6ff..1b1161ed74d8 100644
--- a/drivers/gpu/drm/spacemit/spacemit_hdmi.h
+++ b/drivers/gpu/drm/spacemit/spacemit_hdmi.h
@@ -3,6 +3,11 @@
  * Copyright (C) 2023 Spacemit Co., Ltd.
  *
  */
+#ifndef _SPACEMIT_HDMI_H_
+#define _SPACEMIT_HDMI_H_
+
+#include <linux/notifier.h>
+#include <soc/spacemit/spacemit_panel.h>
 
 enum {
 	INFOFRAME_VSI = 0x05,
@@ -48,3 +53,9 @@ struct hdmi_timing
 	unsigned short vpol;
 	unsigned short reserved;
 };
+
+static BLOCKING_NOTIFIER_HEAD(hdmi_notifier_list);
+
+int spacemit_hdmi_notifier_call_chain(unsigned long val, void *v);
+
+#endif
diff --git a/include/soc/spacemit/spacemit_panel.h b/include/soc/spacemit/spacemit_panel.h
index 8af7ef84bc20..cd1d7b1fa634 100644
--- a/include/soc/spacemit/spacemit_panel.h
+++ b/include/soc/spacemit/spacemit_panel.h
@@ -20,4 +20,14 @@ enum{
 extern int spacemit_drm_register_client(struct notifier_block *nb);
 extern int spacemit_drm_unregister_client(struct notifier_block *nb);
 
+
+/*  complete the definition of hdmi connect status */
+enum{
+	DRM_HDMI_EVENT_CONNECTED = 0,
+	DRM_HDMI_EVENT_DISCONNECTED,
+};
+
+extern int spacemit_hdmi_register_client(struct notifier_block *nb);
+extern int spacemit_hdmi_unregister_client(struct notifier_block *nb);
+
 #endif
-- 
2.47.0

