From 2ab7c07058b8fcd60bb3b97b7b3ab461e4e3f6d2 Mon Sep 17 00:00:00 2001
From: huzhen <george.hu@spacemit.com>
Date: Tue, 30 Jan 2024 21:17:18 +0800
Subject: [PATCH 0404/1189] qspi: Correct the setting clk rate of k1x qspi

Change-Id: I256c9c956b73d62a4da3a15da0fb9ac1ecbfc674
---
 drivers/spi/spi-k1x-qspi.c | 10 +++-------
 1 file changed, 3 insertions(+), 7 deletions(-)

diff --git a/drivers/spi/spi-k1x-qspi.c b/drivers/spi/spi-k1x-qspi.c
index 1076d6cdb6a0..38024eca3c5e 100755
--- a/drivers/spi/spi-k1x-qspi.c
+++ b/drivers/spi/spi-k1x-qspi.c
@@ -108,7 +108,7 @@
 #define QSPI_SMPR_DDRSMP_MASK		GENMASK(18, 16)
 #define QSPI_SMPR_FSDLY_MASK		BIT(6)
 #define QSPI_SMPR_FSPHS_MASK		BIT(5)
-#define QSPI_SMPR_FSPHS_CLK		(312000000)
+#define QSPI_SMPR_FSPHS_CLK		(416000000)
 #define QSPI_SMPR_HSENA_MASK		BIT(0)
 
 #define QSPI_RBSR			0x10c
@@ -404,11 +404,7 @@ static int qspi_set_func_clk(struct k1x_qspi *qspi)
 	}
 	clk_prepare_enable(qspi->bus_clk);
 
-	/*
-	 * This frequency is 4X of QSPI bus clock frequency,
-	 * so the final QSPI bus clock freq = bit[8:6] selected freq / 4
-	 */
-	ret = clk_set_rate(qspi->clk, qspi->max_hz << 2);
+	ret = clk_set_rate(qspi->clk, qspi->max_hz);
 	if (ret) {
 		dev_err(qspi->dev, "fail to set clk, ret:%d\n", ret);
 		return ret;
@@ -1347,7 +1343,7 @@ static int k1x_qspi_host_init(struct k1x_qspi *qspi)
 	qspi_enter_mode(qspi, QSPI_DISABLE_MODE);
 
 	/* sampled by sfif_clk_b; half cycle delay; */
-	if (qspi->max_hz <= (QSPI_SMPR_FSPHS_CLK >> 2))
+	if (qspi->max_hz < (QSPI_SMPR_FSPHS_CLK >> 2))
 		qspi_writel(qspi, 0x0, base + QSPI_SMPR);
 	else
 		qspi_writel(qspi, QSPI_SMPR_FSPHS_MASK, base + QSPI_SMPR);
-- 
2.47.1

