From 1ba8075ddfbecd4b2aca4904f4301a2da675a804 Mon Sep 17 00:00:00 2001
From: James Deng <james.deng@spacemit.com>
Date: Tue, 29 Oct 2024 17:49:32 +0800
Subject: [PATCH 07/13] Update for v2.0.1

---
 arch/riscv/boot/dts/spacemit/k1-x-hdmi.dtsi   |  18 ++-
 arch/riscv/boot/dts/spacemit/k1-x.dtsi        |  16 ---
 .../boot/dts/spacemit/k1-x_FusionOne.dts      |   7 +
 arch/riscv/boot/dts/spacemit/k1-x_MINI-PC.dts |   7 +
 .../boot/dts/spacemit/k1-x_MUSE-Book.dts      |   9 +-
 .../boot/dts/spacemit/k1-x_MUSE-Card.dts      |   7 +
 .../dts/spacemit/k1-x_MUSE-Paper-mini-4g.dts  |   2 +-
 arch/riscv/boot/dts/spacemit/k1-x_MUSE-Pi.dts |   7 +
 .../boot/dts/spacemit/k1-x_baton-camera.dts   |   7 +
 arch/riscv/boot/dts/spacemit/k1-x_deb1.dts    |   7 +
 arch/riscv/boot/dts/spacemit/k1-x_deb2.dts    |   7 +
 arch/riscv/boot/dts/spacemit/k1-x_hs450.dts   |   9 +-
 arch/riscv/boot/dts/spacemit/k1-x_kx312.dts   |   7 +
 arch/riscv/boot/dts/spacemit/k1-x_lpi3a.dts   |   7 +
 .../boot/dts/spacemit/k1-x_milkv-jupiter.dts  |   7 +
 .../dts/spacemit/lcd/lcd_jd9365dah3_mipi.dtsi |   4 +-
 .../boot/dts/spacemit/m1-x_milkv-jupiter.dts  |   7 +
 drivers/gpu/drm/img-rogue/physmem_dmabuf.c    |   6 +-
 drivers/gpu/drm/spacemit/spacemit_hdmi.c      |   2 +-
 drivers/input/misc/spacemit-pwrkey.c          |   2 -
 .../spacemit/camera/cam_cpp/cpp_iommu.c       |   6 +-
 .../spacemit/camera/cam_isp/k1x_isp_drv.c     |   4 +-
 .../platform/spacemit/vpu_k1x/if/mvx_mmu.c    |   8 +-
 drivers/media/rc/ir-spacemit.c                |   2 +
 .../rtl8852be/os_dep/linux/ioctl_cfg80211.c   |   6 +
 .../rtl8852be/os_dep/linux/wifi_regd.c        |   2 +
 .../realtek/rtl8852be/phl/hal_g6/mac/errors.h |   6 +
 .../realtek/rtl8852be/phl/pltfm_ops_linux.h   |  12 +-
 .../platform/platform_spacemit_pci.c          |  14 +-
 .../rtl8852bs/os_dep/linux/ioctl_cfg80211.c   |  13 +-
 .../rtl8852bs/os_dep/linux/wifi_regd.c        |   2 +
 .../rtl8852bs/phl/hal_g6/mac/mac_ax/_sdio.c   |  15 ++
 .../hal_g6/mac/mac_ax/mac_8852b/_sdio_8852b.c |   5 +
 drivers/nvme/host/pci.c                       |   8 +-
 drivers/pci/controller/dwc/pcie-k1x.c         |  15 --
 drivers/soc/spacemit/jpu/jpu.c                |   6 +-
 drivers/soc/spacemit/spacemit_lid.c           |  12 --
 drivers/soc/spacemit/v2d/v2d_drv.c            |   6 +-
 drivers/tty/serial/pxa_k1x.c                  |   2 +
 sound/soc/codecs/es8326.c                     |  27 ++--
 sound/soc/spacemit/spacemit-snd-card.c        |   2 +-
 sound/soc/spacemit/spacemit-snd-pcm-dma.c     |   2 +-
 sound/soc/spacemit/spacemit-snd-sspa.c        | 129 +++++++++++++++---
 43 files changed, 338 insertions(+), 111 deletions(-)

diff --git a/arch/riscv/boot/dts/spacemit/k1-x-hdmi.dtsi b/arch/riscv/boot/dts/spacemit/k1-x-hdmi.dtsi
index 53bdcef5b4a8..ec2c6c19734f 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x-hdmi.dtsi
+++ b/arch/riscv/boot/dts/spacemit/k1-x-hdmi.dtsi
@@ -38,7 +38,10 @@ dpu_offline0_hdmi_out: endpoint@1 {
 	};
 
 	hdmi: hdmi@C0400500 {
-		compatible = "spacemit,hdmi";
+		compatible = "spacemit,hdmi", "simple-bus";
+		#address-cells = <2>;
+		#size-cells = <2>;
+		ranges;
 		reg = <0 0xC0400500 0 0x200>;
 		interrupt-parent = <&intc>;
 		interrupts = <136>;
@@ -58,5 +61,18 @@ hdmi_in: endpoint@0 {
 				remote-endpoint = <&dpu_online2_hdmi_out>;
 			};
 		};
+
+		hdmiaudio: spacemit_snd_sspa@C0883900 {
+			compatible = "spacemit,spacemit-snd-sspa";
+			reg = <0 0xc0883900 0 0x300>,
+				<0 0xc0882000 0 0x50>;
+			clocks = <&ccu CLK_RCPU_HDMIAUDIO>;
+			resets = <&reset RESET_RCPU_HDMIAUDIO>;
+			assigned-clocks = <&ccu CLK_RCPU_HDMIAUDIO>;
+			assigned-clock-rates = <48000>;
+			power-domains = <&power K1X_PMU_DUMMY_PWR_DOMAIN>;
+			#sound-dai-cells = <0>;
+			status = "disabled";
+		};
 	};
 };
diff --git a/arch/riscv/boot/dts/spacemit/k1-x.dtsi b/arch/riscv/boot/dts/spacemit/k1-x.dtsi
index 8983970bea75..bfdaa7862995 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x.dtsi
+++ b/arch/riscv/boot/dts/spacemit/k1-x.dtsi
@@ -2472,19 +2472,6 @@ hdmi_dma: spacemit_snd_dma_hdmi {
 		status = "okay";
 	};
 
-	hdmi_sspa: spacemit_snd_sspa {
-		compatible = "spacemit,spacemit-snd-sspa";
-		reg = <0 0xc0883900 0 0x300>,
-		      <0 0xc0882000 0 0x50>;
-		clocks = <&ccu CLK_RCPU_HDMIAUDIO>;
-		resets = <&reset RESET_RCPU_HDMIAUDIO>;
-		assigned-clocks = <&ccu CLK_RCPU_HDMIAUDIO>;
-		assigned-clock-rates = <48000>;
-		power-domains = <&power K1X_PMU_DUMMY_PWR_DOMAIN>;
-		#sound-dai-cells = <0>;
-		status = "okay";
-	};
-
 	dummy_codec: dummy_codec{
 		compatible = "spacemit,dummy-codec";
 		#sound-dai-cells = <0>;
@@ -2545,9 +2532,6 @@ sound_hdmi: snd-card@0 {
 		status = "disabled";
 		interconnects = <&dram_range4>;
 		interconnect-names = "dma-mem";
-		simple-audio-card,cpu {
-			sound-dai = <&hdmi_sspa>;
-		};
 		simple-audio-card,plat {
 			sound-dai = <&hdmi_dma>;
 		};
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_FusionOne.dts b/arch/riscv/boot/dts/spacemit/k1-x_FusionOne.dts
index 0a2960f67d0a..bb026a56b180 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_FusionOne.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_FusionOne.dts
@@ -869,8 +869,15 @@ &i2s0 {
 	status = "okay";
 };
 
+&hdmiaudio {
+	status = "okay";
+};
+
 &sound_hdmi {
 	status = "okay";
+	simple-audio-card,cpu {
+		sound-dai = <&hdmiaudio>;
+	};
 };
 
 &pwm12 {
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_MINI-PC.dts b/arch/riscv/boot/dts/spacemit/k1-x_MINI-PC.dts
index 94a36d30e641..1be8647964e2 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_MINI-PC.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_MINI-PC.dts
@@ -861,8 +861,15 @@ &i2s0 {
 	status = "okay";
 };
 
+&hdmiaudio {
+	status = "okay";
+};
+
 &sound_hdmi {
 	status = "okay";
+	simple-audio-card,cpu {
+		sound-dai = <&hdmiaudio>;
+	};
 };
 
 &sound_codec {
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Book.dts b/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Book.dts
index e7bafeff695c..d6c702328628 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Book.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Book.dts
@@ -771,14 +771,12 @@ &pcie1_rc {
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_pcie1_3>;
 	num-lanes = <1>;
-	suspend_power_on;
 	status = "okay";
 };
 
 &pcie2_rc {
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_pcie2_4>;
-	suspend_power_on;
 	status = "okay";
 };
 
@@ -841,8 +839,15 @@ &i2s0 {
         status = "okay";
 };
 
+&hdmiaudio {
+	status = "okay";
+};
+
 &sound_hdmi {
 	status = "okay";
+	simple-audio-card,cpu {
+		sound-dai = <&hdmiaudio>;
+	};
 };
 
 &sound_codec {
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Card.dts b/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Card.dts
index 359e4c8c1a7d..2942122e7968 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Card.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Card.dts
@@ -906,6 +906,13 @@ &rcpu {
 	status = "okay";
 };
 
+&hdmiaudio {
+	status = "okay";
+};
+
 &sound_hdmi {
 	status = "okay";
+	simple-audio-card,cpu {
+		sound-dai = <&hdmiaudio>;
+	};
 };
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Paper-mini-4g.dts b/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Paper-mini-4g.dts
index a9aabeee7e89..9c595b3170f1 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Paper-mini-4g.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Paper-mini-4g.dts
@@ -260,7 +260,7 @@ &pwm14 {
 
 &dpu_online2_dsi {
 	memory-region = <&dpu_resv>;
-	spacemit-dpu-bitclk = <614400000>;
+	spacemit-dpu-bitclk = <500000000>;
 	dsi_1v2-supply = <&ldo_5>;
 	dsi_1v8-supply = <&ldo_11>;
 	vin-supply-names = "dsi_1v2", "dsi_1v8";
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Pi.dts b/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Pi.dts
index b4389881c9f5..13393ae8d670 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Pi.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_MUSE-Pi.dts
@@ -1075,8 +1075,15 @@ &i2s0 {
         status = "okay";
 };
 
+&hdmiaudio {
+	status = "okay";
+};
+
 &sound_hdmi {
 	status = "okay";
+	simple-audio-card,cpu {
+		sound-dai = <&hdmiaudio>;
+	};
 };
 
 &sound_codec {
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_baton-camera.dts b/arch/riscv/boot/dts/spacemit/k1-x_baton-camera.dts
index e9096c1ccaf6..3284d8f86537 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_baton-camera.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_baton-camera.dts
@@ -906,6 +906,13 @@ &rcpu {
 	status = "okay";
 };
 
+&hdmiaudio {
+        status = "disabled";
+};
+
 &sound_hdmi {
 	status = "disabled";
+	simple-audio-card,cpu {
+		sound-dai = <&hdmiaudio>;
+	};
 };
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_deb1.dts b/arch/riscv/boot/dts/spacemit/k1-x_deb1.dts
index c7fff33f7e40..2cab7ea9f545 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_deb1.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_deb1.dts
@@ -1118,8 +1118,15 @@ &i2s0 {
 	status = "okay";
 };
 
+&hdmiaudio {
+	status = "okay";
+};
+
 &sound_hdmi {
 	status = "okay";
+	simple-audio-card,cpu {
+		sound-dai = <&hdmiaudio>;
+	};
 };
 
 &sound_codec {
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_deb2.dts b/arch/riscv/boot/dts/spacemit/k1-x_deb2.dts
index a6be013b82f4..e9cd8e7d4690 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_deb2.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_deb2.dts
@@ -987,8 +987,15 @@ &rcpu {
 	status = "okay";
 };
 
+&hdmiaudio {
+	status = "okay";
+};
+
 &sound_hdmi {
 	status = "okay";
+	simple-audio-card,cpu {
+		sound-dai = <&hdmiaudio>;
+	};
 };
 
 &watchdog {
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_hs450.dts b/arch/riscv/boot/dts/spacemit/k1-x_hs450.dts
index 8e4728e02b56..37a18ed7dc99 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_hs450.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_hs450.dts
@@ -813,8 +813,15 @@ &i2s0 {
 	status = "okay";
 };
 
+&hdmiaudio {
+	status = "disabled";
+};
+
 &sound_hdmi {
-	status = "okay";
+	status = "disabled";
+	simple-audio-card,cpu {
+		sound-dai = <&hdmiaudio>;
+	};
 };
 
 &sound_codec {
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_kx312.dts b/arch/riscv/boot/dts/spacemit/k1-x_kx312.dts
index 1f64648a82f0..84ad7eaf41dc 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_kx312.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_kx312.dts
@@ -843,8 +843,15 @@ &i2s0 {
 	status = "okay";
 };
 
+&hdmiaudio {
+	status = "okay";
+};
+
 &sound_hdmi {
 	status = "okay";
+	simple-audio-card,cpu {
+		sound-dai = <&hdmiaudio>;
+	};
 };
 
 &sound_codec {
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_lpi3a.dts b/arch/riscv/boot/dts/spacemit/k1-x_lpi3a.dts
index 7b41a12ed2ad..2a8c886881bc 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_lpi3a.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_lpi3a.dts
@@ -1218,8 +1218,15 @@ &i2s0 {
         status = "okay";
 };
 
+&hdmiaudio {
+	status = "okay";
+};
+
 &sound_hdmi {
 	status = "okay";
+	simple-audio-card,cpu {
+		sound-dai = <&hdmiaudio>;
+	};
 };
 
 &sound_codec {
diff --git a/arch/riscv/boot/dts/spacemit/k1-x_milkv-jupiter.dts b/arch/riscv/boot/dts/spacemit/k1-x_milkv-jupiter.dts
index 59f2e6872bdd..f8f4720a7cd2 100644
--- a/arch/riscv/boot/dts/spacemit/k1-x_milkv-jupiter.dts
+++ b/arch/riscv/boot/dts/spacemit/k1-x_milkv-jupiter.dts
@@ -1140,8 +1140,15 @@ &i2s0 {
         status = "okay";
 };
 
+&hdmiaudio {
+	status = "okay";
+};
+
 &sound_hdmi {
 	status = "okay";
+	simple-audio-card,cpu {
+		sound-dai = <&hdmiaudio>;
+	};
 };
 
 &sound_codec {
diff --git a/arch/riscv/boot/dts/spacemit/lcd/lcd_jd9365dah3_mipi.dtsi b/arch/riscv/boot/dts/spacemit/lcd/lcd_jd9365dah3_mipi.dtsi
index de33a0d5cb0e..f73bc3012282 100644
--- a/arch/riscv/boot/dts/spacemit/lcd/lcd_jd9365dah3_mipi.dtsi
+++ b/arch/riscv/boot/dts/spacemit/lcd/lcd_jd9365dah3_mipi.dtsi
@@ -22,7 +22,7 @@ lcd_jd9365dah3_mipi: lcd_jd9365dah3_mipi {
                 work-mode = <0>;
                 rgb-mode = <3>;
                 lane-number = <4>;
-                phy-bit-clock = <614400000>;
+                phy-bit-clock = <500000000>;
                 split-enable = <0>;
                 eotp-enable = <0>;
                 burst-mode = <2>;
@@ -260,7 +260,7 @@ lcd_jd9365dah3_mipi: lcd_jd9365dah3_mipi {
 
                 display-timings {
                         timing0 {
-                                clock-frequency = <76800000>;
+                                clock-frequency = <70000000>;
                                 hactive = <800>;
                                 hfront-porch = <40>;
                                 hback-porch = <20>;
diff --git a/arch/riscv/boot/dts/spacemit/m1-x_milkv-jupiter.dts b/arch/riscv/boot/dts/spacemit/m1-x_milkv-jupiter.dts
index 499aa6eb4bf1..e6d74c2d1672 100644
--- a/arch/riscv/boot/dts/spacemit/m1-x_milkv-jupiter.dts
+++ b/arch/riscv/boot/dts/spacemit/m1-x_milkv-jupiter.dts
@@ -1137,8 +1137,15 @@ &i2s0 {
         status = "okay";
 };
 
+&hdmiaudio {
+	status = "okay";
+};
+
 &sound_hdmi {
 	status = "okay";
+	simple-audio-card,cpu {
+		sound-dai = <&hdmiaudio>;
+	};
 };
 
 &sound_codec {
diff --git a/drivers/gpu/drm/img-rogue/physmem_dmabuf.c b/drivers/gpu/drm/img-rogue/physmem_dmabuf.c
index 619b9b5b4e4d..d11e71f7b299 100644
--- a/drivers/gpu/drm/img-rogue/physmem_dmabuf.c
+++ b/drivers/gpu/drm/img-rogue/physmem_dmabuf.c
@@ -317,7 +317,7 @@ static void PMRFinalizeDmaBuf(PMR_IMPL_PRIVDATA pvPriv)
 
 	psPrivData->ui32PhysPageCount = 0;
 
-	dma_buf_unmap_attachment(psAttachment, psSgTable, DMA_BIDIRECTIONAL);
+	dma_buf_unmap_attachment_unlocked(psAttachment, psSgTable, DMA_BIDIRECTIONAL);
 
 	if (psPrivData->bPoisonOnFree)
 	{
@@ -645,7 +645,7 @@ PhysmemCreateNewDmaBufBackedPMR(PHYS_HEAP *psHeap,
 		}
 	}
 
-	table = dma_buf_map_attachment(psAttachment, DMA_BIDIRECTIONAL);
+	table = dma_buf_map_attachment_unlocked(psAttachment, DMA_BIDIRECTIONAL);
 	if (IS_ERR_OR_NULL(table))
 	{
 		eError = PVRSRV_ERROR_INVALID_PARAMS;
@@ -761,7 +761,7 @@ PhysmemCreateNewDmaBufBackedPMR(PHYS_HEAP *psHeap,
 	return PVRSRV_OK;
 
 errUnmap:
-	dma_buf_unmap_attachment(psAttachment, table, DMA_BIDIRECTIONAL);
+	dma_buf_unmap_attachment_unlocked(psAttachment, table, DMA_BIDIRECTIONAL);
 errFreePhysAddr:
 	OSFreeMem(psPrivData->pasDevPhysAddr);
 errFreePrivData:
diff --git a/drivers/gpu/drm/spacemit/spacemit_hdmi.c b/drivers/gpu/drm/spacemit/spacemit_hdmi.c
index 3cef50d9f8b9..7531fe51cb45 100644
--- a/drivers/gpu/drm/spacemit/spacemit_hdmi.c
+++ b/drivers/gpu/drm/spacemit/spacemit_hdmi.c
@@ -1104,7 +1104,7 @@ static int spacemit_hdmi_driver_init(void)
 {
        return platform_driver_register(&spacemit_hdmi_driver);
 }
-late_initcall_sync(spacemit_hdmi_driver_init);
+late_initcall(spacemit_hdmi_driver_init);
 
 MODULE_DESCRIPTION("Spacemit HDMI Driver");
 MODULE_LICENSE("GPL v2");
diff --git a/drivers/input/misc/spacemit-pwrkey.c b/drivers/input/misc/spacemit-pwrkey.c
index 3ac4f518d0a3..3ee621a3e66c 100644
--- a/drivers/input/misc/spacemit-pwrkey.c
+++ b/drivers/input/misc/spacemit-pwrkey.c
@@ -28,7 +28,6 @@ static irqreturn_t pwrkey_fall_irq(int irq, void *_pwr)
 		input_report_key(pwr, KEY_POWER, 1);
 		input_sync(pwr);
 		fall_triggered = 1;
-		pm_stay_awake(pwr->dev.parent);
 	}
 	spin_unlock_irqrestore(&pm_lock, flags);
 
@@ -45,7 +44,6 @@ static irqreturn_t pwrkey_rise_irq(int irq, void *_pwr)
 	if (fall_triggered) {
 		input_report_key(pwr, KEY_POWER, 0);
 		input_sync(pwr);
-		pm_relax(pwr->dev.parent);
 		fall_triggered = 0;
 	}
 	spin_unlock_irqrestore(&pm_lock, flags);
diff --git a/drivers/media/platform/spacemit/camera/cam_cpp/cpp_iommu.c b/drivers/media/platform/spacemit/camera/cam_cpp/cpp_iommu.c
index da8df1577feb..73566e36d2ec 100644
--- a/drivers/media/platform/spacemit/camera/cam_cpp/cpp_iommu.c
+++ b/drivers/media/platform/spacemit/camera/cam_cpp/cpp_iommu.c
@@ -266,7 +266,7 @@ cpp_iommu_map_buffer_and_add_to_list(struct cpp_iommu_device *mmu_dev, int fd,
 	//      dba->dma_map_attrs |= DMA_ATTR_SKIP_CPU_SYNC;
 
 	/* get the associated scatterlist for this buffer */
-	sgt = dma_buf_map_attachment(dba, dma_dir);
+	sgt = dma_buf_map_attachment_unlocked(dba, dma_dir);
 	if (IS_ERR(sgt)) {
 		pr_err("Error getting dmabuf scatterlist, %ld\n", PTR_ERR(sgt));
 		dma_buf_detach(dbuf, dba);
@@ -309,7 +309,7 @@ cpp_iommu_map_buffer_and_add_to_list(struct cpp_iommu_device *mmu_dev, int fd,
 	return 0;
 
 err_alloc:
-	dma_buf_unmap_attachment(dba, sgt, dma_dir);
+	dma_buf_unmap_attachment_unlocked(dba, sgt, dma_dir);
 	dma_buf_detach(dbuf, dba);
 	dma_buf_put(dbuf);
 
@@ -390,7 +390,7 @@ static int cpp_iommu_unmap_buffer_and_remove_from_list(struct cam_dmabuf_info
 		return -EINVAL;
 	}
 
-	dma_buf_unmap_attachment(mapping_info->attach, mapping_info->table,
+	dma_buf_unmap_attachment_unlocked(mapping_info->attach, mapping_info->table,
 				 mapping_info->dir);
 	dma_buf_detach(mapping_info->buf, mapping_info->attach);
 	dma_buf_put(mapping_info->buf);
diff --git a/drivers/media/platform/spacemit/camera/cam_isp/k1x_isp_drv.c b/drivers/media/platform/spacemit/camera/cam_isp/k1x_isp_drv.c
index 4a360d72a3c1..a4b199b42942 100644
--- a/drivers/media/platform/spacemit/camera/cam_isp/k1x_isp_drv.c
+++ b/drivers/media/platform/spacemit/camera/cam_isp/k1x_isp_drv.c
@@ -244,7 +244,7 @@ int _isp_dev_put_phyaddr_to_dma_buf(struct dma_buf *dma_buffer,
 				    struct dma_buf_attachment *attach,
 				    struct sg_table *sgt)
 {
-	dma_buf_unmap_attachment(attach, sgt, DMA_BIDIRECTIONAL);
+	dma_buf_unmap_attachment_unlocked(attach, sgt, DMA_BIDIRECTIONAL);
 	dma_buf_detach(dma_buffer, attach);
 	dma_buf_put(dma_buffer);
 
@@ -274,7 +274,7 @@ int k1xisp_dev_get_phyaddr_from_dma_buf(int fd, __u64 *phy_addr)
 
 	get_dma_buf(dma_buffer);
 
-	sgt = dma_buf_map_attachment(attach, DMA_BIDIRECTIONAL);
+	sgt = dma_buf_map_attachment_unlocked(attach, DMA_BIDIRECTIONAL);
 	if (IS_ERR(sgt)) {
 		ret = -EPERM;
 		goto fail_detach;
diff --git a/drivers/media/platform/spacemit/vpu_k1x/if/mvx_mmu.c b/drivers/media/platform/spacemit/vpu_k1x/if/mvx_mmu.c
index b50c19f83ece..a6d174a03b4f 100644
--- a/drivers/media/platform/spacemit/vpu_k1x/if/mvx_mmu.c
+++ b/drivers/media/platform/spacemit/vpu_k1x/if/mvx_mmu.c
@@ -866,7 +866,7 @@ struct mvx_mmu_pages *mvx_mmu_alloc_pages_dma_buf(struct device *dev,
 		return (struct mvx_mmu_pages *)attach;
 	}
 
-	sgt = dma_buf_map_attachment(attach, DMA_BIDIRECTIONAL);
+	sgt = dma_buf_map_attachment_unlocked(attach, DMA_BIDIRECTIONAL);
 	if (IS_ERR(sgt)) {
 		MVX_LOG_PRINT(&mvx_log_if, MVX_LOG_WARNING,
 			      "Failed to get SG table from DMA buffer.");
@@ -890,7 +890,7 @@ struct mvx_mmu_pages *mvx_mmu_alloc_pages_dma_buf(struct device *dev,
 	list_add_tail(&mbuf->head, &pages->dmabuf);
 
 unmap:
-	dma_buf_unmap_attachment(attach, sgt, DMA_BIDIRECTIONAL);
+	dma_buf_unmap_attachment_unlocked(attach, sgt, DMA_BIDIRECTIONAL);
 
 detach:
 	dma_buf_detach(dmabuf, attach);
@@ -920,7 +920,7 @@ int mvx_mmu_pages_append_dma_buf(struct mvx_mmu_pages *pages,
 		return PTR_ERR(attach);
 	}
 
-	sgt = dma_buf_map_attachment(attach, DMA_BIDIRECTIONAL);
+	sgt = dma_buf_map_attachment_unlocked(attach, DMA_BIDIRECTIONAL);
 	if (IS_ERR(sgt)) {
 		MVX_LOG_PRINT(&mvx_log_if, MVX_LOG_WARNING,
 			      "Failed to get SG table from DMA buffer.");
@@ -947,7 +947,7 @@ int mvx_mmu_pages_append_dma_buf(struct mvx_mmu_pages *pages,
 	list_add_tail(&mbuf->head, &pages->dmabuf);
 
 unmap:
-	dma_buf_unmap_attachment(attach, sgt, DMA_BIDIRECTIONAL);
+	dma_buf_unmap_attachment_unlocked(attach, sgt, DMA_BIDIRECTIONAL);
 
 detach:
 	dma_buf_detach(dmabuf, attach);
diff --git a/drivers/media/rc/ir-spacemit.c b/drivers/media/rc/ir-spacemit.c
index 65572dbb2418..0005461aad9d 100644
--- a/drivers/media/rc/ir-spacemit.c
+++ b/drivers/media/rc/ir-spacemit.c
@@ -320,6 +320,7 @@ static const struct of_device_id spacemit_ir_match[] = {
 		.compatible = "spacemit,k1x-irc",
 		.data = &spacemit_k1x_ir_data,
 	},
+	{ /* end of list */ }
 };
 
 static struct platform_driver spacemit_ir_driver = {
@@ -345,6 +346,7 @@ static const struct of_device_id spacemit_rir_match[] = {
 		.compatible = "spacemit,k1x-rirc",
 		.data = &spacemit_k1x_rir_data,
 	},
+	{ /* end of list */ }
 };
 
 static struct platform_driver spacemit_rir_driver = {
diff --git a/drivers/net/wireless/realtek/rtl8852be/os_dep/linux/ioctl_cfg80211.c b/drivers/net/wireless/realtek/rtl8852be/os_dep/linux/ioctl_cfg80211.c
index 3d4cf4cfa785..6f6772b66a1e 100644
--- a/drivers/net/wireless/realtek/rtl8852be/os_dep/linux/ioctl_cfg80211.c
+++ b/drivers/net/wireless/realtek/rtl8852be/os_dep/linux/ioctl_cfg80211.c
@@ -228,6 +228,7 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter,
 					u8 ht, bool started)
 {
 	struct wiphy *wiphy = adapter_to_wiphy(adapter);
+	struct net_device *ndev = adapter->pnetdev;
 	u8 ret = _SUCCESS;
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
 	unsigned int link_id = 0;
@@ -243,8 +244,10 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter,
 	if (ret != _SUCCESS)
 		goto exit;
 
+
 	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 19, 0))
 	if (started) {
+		mutex_lock(&ndev->ieee80211_ptr->mtx);
 		#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)) || defined(CONFIG_MLD_KERNEL_PATCH)
 		cfg80211_ch_switch_started_notify(adapter->pnetdev, &chdef, link_id, 0, false, punct_bitmap);
 		#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
@@ -261,6 +264,7 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter,
 		#else
 		cfg80211_ch_switch_started_notify(adapter->pnetdev, &chdef, 0);
 		#endif
+		mutex_unlock(&ndev->ieee80211_ptr->mtx);
 		goto exit;
 	}
 	#endif
@@ -268,6 +272,7 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter,
 	if (!rtw_cfg80211_allow_ch_switch_notify(adapter))
 		goto exit;
 
+	mutex_lock(&ndev->ieee80211_ptr->mtx);
 	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0)) || defined(CONFIG_MLD_KERNEL_PATCH)
 	cfg80211_ch_switch_notify(adapter->pnetdev, &chdef, link_id, punct_bitmap);
 	#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 2))
@@ -276,6 +281,7 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter,
 	#else
 	cfg80211_ch_switch_notify(adapter->pnetdev, &chdef);
 	#endif
+	mutex_unlock(&ndev->ieee80211_ptr->mtx);
 
 #else
 	int freq = rtw_bch2freq(rtw_chdef->band, rtw_chdef->chan);
diff --git a/drivers/net/wireless/realtek/rtl8852be/os_dep/linux/wifi_regd.c b/drivers/net/wireless/realtek/rtl8852be/os_dep/linux/wifi_regd.c
index 861be1f45895..295689e78602 100644
--- a/drivers/net/wireless/realtek/rtl8852be/os_dep/linux/wifi_regd.c
+++ b/drivers/net/wireless/realtek/rtl8852be/os_dep/linux/wifi_regd.c
@@ -397,7 +397,9 @@ void rtw_update_wiphy_regd(struct wiphy *wiphy, struct get_chplan_resp *chplan,
 		rtnl_lock();
 
 	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 12, 0))
+	wiphy_lock(wiphy);
 	ret = regulatory_set_wiphy_regd_sync(wiphy, regd);
+	wiphy_unlock(wiphy);
 	#else
 	ret = regulatory_set_wiphy_regd_sync_rtnl(wiphy, regd);
 	#endif
diff --git a/drivers/net/wireless/realtek/rtl8852be/phl/hal_g6/mac/errors.h b/drivers/net/wireless/realtek/rtl8852be/phl/hal_g6/mac/errors.h
index 1c6268ca63b2..c32d88de6105 100644
--- a/drivers/net/wireless/realtek/rtl8852be/phl/hal_g6/mac/errors.h
+++ b/drivers/net/wireless/realtek/rtl8852be/phl/hal_g6/mac/errors.h
@@ -203,6 +203,8 @@
 	adapter->pltfm_cb->msg_print(adapter->drv_adapter, _PHL_ALWAYS_,  __VA_ARGS__)
 #endif
 
+#undef MAC_AX_DBG_MSG_EN
+#define MAC_AX_DBG_MSG_EN 0
 #if MAC_AX_DBG_MSG_EN
 
 #undef PLTFM_MSG_ALWAYS
@@ -310,6 +312,10 @@ do {									\
 
 #else
 
+#undef PLTFM_MSG_ALWAYS
+
+#define	MAC_DBG_MSG(...)	do {} while (0)
+
 /* Disable debug msg  */
 #define PLTFM_MSG_ALWAYS(...)	do {} while (0)
 #define PLTFM_MSG_ERR(...)	do {} while (0)
diff --git a/drivers/net/wireless/realtek/rtl8852be/phl/pltfm_ops_linux.h b/drivers/net/wireless/realtek/rtl8852be/phl/pltfm_ops_linux.h
index a70bb0ea3ba7..610183b20570 100644
--- a/drivers/net/wireless/realtek/rtl8852be/phl/pltfm_ops_linux.h
+++ b/drivers/net/wireless/realtek/rtl8852be/phl/pltfm_ops_linux.h
@@ -269,7 +269,8 @@ static inline void _os_pkt_buf_unmap_rx_pci(struct dvobj_priv *pobj, u32 bus_add
 	if (g_pcie_reserved_mem_dev)
 		pdev->dev.dma_mask = NULL;
 #endif
-	dma_unmap_single(&pdev->dev, dma_addr, buf_sz, DMA_FROM_DEVICE);
+	if (dma_addr != DMA_MAPPING_ERROR)
+		dma_unmap_single(&pdev->dev, dma_addr, buf_sz, DMA_FROM_DEVICE);
 
 #ifdef RTW_CORE_RECORD
 	phl_add_record(d, REC_RX_UNMAP, bus_addr_l, buf_sz);
@@ -307,6 +308,9 @@ static inline void _os_pkt_buf_map_rx_pci(struct dvobj_priv *pobj,
 		pdev->dev.dma_mask = NULL;
 #endif
 	dma_addr = dma_map_single(&pdev->dev, skb->data, buf_sz, DMA_FROM_DEVICE);
+	if (dma_mapping_error(&pdev->dev, dma_addr)) {
+		dma_addr = DMA_MAPPING_ERROR;
+	}
 	*bus_addr_l = (u32)dma_addr;
 
 	#ifdef PHL_DMA_ADDR_64
@@ -432,6 +436,9 @@ static inline void *_os_pkt_buf_alloc_rx(void *d, u32 *bus_addr_l,
 	else
 	{
 		dma_addr = dma_map_single(&pdev->dev, skb->data, rxbuf_size, DMA_FROM_DEVICE);
+		if (dma_mapping_error(&pdev->dev, dma_addr)) {
+			dma_addr = DMA_MAPPING_ERROR;
+		}
 		*bus_addr_l = (u32)dma_addr;
 	}
 #endif
@@ -474,7 +481,8 @@ static inline void _os_pkt_buf_free_rx(void *d, u8 *vir_addr, u32 bus_addr_l,
 		_os_free_fake_skb(pdev, skb, buf_sz, cache);
 		return;
 	} else {
-		dma_unmap_single(&pdev->dev, bus_addr, buf_sz, DMA_FROM_DEVICE);
+		if (bus_addr != DMA_MAPPING_ERROR)
+			dma_unmap_single(&pdev->dev, bus_addr, buf_sz, DMA_FROM_DEVICE);
 	}
 #endif
 #endif /*CONFIG_PCI_HCI*/
diff --git a/drivers/net/wireless/realtek/rtl8852be/platform/platform_spacemit_pci.c b/drivers/net/wireless/realtek/rtl8852be/platform/platform_spacemit_pci.c
index 037a99c99d7c..ef0a5d32cbaf 100644
--- a/drivers/net/wireless/realtek/rtl8852be/platform/platform_spacemit_pci.c
+++ b/drivers/net/wireless/realtek/rtl8852be/platform/platform_spacemit_pci.c
@@ -23,7 +23,7 @@ extern int spacemit_wlan_set_power(int on);
 void pci_cache_wback(struct pci_dev *hwdev,
 			dma_addr_t *bus_addr, size_t size, int direction)
 {
-	if (NULL != hwdev && NULL != bus_addr) {
+	if (NULL != hwdev && NULL != bus_addr && *bus_addr != DMA_MAPPING_ERROR) {
 	  	dma_sync_single_for_device(&hwdev->dev, *bus_addr, size,
 					direction);
 	} else
@@ -32,7 +32,7 @@ void pci_cache_wback(struct pci_dev *hwdev,
 void pci_cache_inv(struct pci_dev *hwdev,
 			dma_addr_t *bus_addr, size_t size, int direction)
 {
-	if (NULL != hwdev && NULL != bus_addr) {
+	if (NULL != hwdev && NULL != bus_addr && *bus_addr != DMA_MAPPING_ERROR) {
 		dma_sync_single_for_cpu(&hwdev->dev, *bus_addr, size, direction);
 	} else
 		RTW_ERR("pcie hwdev handle or bus addr is NULL!\n");
@@ -43,6 +43,10 @@ void pci_get_bus_addr(struct pci_dev *hwdev,
 {
 	if (NULL != hwdev) {
 		*bus_addr = dma_map_single(&hwdev->dev, vir_addr, size, direction);
+		if (dma_mapping_error(&hwdev->dev, *bus_addr)) {
+			RTW_ERR("dma_map_single error, bus addr is invalid!\n");
+			*bus_addr = DMA_MAPPING_ERROR;
+		}
 	} else {
 		RTW_ERR("pcie hwdev handle is NULL!\n");
 		*bus_addr = (dma_addr_t)virt_to_phys(vir_addr);
@@ -52,7 +56,7 @@ void pci_get_bus_addr(struct pci_dev *hwdev,
 void pci_unmap_bus_addr(struct pci_dev *hwdev,
 			dma_addr_t *bus_addr, size_t size, int direction)
 {
-	if (NULL != hwdev && NULL != bus_addr) {
+	if (NULL != hwdev && NULL != bus_addr && *bus_addr != DMA_MAPPING_ERROR) {
 		dma_unmap_single(&hwdev->dev, *bus_addr, size, direction);
 	} else
 		RTW_ERR("pcie hwdev handle or bus addr is NULL!\n");
@@ -64,8 +68,8 @@ void *pci_alloc_cache_mem(struct pci_dev *pdev,
 
 	vir_addr = rtw_zmalloc(size);
 
-	if (!vir_addr)
-		bus_addr = NULL;
+	if (!vir_addr && bus_addr)
+		*bus_addr = DMA_MAPPING_ERROR;
 	else
 		pci_get_bus_addr(pdev, vir_addr, bus_addr, size, direction);
 
diff --git a/drivers/net/wireless/realtek/rtl8852bs/os_dep/linux/ioctl_cfg80211.c b/drivers/net/wireless/realtek/rtl8852bs/os_dep/linux/ioctl_cfg80211.c
index 707cd12a97f0..a50bf29733d1 100644
--- a/drivers/net/wireless/realtek/rtl8852bs/os_dep/linux/ioctl_cfg80211.c
+++ b/drivers/net/wireless/realtek/rtl8852bs/os_dep/linux/ioctl_cfg80211.c
@@ -227,6 +227,7 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter, struct rtw_chan_def *rtw_chd
 {
 	struct wiphy *wiphy = adapter_to_wiphy(adapter);
 	struct _ADAPTER_LINK *alink = GET_PRIMARY_LINK(adapter);
+	struct wireless_dev *wdev = adapter->pnetdev->ieee80211_ptr;
 	u8 ret = _SUCCESS;
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 8, 0))
@@ -238,6 +239,8 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter, struct rtw_chan_def *rtw_chd
 
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(3, 19, 0))
 	if (started) {
+		mutex_lock(&wdev->mtx);
+		__acquire(&wdev->mtx);
 		#if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0))
 		cfg80211_ch_switch_started_notify(adapter->pnetdev, &chdef, alink->mlmepriv.link_id, 0, false, 0);
 		#elif (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 1, 0))
@@ -253,9 +256,11 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter, struct rtw_chan_def *rtw_chd
 		 */
 
 		cfg80211_ch_switch_started_notify(adapter->pnetdev, &chdef, 0, false);
-#else
+		#else
 		cfg80211_ch_switch_started_notify(adapter->pnetdev, &chdef, 0);
-#endif
+		#endif
+		__release(&wdev->mtx);
+		mutex_unlock(&wdev->mtx);
 		goto exit;
 	}
 #endif
@@ -263,6 +268,8 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter, struct rtw_chan_def *rtw_chd
 	if (!rtw_cfg80211_allow_ch_switch_notify(adapter))
 		goto exit;
 
+	mutex_lock(&wdev->mtx);
+	__acquire(&wdev->mtx);
 #if (LINUX_VERSION_CODE >= KERNEL_VERSION(6, 3, 0))
 	cfg80211_ch_switch_notify(adapter->pnetdev, &chdef, alink->mlmepriv.link_id, 0);
 #elif (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 19, 2))
@@ -270,6 +277,8 @@ u8 rtw_cfg80211_ch_switch_notify(_adapter *adapter, struct rtw_chan_def *rtw_chd
 #else
 	cfg80211_ch_switch_notify(adapter->pnetdev, &chdef);
 #endif
+	__release(&wdev->mtx);
+	mutex_unlock(&wdev->mtx);
 
 #else
 	int freq = rtw_bch2freq(rtw_chdef->band, rtw_chdef->chan);
diff --git a/drivers/net/wireless/realtek/rtl8852bs/os_dep/linux/wifi_regd.c b/drivers/net/wireless/realtek/rtl8852bs/os_dep/linux/wifi_regd.c
index 95eeca0f1cf8..ab358e130372 100644
--- a/drivers/net/wireless/realtek/rtl8852bs/os_dep/linux/wifi_regd.c
+++ b/drivers/net/wireless/realtek/rtl8852bs/os_dep/linux/wifi_regd.c
@@ -393,7 +393,9 @@ void rtw_update_wiphy_regd(struct wiphy *wiphy, struct get_chplan_resp *chplan,
 		rtnl_lock();
 
 	#if (LINUX_VERSION_CODE >= KERNEL_VERSION(5, 12, 0))
+	wiphy_lock(wiphy);
 	ret = regulatory_set_wiphy_regd_sync(wiphy, regd);
+	wiphy_unlock(wiphy);
 	#else
 	ret = regulatory_set_wiphy_regd_sync_rtnl(wiphy, regd);
 	#endif
diff --git a/drivers/net/wireless/realtek/rtl8852bs/phl/hal_g6/mac/mac_ax/_sdio.c b/drivers/net/wireless/realtek/rtl8852bs/phl/hal_g6/mac/mac_ax/_sdio.c
index e28a85820bc0..7f4dd9d4c98a 100644
--- a/drivers/net/wireless/realtek/rtl8852bs/phl/hal_g6/mac/mac_ax/_sdio.c
+++ b/drivers/net/wireless/realtek/rtl8852bs/phl/hal_g6/mac/mac_ax/_sdio.c
@@ -593,6 +593,11 @@ u32 r_indir_cmd53_sdio(struct mac_ax_adapter *adapter, u32 adr)
 		PLTFM_MSG_ERR("[ERR]addr 0x%x = 0xdeadbeef\n", dw_adr);
 		PLTFM_SDIO_CMD53_W32(R_AX_CK_EN, CMAC_CLK_ALLEN);
 		count++;
+		if (num_online_cpus() == 1)
+			rtw_msleep_os(5);
+		else {
+			rtw_usleep_os(200);
+		}
 	}
 
 	return (dw >> dw_sh);
@@ -792,6 +797,11 @@ u32 tx_allow_data_ch(struct mac_ax_adapter *adapter,
 			pub_info->wp_aval -= info->ple_rqd_num;
 			break;
 		}
+		if (num_online_cpus() == 1)
+			rtw_msleep_os(5);
+		else {
+			rtw_usleep_os(200);
+		}
 		p_ops->ud_fs(adapter);
 		cnt--;
 	} while (cnt);
@@ -817,6 +827,11 @@ u32 tx_allow_fwcmd_ch(struct mac_ax_adapter *adapter,
 			ch_info[MAC_AX_DMA_H2C].aval -= info->ple_rqd_num;
 			break;
 		}
+		if (num_online_cpus() == 1)
+			rtw_msleep_os(5);
+		else {
+			rtw_usleep_os(200);
+		}
 		p_ops->ud_fs(adapter);
 		cnt--;
 	} while (cnt);
diff --git a/drivers/net/wireless/realtek/rtl8852bs/phl/hal_g6/mac/mac_ax/mac_8852b/_sdio_8852b.c b/drivers/net/wireless/realtek/rtl8852bs/phl/hal_g6/mac/mac_ax/mac_8852b/_sdio_8852b.c
index 17ac26e7204b..44d127b51f79 100644
--- a/drivers/net/wireless/realtek/rtl8852bs/phl/hal_g6/mac/mac_ax/mac_8852b/_sdio_8852b.c
+++ b/drivers/net/wireless/realtek/rtl8852bs/phl/hal_g6/mac/mac_ax/mac_8852b/_sdio_8852b.c
@@ -231,6 +231,11 @@ u8 r_indir_cmd52_sdio_8852b(struct mac_ax_adapter *adapter, u32 adr)
 		PLTFM_SDIO_CMD52_W8(R_AX_CK_EN + 3, (u8)(val >> 24));
 
 		count++;
+		if (num_online_cpus() == 1)
+			rtw_msleep_os(5);
+		else {
+			rtw_usleep_os(200);
+		}
 	}
 
 	return val32.byte[dw_sh];
diff --git a/drivers/nvme/host/pci.c b/drivers/nvme/host/pci.c
index d525fa1229d7..30938b795da1 100644
--- a/drivers/nvme/host/pci.c
+++ b/drivers/nvme/host/pci.c
@@ -801,7 +801,7 @@ static blk_status_t nvme_map_data(struct nvme_dev *dev, struct request *req,
 		goto out_free_sg;
 
 	rc = dma_map_sgtable(dev->dev, &iod->sgt, rq_dma_dir(req),
-			     DMA_ATTR_NO_WARN);
+			     0);
 	if (rc) {
 		if (rc == -EREMOTEIO)
 			ret = BLK_STS_TARGET;
@@ -1920,7 +1920,7 @@ static void nvme_free_host_mem(struct nvme_dev *dev)
 
 		dma_free_attrs(dev->dev, size, dev->host_mem_desc_bufs[i],
 			       le64_to_cpu(desc->addr),
-			       DMA_ATTR_NO_KERNEL_MAPPING | DMA_ATTR_NO_WARN);
+			       DMA_ATTR_NO_KERNEL_MAPPING);
 	}
 
 	kfree(dev->host_mem_desc_bufs);
@@ -1964,7 +1964,7 @@ static int __nvme_alloc_host_mem(struct nvme_dev *dev, u64 preferred,
 
 		len = min_t(u64, chunk_size, preferred - size);
 		bufs[i] = dma_alloc_attrs(dev->dev, len, &dma_addr, GFP_KERNEL,
-				DMA_ATTR_NO_KERNEL_MAPPING | DMA_ATTR_NO_WARN);
+				DMA_ATTR_NO_KERNEL_MAPPING);
 		if (!bufs[i])
 			break;
 
@@ -1990,7 +1990,7 @@ static int __nvme_alloc_host_mem(struct nvme_dev *dev, u64 preferred,
 
 		dma_free_attrs(dev->dev, size, bufs[i],
 			       le64_to_cpu(descs[i].addr),
-			       DMA_ATTR_NO_KERNEL_MAPPING | DMA_ATTR_NO_WARN);
+			       DMA_ATTR_NO_KERNEL_MAPPING);
 	}
 
 	kfree(bufs);
diff --git a/drivers/pci/controller/dwc/pcie-k1x.c b/drivers/pci/controller/dwc/pcie-k1x.c
index ecb781779463..fe1281ad2629 100644
--- a/drivers/pci/controller/dwc/pcie-k1x.c
+++ b/drivers/pci/controller/dwc/pcie-k1x.c
@@ -166,7 +166,6 @@ struct k1x_pcie {
 
 	struct	gpio_desc *perst_gpio; /* for PERST# in RC mode*/
 	int pwr_on_gpio;
-	bool suspend_power_on;
 };
 
 struct k1x_pcie_of_data {
@@ -1652,12 +1651,6 @@ static int __init k1x_pcie_probe(struct platform_device *pdev)
 		dev_info(dev, "has no power on gpio.\n");
 	}
 
-	if (of_get_property(np, "suspend_power_on", NULL)) {
-		k1x->suspend_power_on = 1;
-	} else {
-		k1x->suspend_power_on = 0;
-	}
-
 	/* pcie0 and usb use combo phy and reset */
 	if (k1x->port_id == 0) {
 		k1x->reset = devm_reset_control_array_get_shared(dev);
@@ -1808,10 +1801,6 @@ static int k1x_pcie_suspend_noirq(struct device *dev)
 	struct dw_pcie  *pci = k1x->pci;
 	u32 reg;
 
-	if (k1x->suspend_power_on) {
-		return 0;
-	}
-
 	k1x->link_is_up = dw_pcie_link_up(pci);
 	dev_info(dev, "link is %s\n", k1x->link_is_up ? "up" : "down");
 
@@ -1844,10 +1833,6 @@ static int k1x_pcie_resume_noirq(struct device *dev)
 	struct dw_pcie_rp *pp = &pci->pp;
 	u32 reg;
 
-	if (k1x->suspend_power_on) {
-		return 0;
-	}
-
 	/* soft no reset */
 	reg = k1x_pcie_readl(k1x, PCIE_CTRL_LOGIC);
 	reg &= ~(1 << 0);
diff --git a/drivers/soc/spacemit/jpu/jpu.c b/drivers/soc/spacemit/jpu/jpu.c
index c57548c4974d..7106f79978c8 100644
--- a/drivers/soc/spacemit/jpu/jpu.c
+++ b/drivers/soc/spacemit/jpu/jpu.c
@@ -658,7 +658,7 @@ static dma_addr_t get_addr_from_fd(struct jpu_device *jpu_dev, int fd,
 		pr_err("jpu get dma buf attach fail\n");
 		goto err_dmabuf_put;
 	}
-	pInfo->sgtable = dma_buf_map_attachment(pInfo->attach, DMA_BIDIRECTIONAL);
+	pInfo->sgtable = dma_buf_map_attachment_unlocked(pInfo->attach, DMA_BIDIRECTIONAL);
 	if (IS_ERR(pInfo->sgtable)) {
 		pr_err("jpu get dma buf map attachment fail\n");
 		goto err_dmabuf_detach;
@@ -683,7 +683,7 @@ static dma_addr_t get_addr_from_fd(struct jpu_device *jpu_dev, int fd,
 	}
 	return addr + offset;
 err_dmabuf_unmap:
-	dma_buf_unmap_attachment(pInfo->attach, pInfo->sgtable, DMA_BIDIRECTIONAL);
+	dma_buf_unmap_attachment_unlocked(pInfo->attach, pInfo->sgtable, DMA_BIDIRECTIONAL);
 err_dmabuf_detach:
 	dma_buf_detach(pInfo->dmabuf, pInfo->attach);
 err_dmabuf_put:
@@ -1040,7 +1040,7 @@ static long jpu_ioctl(struct file *filp, u_int cmd, u_long arg)
 			sg_table = pInfo.sgtable;
 
 			if (dmabuf && attach && sg_table) {
-				dma_buf_unmap_attachment(attach, sg_table, DMA_BIDIRECTIONAL);
+				dma_buf_unmap_attachment_unlocked(attach, sg_table, DMA_BIDIRECTIONAL);
 				dma_buf_detach(dmabuf, attach);
 				dma_buf_put(dmabuf);
 			}
diff --git a/drivers/soc/spacemit/spacemit_lid.c b/drivers/soc/spacemit/spacemit_lid.c
index c501cf0072eb..1046afe8af1f 100644
--- a/drivers/soc/spacemit/spacemit_lid.c
+++ b/drivers/soc/spacemit/spacemit_lid.c
@@ -12,13 +12,11 @@
 #include <linux/interrupt.h>
 #include <linux/pm_wakeirq.h>
 #include <linux/gpio/consumer.h>
-#include <linux/pm_wakeirq.h>
 #include <linux/property.h>
 #include <linux/of.h>
 
 struct _hall {
 	int irq;
-	struct device *dev;
 	struct input_dev *input;
 	struct gpio_desc *gpio;
 };
@@ -29,12 +27,6 @@ static irqreturn_t hall_wakeup_detect(int irq, void *arg)
 	struct _hall *hall = (struct _hall *)arg;
 
 	state = gpiod_get_value(hall->gpio);
-
-	if (!state)
-		pm_relax(hall->dev);
-	else
-		pm_stay_awake(hall->dev);
-
 	input_report_switch(hall->input, SW_LID, !state);
  	input_sync(hall->input);
 
@@ -82,7 +74,6 @@ static int spacemit_lid_probe(struct platform_device *pdev)
 	input_set_drvdata(input, hall);
 
 	hall->input = input;
-	hall->dev = &pdev->dev;
 
 	error = input_register_device(input);
 	if (error) {
@@ -90,9 +81,6 @@ static int spacemit_lid_probe(struct platform_device *pdev)
 		return error;
 	}
 
-	dev_pm_set_wake_irq(&pdev->dev, hall->irq);
-	device_init_wakeup(&pdev->dev, true);
-
 	return 0;
 }
 
diff --git a/drivers/soc/spacemit/v2d/v2d_drv.c b/drivers/soc/spacemit/v2d/v2d_drv.c
index ef8364552656..2c6dab70a5e7 100644
--- a/drivers/soc/spacemit/v2d/v2d_drv.c
+++ b/drivers/soc/spacemit/v2d/v2d_drv.c
@@ -332,7 +332,7 @@ static int get_addr_from_dmabuf(struct v2d_info *v2dinfo, struct v2d_dma_buf_inf
 		pr_err("v2d get dma buf attach fail\n");
 		goto err_dmabuf_put;
 	}
-	pInfo->sgtable = dma_buf_map_attachment(pInfo->attach, DMA_BIDIRECTIONAL);
+	pInfo->sgtable = dma_buf_map_attachment_unlocked(pInfo->attach, DMA_BIDIRECTIONAL);
 	if (IS_ERR(pInfo->sgtable)) {
 		pr_err("v2d get dma buf map attachment fail\n");
 		goto err_dmabuf_detach;
@@ -354,7 +354,7 @@ static int get_addr_from_dmabuf(struct v2d_info *v2dinfo, struct v2d_dma_buf_inf
 	return ret;
 
 err_dmabuf_unmap:
-	dma_buf_unmap_attachment(pInfo->attach, pInfo->sgtable, DMA_BIDIRECTIONAL);
+	dma_buf_unmap_attachment_unlocked(pInfo->attach, pInfo->sgtable, DMA_BIDIRECTIONAL);
 err_dmabuf_detach:
 	dma_buf_detach(pInfo->dmabuf, pInfo->attach);
 err_dmabuf_put:
@@ -447,7 +447,7 @@ static void v2d_put_dmabuf(struct v2d_info *v2dinfo, struct v2d_pending_post_tas
 		sg_table = pInfo->sgtable;
 
 		if (dmabuf && attach && sg_table) {
-			dma_buf_unmap_attachment(attach, sg_table, DMA_BIDIRECTIONAL);
+			dma_buf_unmap_attachment_unlocked(attach, sg_table, DMA_BIDIRECTIONAL);
 			dma_buf_detach(dmabuf, attach);
 			dma_buf_put(dmabuf);
 		}
diff --git a/drivers/tty/serial/pxa_k1x.c b/drivers/tty/serial/pxa_k1x.c
index ca16dd56c231..50d49151a097 100644
--- a/drivers/tty/serial/pxa_k1x.c
+++ b/drivers/tty/serial/pxa_k1x.c
@@ -514,6 +514,7 @@ static inline void check_modem_status(struct uart_pxa_port *up)
 	if ((status & UART_MSR_ANY_DELTA) == 0)
 		return;
 
+	spin_lock(&up->port.lock);
 	if (status & UART_MSR_TERI)
 		up->port.icount.rng++;
 	if (status & UART_MSR_DDSR)
@@ -522,6 +523,7 @@ static inline void check_modem_status(struct uart_pxa_port *up)
 		uart_handle_dcd_change(&up->port, status & UART_MSR_DCD);
 	if (status & UART_MSR_DCTS)
 		uart_handle_cts_change(&up->port, status & UART_MSR_CTS);
+	spin_unlock(&up->port.lock);
 
 	wake_up_interruptible(&up->port.state->port.delta_msr_wait);
 }
diff --git a/sound/soc/codecs/es8326.c b/sound/soc/codecs/es8326.c
index 6e2dbcbede14..ad76b53828e4 100644
--- a/sound/soc/codecs/es8326.c
+++ b/sound/soc/codecs/es8326.c
@@ -22,6 +22,7 @@
 #ifdef SPACEMIT_CONFIG_CODEC_ES8326
 #include <linux/notifier.h>
 #include <soc/spacemit/spacemit_panel.h>
+#include <linux/pm.h>
 #endif
 
 struct es8326_priv {
@@ -1150,21 +1151,21 @@ static int es8326_init(struct snd_soc_component *component)
 	return 0;
 }
 
-static int es8326_resume(struct snd_soc_component *component)
+static int es8326_resume(struct device *dev)
 {
-	struct es8326_priv *es8326 = snd_soc_component_get_drvdata(component);
+	struct es8326_priv *es8326 = dev_get_drvdata(dev);
 
 	regcache_cache_only(es8326->regmap, false);
 	regcache_sync(es8326->regmap);
-	es8326_init(component);
-	es8326_reset_clk(component);
+	es8326_init(es8326->component);
+	es8326_reset_clk(es8326->component);
 	if (es8326->jack) {
 		snd_soc_jack_report(es8326->jack, 0, SND_JACK_HEADSET);
 		if (es8326->jd_inverted) {
-			snd_soc_component_update_bits(component, ES8326_HPDET_TYPE,
+			snd_soc_component_update_bits(es8326->component, ES8326_HPDET_TYPE,
 					      ES8326_HP_DET_JACK_POL, ~es8326->jack_pol);
 		}
-		es8326_disable_micbias(component);
+		es8326_disable_micbias(es8326->component);
 		if (es8326->irq > 0)
 			es8326_irq(es8326->irq, es8326);
 		else
@@ -1173,9 +1174,9 @@ static int es8326_resume(struct snd_soc_component *component)
 	return 0;
 }
 
-static int es8326_suspend(struct snd_soc_component *component)
+static int es8326_suspend(struct device *dev)
 {
-	struct es8326_priv *es8326 = snd_soc_component_get_drvdata(component);
+	struct es8326_priv *es8326 = dev_get_drvdata(dev);
 
 	cancel_delayed_work_sync(&es8326->jack_detect_work);
 	es8326->calibrated = false;
@@ -1189,6 +1190,11 @@ static int es8326_suspend(struct snd_soc_component *component)
 	regmap_write(es8326->regmap, ES8326_CSM_I2C_STA, 0x00);
 	return 0;
 }
+
+static const struct dev_pm_ops es8326_pm_ops = {
+	.suspend = es8326_suspend,
+	.resume = es8326_resume,
+};
 #else
 static int es8326_resume(struct snd_soc_component *component)
 {
@@ -1534,8 +1540,10 @@ static void es8326_remove(struct snd_soc_component *component)
 static const struct snd_soc_component_driver soc_component_dev_es8326 = {
 	.probe		= es8326_probe,
 	.remove		= es8326_remove,
+	#ifndef SPACEMIT_CONFIG_CODEC_ES8326
 	.resume		= es8326_resume,
 	.suspend	= es8326_suspend,
+	#endif
 	.set_bias_level = es8326_set_bias_level,
 	.set_jack	= es8326_set_jack,
 	.dapm_widgets	= es8326_dapm_widgets,
@@ -1678,6 +1686,9 @@ static struct i2c_driver es8326_i2c_driver = {
 		.name = "es8326",
 		.acpi_match_table = ACPI_PTR(es8326_acpi_match),
 		.of_match_table = of_match_ptr(es8326_of_match),
+		#ifdef SPACEMIT_CONFIG_CODEC_ES8326
+		.pm = &es8326_pm_ops,
+		#endif
 	},
 	.probe = es8326_i2c_probe,
 	.id_table = es8326_i2c_id,
diff --git a/sound/soc/spacemit/spacemit-snd-card.c b/sound/soc/spacemit/spacemit-snd-card.c
index a4bc789c2d45..70b9a64d30fd 100644
--- a/sound/soc/spacemit/spacemit-snd-card.c
+++ b/sound/soc/spacemit/spacemit-snd-card.c
@@ -432,7 +432,7 @@ static int spacemit_snd_card_init(void)
 {
 	return platform_driver_register(&asoc_simple_card);
 }
-late_initcall_sync(spacemit_snd_card_init);
+late_initcall(spacemit_snd_card_init);
 
 MODULE_DESCRIPTION("SPACEMIT ASoC Machine Driver");
 MODULE_LICENSE("GPL");
diff --git a/sound/soc/spacemit/spacemit-snd-pcm-dma.c b/sound/soc/spacemit/spacemit-snd-pcm-dma.c
index c71f78e6543d..b3be4a60842f 100644
--- a/sound/soc/spacemit/spacemit-snd-pcm-dma.c
+++ b/sound/soc/spacemit/spacemit-snd-pcm-dma.c
@@ -1397,7 +1397,7 @@ static int spacemit_snd_pcm_init(void)
 {
 	return platform_driver_register(&spacemit_snd_dma_pdrv);
 }
-late_initcall_sync(spacemit_snd_pcm_init);
+late_initcall(spacemit_snd_pcm_init);
 
 #ifdef CONFIG_SPACEMIT_AUDIO_DATA_DEBUG
 
diff --git a/sound/soc/spacemit/spacemit-snd-sspa.c b/sound/soc/spacemit/spacemit-snd-sspa.c
index 59144a397533..17d81e22dcfa 100644
--- a/sound/soc/spacemit/spacemit-snd-sspa.c
+++ b/sound/soc/spacemit/spacemit-snd-sspa.c
@@ -23,6 +23,23 @@
 #include <sound/dmaengine_pcm.h>
 #include "spacemit-snd-sspa.h"
 
+#include <linux/notifier.h>
+#include <soc/spacemit/spacemit_panel.h>
+
+
+#define SPACEMIT_HDMI_BASE_ADDR        0xC0400500
+#define SPACEMIT_HDMI_REG_SIZE         0x200
+
+
+#define SPACEMIT_HDMI_PHY_STATUS       0xC
+#define SPACEMIT_HDMI_HPD_STATUS       BIT(12)
+#define SPACEMIT_HDMI_AUDIO_EN         0x30
+
+#define HDMI_HPD_CONNECTED             0
+#define HDMI_HPD_DISCONNECTED          1
+
+extern int spacemit_hdmi_register_client(struct notifier_block *nb);
+
 struct sspa_priv {
 	struct ssp_device *sspa;
 	struct snd_dmaengine_dai_dma_data *dma_params;
@@ -33,6 +50,7 @@ struct sspa_priv {
 	void __iomem	*base;
 	void __iomem	*base_clk;
 	void __iomem	*base_hdmi;
+	struct delayed_work hdmi_detect_work;
 };
 
 struct platform_device *sspa_platdev;
@@ -43,9 +61,9 @@ static int mmp_sspa_startup(struct snd_pcm_substream *substream,
 	u32 value = 0;
 	struct sspa_priv *sspa_priv = snd_soc_dai_get_drvdata(dai);
 
-	value = readl_relaxed(sspa_priv->base_hdmi);
+	value = readl_relaxed(sspa_priv->base_hdmi + SPACEMIT_HDMI_AUDIO_EN);
 	value |= BIT(0);
-	writel(value, sspa_priv->base_hdmi);
+	writel(value, sspa_priv->base_hdmi + SPACEMIT_HDMI_AUDIO_EN);
 
 	pm_runtime_get_sync(&sspa_platdev->dev);
 	return 0;
@@ -57,9 +75,9 @@ static void mmp_sspa_shutdown(struct snd_pcm_substream *substream,
 	u32 value = 0;
 	struct sspa_priv *sspa_priv = snd_soc_dai_get_drvdata(dai);
 
-	value = readl_relaxed(sspa_priv->base_hdmi);
+	value = readl_relaxed(sspa_priv->base_hdmi + SPACEMIT_HDMI_AUDIO_EN);
 	value &= ~BIT(0);
-	writel(value, sspa_priv->base_hdmi);
+	writel(value, sspa_priv->base_hdmi + SPACEMIT_HDMI_AUDIO_EN);
 
 	pm_runtime_put_sync(&sspa_platdev->dev);
 }
@@ -140,6 +158,10 @@ static int mmp_sspa_probe(struct snd_soc_dai *dai)
 	pr_debug("%s\n", __FUNCTION__);
 
 	snd_soc_dai_set_drvdata(dai, sspa_priv);
+
+	queue_delayed_work(system_wq, &sspa_priv->hdmi_detect_work,
+				   msecs_to_jiffies(100));
+
 	return 0;
 }
 
@@ -178,27 +200,94 @@ static void spacemit_dma_params_init(struct resource *res, struct snd_dmaengine_
 	dma_params->addr_width = DMA_SLAVE_BUSWIDTH_4_BYTES;
 }
 
-static int spacemit_sspa_suspend(struct snd_soc_component *component)
+static const struct snd_soc_component_driver spacemit_snd_sspa_component = {
+	.name		= "spacemit-snd-sspa",
+};
+
+static int spacemit_sspa_get_hdmi_status(void)
+{
+	struct sspa_priv *priv = dev_get_drvdata(&sspa_platdev->dev);
+	u32 value = 0;
+
+	value = readl_relaxed(priv->base_hdmi + SPACEMIT_HDMI_PHY_STATUS) & SPACEMIT_HDMI_HPD_STATUS;
+	pr_debug("%s status:%d\n", __func__, !!value);
+	return !!value;
+}
+
+int spacemit_hdmi_connect_event(struct notifier_block *nb, unsigned long event,
+	void *v)
+{
+	int ret;
+
+	switch(event) {
+	case HDMI_HPD_CONNECTED:
+		pr_debug("sspa got the chain event: HDMI_HPD_CONNECTED\n");
+		ret = devm_snd_soc_register_component(&sspa_platdev->dev, &spacemit_snd_sspa_component,
+			spacemit_snd_sspa_dai, ARRAY_SIZE(spacemit_snd_sspa_dai));
+		if (ret != 0) {
+			dev_err(&sspa_platdev->dev, "failed to register DAI\n");
+		}
+		break;
+	case HDMI_HPD_DISCONNECTED:
+		pr_debug("sspa got the chain event: HDMI_HPD_DISCONNECTED\n");
+		snd_soc_unregister_component(&sspa_platdev->dev);
+		break;
+	default:
+		break;
+	}
+	return NOTIFY_DONE;
+}
+
+static struct notifier_block hdmi_connect_notifier = {
+	.notifier_call = spacemit_hdmi_connect_event,
+};
+
+static void spacemit_sspa_hdmi_detect_handler(struct work_struct *work)
+{
+	if (!spacemit_sspa_get_hdmi_status()) {
+		udelay(100);
+		pr_debug("%s, hdmi disconnected \n", __func__);
+		snd_soc_unregister_component(&sspa_platdev->dev);
+	}
+}
+
+static int spacemit_sspa_suspend(struct device *dev)
 {
-	struct sspa_priv *priv = snd_soc_component_get_drvdata(component);
+	struct sspa_priv *priv = dev_get_drvdata(dev);
+
+	spacemit_hdmi_unregister_client(&hdmi_connect_notifier);
 	reset_control_assert(priv->rst);
 	return 0;
 }
 
-static int spacemit_sspa_resume(struct snd_soc_component *component)
+static int spacemit_sspa_resume(struct device *dev)
 {
-	struct sspa_priv *priv = snd_soc_component_get_drvdata(component);
+	struct sspa_priv *priv = dev_get_drvdata(dev);
 	u32 value = 0;
-	value = readl_relaxed(priv->base_hdmi);
+	int ret = 0;
+
+	value = readl_relaxed(priv->base_hdmi + SPACEMIT_HDMI_AUDIO_EN);
 	value |= BIT(0);
-	writel(value, priv->base_hdmi);
+	writel(value, priv->base_hdmi + SPACEMIT_HDMI_AUDIO_EN);
 	reset_control_deassert(priv->rst);
+	spacemit_hdmi_register_client(&hdmi_connect_notifier);
+
+	if (spacemit_sspa_get_hdmi_status()) {
+		ret = devm_snd_soc_register_component(dev, &spacemit_snd_sspa_component,
+			spacemit_snd_sspa_dai, ARRAY_SIZE(spacemit_snd_sspa_dai));
+		if (ret != 0) {
+			dev_err(dev, "failed to register DAI\n");
+		}
+	} else {
+		snd_soc_unregister_component(dev);
+	}
+
 	return 0;
 }
-static const struct snd_soc_component_driver spacemit_snd_sspa_component = {
-	.name		= "spacemit-snd-sspa",
-	.suspend	= spacemit_sspa_suspend,
-	.resume		= spacemit_sspa_resume,
+
+const struct dev_pm_ops spacemit_snd_sspa_pm_ops = {
+	.suspend = spacemit_sspa_suspend,
+	.resume = spacemit_sspa_resume,
 };
 
 static int spacemit_snd_sspa_pdev_probe(struct platform_device *pdev)
@@ -227,7 +316,7 @@ static int spacemit_snd_sspa_pdev_probe(struct platform_device *pdev)
 		pr_err("%s reg clk base alloc failed\n", __FUNCTION__);
 		return PTR_ERR(priv->base_clk);
 	}
-	priv->base_hdmi = (void __iomem *)ioremap(0xC0400530, 1);
+	priv->base_hdmi = (void __iomem *)ioremap(SPACEMIT_HDMI_BASE_ADDR, SPACEMIT_HDMI_REG_SIZE);
 	if (IS_ERR(priv->base_hdmi)) {
 		pr_err("%s reg hdmi base alloc failed\n", __FUNCTION__);
 		return PTR_ERR(priv->base_hdmi);
@@ -250,14 +339,19 @@ static int spacemit_snd_sspa_pdev_probe(struct platform_device *pdev)
 	pm_runtime_enable(&pdev->dev);
 
 	sspa_platdev = pdev;
-
+	INIT_DELAYED_WORK(&priv->hdmi_detect_work,
+			  spacemit_sspa_hdmi_detect_handler);
 	platform_set_drvdata(pdev, priv);
+
 	ret = devm_snd_soc_register_component(&pdev->dev, &spacemit_snd_sspa_component,
 						   spacemit_snd_sspa_dai, ARRAY_SIZE(spacemit_snd_sspa_dai));
 	if (ret != 0) {
 		dev_err(&pdev->dev, "failed to register DAI\n");
 		return ret;
 	}
+
+	spacemit_hdmi_register_client(&hdmi_connect_notifier);
+
 	return 0;
 }
 
@@ -281,6 +375,7 @@ static const struct of_device_id spacemit_snd_sspa_ids[] = {
 static struct platform_driver spacemit_snd_sspa_pdrv = {
 	.driver = {
 		.name = "spacemit-snd-sspa",
+		.pm = &spacemit_snd_sspa_pm_ops,
 		.of_match_table = of_match_ptr(spacemit_snd_sspa_ids),
 	},
 	.probe = spacemit_snd_sspa_pdev_probe,
@@ -297,7 +392,7 @@ static int spacemit_snd_sspa_init(void)
 {
 	return platform_driver_register(&spacemit_snd_sspa_pdrv);
 }
-late_initcall_sync(spacemit_snd_sspa_init);
+late_initcall(spacemit_snd_sspa_init);
 
 
 MODULE_DESCRIPTION("SPACEMIT ASoC SSPA Driver");
-- 
2.47.0

