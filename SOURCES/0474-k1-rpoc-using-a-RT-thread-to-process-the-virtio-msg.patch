From e6a3e41d16e7c1ed4f96204b462dab8deb644728 Mon Sep 17 00:00:00 2001
From: Nell <xianbin.zhu@spacemit.com>
Date: Fri, 1 Mar 2024 17:34:30 +0800
Subject: [PATCH 0474/1206] k1:rpoc: using a RT thread to process the virtio
 msg

Change-Id: Ifc1df386b70d6ce5a8354d2f3bc804935d34df3e
---
 drivers/remoteproc/k1x-rproc.c | 60 +++++++++++++++++++++++-----------
 1 file changed, 41 insertions(+), 19 deletions(-)

diff --git a/drivers/remoteproc/k1x-rproc.c b/drivers/remoteproc/k1x-rproc.c
index bb88cd986e67..d07a1a3dbe2d 100644
--- a/drivers/remoteproc/k1x-rproc.c
+++ b/drivers/remoteproc/k1x-rproc.c
@@ -10,8 +10,14 @@
 #include <linux/reset.h>
 #include <linux/clk.h>
 #include <linux/clkdev.h>
+#include <linux/kthread.h>
 #include <linux/clk-provider.h>
 #include <linux/mailbox_client.h>
+#include <linux/completion.h>
+#include <linux/freezer.h>
+#include <uapi/linux/sched/types.h>
+#include <uapi/linux/sched.h>
+#include <linux/sched/prio.h>
 #include "remoteproc_internal.h"
 
 #define MAX_MEM_BASE	2
@@ -33,7 +39,9 @@ struct spacemit_mbox {
 	const char name[10];
 	struct mbox_chan *chan;
 	struct mbox_client client;
-	struct work_struct vq_work;
+	struct task_struct *mb_thread;
+	bool kthread_running;
+	struct completion mb_comp;
 	int vq_id;
 };
 
@@ -44,7 +52,6 @@ struct spacemit_rproc {
 	unsigned int ddr_remap_base;
 	void __iomem *base[MAX_MEM_BASE];
 	struct spacemit_mbox *mb;
-	struct workqueue_struct *workqueue;
 };
 
 static int spacemit_rproc_mem_alloc(struct rproc *rproc,
@@ -234,22 +241,35 @@ static struct rproc_ops spacemit_rproc_ops = {
 	.get_boot_addr	= spacemit_get_boot_addr,
 };
 
-static void k1x_rproc_mb_vq_work(struct work_struct *work)
+static int __process_theread(void *arg)
 {
-	struct spacemit_mbox *mb = container_of(work, struct spacemit_mbox, vq_work);
-	struct rproc *rproc = dev_get_drvdata(mb->client.dev);
+	int ret;
+	struct mbox_client *cl = arg;
+	struct rproc *rproc = dev_get_drvdata(cl->dev);
+	struct spacemit_mbox *mb = container_of(cl, struct spacemit_mbox, client);
+	struct sched_param param = {.sched_priority = 0 };
 
-	if (rproc_vq_interrupt(rproc, mb->vq_id) == IRQ_NONE)
-		dev_dbg(&rproc->dev, "no message found in vq%d\n", mb->vq_id);
-}
+	mb->kthread_running = true;
+	ret = sched_setscheduler(current, SCHED_FIFO, &param);
 
+	set_freezable();
+
+	do {
+		wait_for_completion_timeout(&mb->mb_comp, 10);
+		try_to_freeze();
+		if (rproc_vq_interrupt(rproc, mb->vq_id) == IRQ_NONE)
+			dev_dbg(&rproc->dev, "no message found in vq%d\n", mb->vq_id);
+	} while (!kthread_should_stop());
+
+	mb->kthread_running = false;
+
+	return 0;
+}
 static void k1x_rproc_mb_callback(struct mbox_client *cl, void *data)
 {
-	struct rproc *rproc = dev_get_drvdata(cl->dev);
 	struct spacemit_mbox *mb = container_of(cl, struct spacemit_mbox, client);
-	struct spacemit_rproc *priv = rproc->priv;
 
-	queue_work(priv->workqueue, &mb->vq_work);
+	complete(&mb->mb_comp);
 }
 
 static struct spacemit_mbox k1x_rpoc_mbox[] = {
@@ -329,12 +349,6 @@ static int spacemit_rproc_probe(struct platform_device *pdev)
 
 	platform_set_drvdata(pdev, rproc);
 
-	priv->workqueue = create_workqueue(dev_name(dev));
-	if (!priv->workqueue) {
-		dev_err(dev, "cannot create workqueue\n");
-		return -EINVAL;
-	}
-
 	/* get the mailbox */
 	priv->mb = k1x_rpoc_mbox;
 
@@ -350,7 +364,11 @@ static int spacemit_rproc_probe(struct platform_device *pdev)
 		}
 
 		if (priv->mb[i].vq_id >= 0) {
-			INIT_WORK(&priv->mb[i].vq_work, k1x_rproc_mb_vq_work);
+			priv->mb[i].mb_thread = kthread_run(__process_theread, (void *)cl, name);
+			if (IS_ERR(priv->mb[i].mb_thread))
+				return PTR_ERR(priv->mb[i].mb_thread);
+
+			init_completion(&priv->mb[i].mb_comp);
 		}
 	}
 
@@ -377,12 +395,16 @@ static void k1x_rproc_free_mbox(struct rproc *rproc)
 
 static int spacemit_rproc_remove(struct platform_device *pdev)
 {
+	int i = 0;
 	struct rproc *rproc = platform_get_drvdata(pdev);
 	struct spacemit_rproc *ddata = rproc->priv;
 
+	for (i = 0; i < MAX_MBOX; ++i)
+		if (ddata->mb[i].kthread_running)
+			kthread_stop(ddata->mb[i].mb_thread);
+
 	rproc_del(rproc);
 	k1x_rproc_free_mbox(rproc);
-	destroy_workqueue(ddata->workqueue);
 	rproc_free(rproc);
 
 	return 0;
-- 
2.47.0

