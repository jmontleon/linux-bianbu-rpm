From 111a7482f480e091f11e5f0293f2359c1f52ea0f Mon Sep 17 00:00:00 2001
From: wanlong <long.wan@spacemit.com>
Date: Fri, 27 Dec 2024 15:55:03 +0800
Subject: [PATCH 1417/1448] wireless: aic8800: avoid enter endless loop while
 sdio io fail

Change-Id: I4cbb9cfa6a3cc714fffd1d7df265cd59cf04e13b
---
 .../net/wireless/aic8800/aic8800_bsp/Makefile |  2 ++
 .../aic8800/aic8800_bsp/aic_bsp_8800d80.c     | 25 +++++++++++-----
 .../wireless/aic8800/aic8800_bsp/aicsdio.c    | 29 +++++++++++++++----
 3 files changed, 44 insertions(+), 12 deletions(-)

diff --git a/drivers/net/wireless/aic8800/aic8800_bsp/Makefile b/drivers/net/wireless/aic8800/aic8800_bsp/Makefile
index 5fc7399fe1a1..b6635448533e 100755
--- a/drivers/net/wireless/aic8800/aic8800_bsp/Makefile
+++ b/drivers/net/wireless/aic8800/aic8800_bsp/Makefile
@@ -7,6 +7,7 @@ CONFIG_OOB ?= n
 CONFIG_DPD = y
 CONFIG_FORCE_DPD_CALIB = y
 CONFIG_AMSDU_RX = y
+CONFIG_SDIO_F1_FLAG = y
 
 ccflags-$(CONFIG_AIC_INTF_SDIO) += -DAICWF_SDIO_SUPPORT
 ccflags-$(CONFIG_AIC_INTF_USB)  += -DAICWF_USB_SUPPORT
@@ -18,6 +19,7 @@ ccflags-$(CONFIG_OOB) += -DCONFIG_OOB
 ccflags-$(CONFIG_DPD)  += -DCONFIG_DPD
 ccflags-$(CONFIG_FORCE_DPD_CALIB) += -DCONFIG_FORCE_DPD_CALIB -DCONFIG_DPD
 ccflags-$(CONFIG_AMSDU_RX) += -DCONFIG_AMSDU_RX
+ccflags-$(CONFIG_SDIO_F1_FLAG) += -DCONFIG_SDIO_F1_FLAG
 
 obj-m := aic8800_bsp.o
 aic8800_bsp-y := \
diff --git a/drivers/net/wireless/aic8800/aic8800_bsp/aic_bsp_8800d80.c b/drivers/net/wireless/aic8800/aic8800_bsp/aic_bsp_8800d80.c
index 79113ce97ca9..2f6b2d9811d9 100644
--- a/drivers/net/wireless/aic8800/aic8800_bsp/aic_bsp_8800d80.c
+++ b/drivers/net/wireless/aic8800/aic8800_bsp/aic_bsp_8800d80.c
@@ -26,6 +26,10 @@
 #define AIC_PATCH_MAGIG_NUM_2               0x50544348 // "HCTP"
 #define AIC_PATCH_BLOCK_MAX                 4
 
+#ifdef CONFIG_SDIO_F1_FLAG
+bool sdio_f1_flag = false;
+#endif
+
 typedef struct {
 	uint32_t magic_num;
 	uint32_t pair_start;
@@ -557,15 +561,22 @@ int aicbsp_8800d80_fw_init(struct priv_dev *aicdev)
 	int ret = 0;
 	if (rwnx_send_dbg_mem_write_req(aicdev, 0x40500058, 0x40))
 		return -1;
-	sdio_claim_host(aicdev->func[0]);
-	sdio_f0_writeb(aicdev->func[0], 0x0, 0xF1, &ret);
-	if (ret) {
-		bsp_err("set iopad delay1 fail %d\n", ret);
+#ifdef CONFIG_SDIO_F1_FLAG
+	printk("aicbsp:sdio_f1_flag %d\n",sdio_f1_flag);
+	if (sdio_f1_flag) {
+#endif
+		sdio_claim_host(aicdev->func[0]);
+		sdio_f0_writeb(aicdev->func[0], 0x0, 0xF1, &ret);
+		if (ret) {
+			bsp_err("set iopad delay1 fail %d\n", ret);
+			sdio_release_host(aicdev->func[0]);
+			return ret;
+		}
+		msleep(1);
 		sdio_release_host(aicdev->func[0]);
-		return ret;
+#ifdef CONFIG_SDIO_F1_FLAG
 	}
-	msleep(1);
-	sdio_release_host(aicdev->func[0]);
+#endif
 #endif
 
 	if (rwnx_send_dbg_mem_read_req(aicdev, mem_addr, &rd_mem_addr_cfm))
diff --git a/drivers/net/wireless/aic8800/aic8800_bsp/aicsdio.c b/drivers/net/wireless/aic8800/aic8800_bsp/aicsdio.c
index 7098745cc7c7..2aea62f1e3ae 100644
--- a/drivers/net/wireless/aic8800/aic8800_bsp/aicsdio.c
+++ b/drivers/net/wireless/aic8800/aic8800_bsp/aicsdio.c
@@ -53,6 +53,10 @@ static struct priv_dev *sdiodev;
 static struct semaphore *aicbsp_notify_semaphore;
 static const struct sdio_device_id aicbsp_sdmmc_ids[];
 
+#ifdef CONFIG_SDIO_F1_FLAG
+extern bool sdio_f1_flag;
+#endif
+
 int aicbsp_device_init(void)
 {
 	return 0;
@@ -1244,6 +1248,7 @@ static void aicwf_sdio_hal_irqhandler(struct sdio_func *func)
 	u8 byte_len = 0;
 	struct sk_buff *pkt = NULL;
 	int ret;
+	int retry = 10;
 
 	if (!bus_if || bus_if->state == BUS_DOWN_ST) {
 		bsp_err("bus err\n");
@@ -1255,6 +1260,8 @@ static void aicwf_sdio_hal_irqhandler(struct sdio_func *func)
 		while (ret || (intstatus & SDIO_OTHER_INTERRUPT)) {
 			bsp_err("ret=%d, intstatus=%x\r\n", ret, intstatus);
 			ret = aicwf_sdio_readb(aicdev->func[0], aicdev->sdio_reg.block_cnt_reg, &intstatus);
+			if (retry-- <= 0)
+				break;
 		}
 		aicdev->rx_priv->data_len = intstatus * SDIOWIFI_FUNC_BLOCKSIZE;
 
@@ -1279,6 +1286,11 @@ static void aicwf_sdio_hal_irqhandler(struct sdio_func *func)
 				break;
 			}
 			bsp_err("ret=%d, intstatus=%x\r\n", ret, intstatus);
+			#ifdef CONFIG_SDIO_F1_FLAG
+			sdio_f1_flag = true;
+			#endif
+			if (retry-- <= 0)
+				break;
 		} while (1);
 		if (intstatus & SDIO_OTHER_INTERRUPT) {
 			u8 int_pending;
@@ -1595,12 +1607,19 @@ static int aicwf_sdiov3_func_init(struct priv_dev *aicdev)
 		sdio_release_host(aicdev->func[0]);
 		return ret;
 	}
-	sdio_f0_writeb(aicdev->func[0], 0x80, 0xF1, &ret);
-	if (ret) {
-		bsp_err("set iopad delay1 fail %d\n", ret);
-		sdio_release_host(aicdev->func[0]);
-		return ret;
+	#ifdef CONFIG_SDIO_F1_FLAG
+	if (sdio_f1_flag) {
+		bsp_err("func_init sdio_f1\n");
+	#endif
+		sdio_f0_writeb(aicdev->func[0], 0x80, 0xF1, &ret);
+		if (ret) {
+			bsp_err("set iopad delay1 fail %d\n", ret);
+			sdio_release_host(aicdev->func[0]);
+			return ret;
+		}
+	#ifdef CONFIG_SDIO_F1_FLAG
 	}
+	#endif
 	msleep(1);
 #if 1 // SDIO CLOCK SETTING
 	if ((feature.sdio_clock > 0) && (host->ios.timing != MMC_TIMING_UHS_DDR50)) {
-- 
2.47.0

