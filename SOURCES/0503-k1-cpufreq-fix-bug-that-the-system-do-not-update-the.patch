From d9b3bd2d477c87e3152fc12fb78f64a464d88bb7 Mon Sep 17 00:00:00 2001
From: Nell <xianbin.zhu@spacemit.com>
Date: Fri, 22 Mar 2024 10:49:58 +0800
Subject: [PATCH 0503/1202] k1:cpufreq: fix bug that the system do not update
 the cpu voltage before update the cpu frequency

Change-Id: I284cb700bc7b6328c4f51abfec40e813f0342d34
---
 drivers/cpufreq/spacemit-cpufreq.c | 24 +++++++++++++++---------
 1 file changed, 15 insertions(+), 9 deletions(-)

diff --git a/drivers/cpufreq/spacemit-cpufreq.c b/drivers/cpufreq/spacemit-cpufreq.c
index cd9d29c3878d..3da356a9f106 100644
--- a/drivers/cpufreq/spacemit-cpufreq.c
+++ b/drivers/cpufreq/spacemit-cpufreq.c
@@ -9,22 +9,22 @@
 #include <linux/pm_qos.h>
 #include <linux/notifier.h>
 #include <linux/regulator/consumer.h>
+#include <linux/mutex.h>
 #include "../opp/opp.h"
 
 struct per_device_qos {
 	struct regulator *regulator;
 	struct freq_qos_request qos;
-	struct notifier_block notifier;
 };
 
+static DEFINE_MUTEX(regulator_mutex);
+static struct notifier_block vol_constraints_notifier;
 static struct freq_constraints vol_constraints;
 static struct per_device_qos *vol_qos[CONFIG_NR_CPUS];
 
 static int spacemit_vol_qos_notifier_call(struct notifier_block *nb, unsigned long action, void *data)
 {
-	struct per_device_qos *per_qos = container_of(nb, struct per_device_qos, notifier);
-
-	regulator_set_voltage(per_qos->regulator, action * 1000, action * 1000);
+	regulator_set_voltage(vol_qos[0]->regulator, action * 1000, action * 1000);
 
 	return 0;
 }
@@ -73,12 +73,10 @@ static int spacemit_policy_notifier(struct notifier_block *nb,
 		vol_qos[cpu]->regulator = vol_qos[0]->regulator;
 	}
 
-	vol_qos[cpu]->notifier.notifier_call = spacemit_vol_qos_notifier_call;
-	freq_qos_add_notifier(&vol_constraints, FREQ_QOS_MIN, &vol_qos[cpu]->notifier);
-
 	if (vol_qos[cpu]->regulator)
 		freq_qos_add_request(&vol_constraints, &vol_qos[cpu]->qos, FREQ_QOS_MIN,
 				regulator_get_voltage(vol_qos[cpu]->regulator) / 1000);
+
 	return 0;
 }
 
@@ -115,8 +113,11 @@ static int spacemit_processor_notifier(struct notifier_block *nb,
 
 		if (freqs->new > freqs->old) {
 			/* increase voltage first */
-			if (vol_qos[cpu]->regulator)
+			if (vol_qos[cpu]->regulator) {
+				mutex_lock(&regulator_mutex);
 				freq_qos_update_request(&vol_qos[cpu]->qos, microvol / 1000);
+				mutex_unlock(&regulator_mutex);
+			}
 		}
 
 		/**
@@ -156,8 +157,11 @@ static int spacemit_processor_notifier(struct notifier_block *nb,
 
 		if (freqs->new < freqs->old) {
 			/* decrease the voltage last */
-			if (vol_qos[cpu]->regulator)
+			if (vol_qos[cpu]->regulator) {
+				mutex_lock(&regulator_mutex);
 				freq_qos_update_request(&vol_qos[cpu]->qos, microvol / 1000);
+				mutex_unlock(&regulator_mutex);
+			}
 		}
 	}
 
@@ -190,7 +194,9 @@ static int __init spacemit_processor_driver_init(void)
                return -EINVAL;
        }
 
+       vol_constraints_notifier.notifier_call = spacemit_vol_qos_notifier_call;
        freq_constraints_init(&vol_constraints);
+       freq_qos_add_notifier(&vol_constraints, FREQ_QOS_MIN, &vol_constraints_notifier);
 
        return 0;
 }
-- 
2.47.0

