From 39dd82f625311b909631345c6c9bd55bb2534f60 Mon Sep 17 00:00:00 2001
From: zhenglilang <lilang.zheng@spacemit.com>
Date: Tue, 31 Dec 2024 17:45:15 +0800
Subject: [PATCH 1424/1451] k1:display: resolve the issue of HDMI reading EDID
 getting stuck in an infinite loop

Change-Id: I96e22dcd3c96c9e1ae9c58f6f8fd5ed764c792cc
---
 drivers/gpu/drm/spacemit/spacemit_hdmi.c | 25 +++++++++++++++++++-----
 1 file changed, 20 insertions(+), 5 deletions(-)

diff --git a/drivers/gpu/drm/spacemit/spacemit_hdmi.c b/drivers/gpu/drm/spacemit/spacemit_hdmi.c
index 7df7bfd4995b..e42948cd27c1 100644
--- a/drivers/gpu/drm/spacemit/spacemit_hdmi.c
+++ b/drivers/gpu/drm/spacemit/spacemit_hdmi.c
@@ -359,12 +359,12 @@ static void hdmi_i2c_timing(struct spacemit_hdmi *hdmi)
 	DRM_DEBUG("%s() hdmi 0x18 #2 0x%x\n", __func__, reg);
 }
 
-static void hdmi_i2c_read(struct spacemit_hdmi *hdmi, uint8_t addr, uint8_t* message, uint32_t length)
+static int hdmi_i2c_read(struct spacemit_hdmi *hdmi, uint8_t addr, uint8_t* message, uint32_t length)
 {
 	int i, count = 0, left = length;
 	uint8_t *pvalue = message;
 	uint32_t value;
-	uint32_t reg, num;
+	uint32_t reg, num, status;
 	int timeout = 1000;
 
 	DRM_DEBUG("hdmi_i2c_read ++%u\r\n", length);
@@ -384,6 +384,11 @@ static void hdmi_i2c_read(struct spacemit_hdmi *hdmi, uint8_t addr, uint8_t* mes
 
 		while(num < count){
 			reg = hdmi_readb(hdmi, 0xC);
+			status = reg & SPACEMIT_HDMI_HPD_STATUS;
+			if(!status){
+				DRM_INFO("hdmi disconnected while read edid\n");
+				return -1;
+			}
 			num = (reg & 0x1f0) >> 4;
 		}
 
@@ -413,7 +418,7 @@ static void hdmi_i2c_read(struct spacemit_hdmi *hdmi, uint8_t addr, uint8_t* mes
 
 	DRM_DEBUG("hdmi_i2c_read --%u\r\n", length);
 
-	return;
+	return 0;
 }
 
 static int hdmi_i2c_write(struct spacemit_hdmi *hdmi, uint8_t addr, uint8_t* message, uint32_t length)
@@ -480,7 +485,9 @@ int edid_read (struct spacemit_hdmi *hdmi){
 		result = hdmi_i2c_write(hdmi, 0x50, &offset, 1);
 		if (result < 0)
 			break;
-		hdmi_i2c_read(hdmi, 0x50, hdmi_data->edid + offset, 16);
+		result = hdmi_i2c_read(hdmi, 0x50, hdmi_data->edid + offset, 16);
+		if (result < 0)
+			break;
 	}
 
 	if (result < 0) {
@@ -496,10 +503,18 @@ int edid_read (struct spacemit_hdmi *hdmi){
 			result = hdmi_i2c_write(hdmi, 0x50, &offset, 1);
 			if (result < 0)
 				break;
-			hdmi_i2c_read(hdmi, 0x50, hdmi_data->edid + offset, 16);
+			result = hdmi_i2c_read(hdmi, 0x50, hdmi_data->edid + offset, 16);
+			if (result < 0)
+				break;
 		}
 	}
 
+	if (result < 0) {
+		// memset(hdmi_data->edid, 0x00, EDID_LENGTH);
+		memset(hdmi_data->edid, 0x00, 256);
+		return result;
+	}
+
 	for(i = 0; i < 256; i += 8){
 		DRM_DEBUG("EDID 0x%x: 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x\r\n", i,
 			hdmi_data->edid[i], hdmi_data->edid[i+1], hdmi_data->edid[i+2], hdmi_data->edid[i+3],
-- 
2.47.0

