From 2d9e9d7d703a365c44c17f2251eec9497f331664 Mon Sep 17 00:00:00 2001
From: Nell <xianbin.zhu@spacemit.com>
Date: Wed, 7 Aug 2024 20:51:15 +0800
Subject: [PATCH 0899/1204] k1:pm:rproc: put the de-assert of rproc's clock
 into wake callback function

between prepare_late and syscore_ops system calls, the system sleep process may
be interrupted by the wake-up source, if this accurs, the system may fail to start
rcpu during the wake-up process due to the failure to reset the rproc module

Change-Id: I9a23ac3a741409270b4f95df38845708c56856ca
---
 drivers/remoteproc/k1x-rproc.c | 31 +++++--------------------------
 1 file changed, 5 insertions(+), 26 deletions(-)

diff --git a/drivers/remoteproc/k1x-rproc.c b/drivers/remoteproc/k1x-rproc.c
index 6512bace3fbc..c878912c3f56 100644
--- a/drivers/remoteproc/k1x-rproc.c
+++ b/drivers/remoteproc/k1x-rproc.c
@@ -52,7 +52,6 @@
 #define DEV_PM_QOS_DEFAULT             7
 
 struct dev_pm_qos_request greq;
-struct reset_control *gcore_reset;
 
 struct spacemit_mbox {
 	const char name[10];
@@ -383,24 +382,6 @@ static struct rpmsg_driver rpmsg_rcpu_pm_client = {
 
 module_rpmsg_driver(rpmsg_rcpu_pm_client);
 
-static int rproc_syscore_suspend(void)
-{
-	/* reset the rcpu */
-	reset_control_assert(gcore_reset);
-
-	return 0;
-}
-
-static void rproc_syscore_resume(void)
-{
-	reset_control_deassert(gcore_reset);
-}
-
-static struct syscore_ops rproc_syscore_ops = {
-	.suspend = rproc_syscore_suspend,
-	.resume = rproc_syscore_resume,
-};
-
 #define RCPU_ENTER_LOW_PWR_MODE		"$"
 
 static int rproc_platform_late(void)
@@ -462,6 +443,10 @@ static void rproc_platfrom_wake(void)
 	rproc = dev_get_drvdata(&pdev->dev);
 	srproc = rproc->priv;
 
+	/* de-assert the clk */
+	reset_control_assert(srproc->core_rst);
+	reset_control_deassert(srproc->core_rst);
+
 	genpd = pd_to_genpd(pdev->dev.pm_domain);
 	/* enable the clk & power-switch */
 	genpd->domain.ops.resume_noirq(&pdev->dev);
@@ -540,10 +525,8 @@ static int spacemit_rproc_probe(struct platform_device *pdev)
 	struct rproc *rproc;
 
 	ret = rproc_of_parse_firmware(dev, 0, &fw_name);
-	if (ret < 0 && ret != -EINVAL) {
-		dev_err(dev, "failed to get fw_name: %s\n", fw_name);
+	if (ret < 0 && ret != -EINVAL)
 		return ret;
-	}
 
 	rproc = devm_rproc_alloc(dev, np->name, &spacemit_rproc_ops,
 				fw_name, sizeof(*priv));
@@ -574,8 +557,6 @@ static int spacemit_rproc_probe(struct platform_device *pdev)
 		return ret;
 	}
 
-	gcore_reset = priv->core_rst;
-
 	priv->core_clk = devm_clk_get(dev, "core");
 	if (IS_ERR(priv->core_clk)) {
 		ret = PTR_ERR(priv->core_clk);
@@ -616,8 +597,6 @@ static int spacemit_rproc_probe(struct platform_device *pdev)
 #ifdef CONFIG_PM_SLEEP
 	rpmsg_rcpu_pwr_management_id_table[0].driver_data = (unsigned long long)pdev;
 
-	register_syscore_ops(&rproc_syscore_ops);
-
 	register_platform_pm_ops(&rproc_platform_pm_ops);
 #endif
 
-- 
2.47.0

