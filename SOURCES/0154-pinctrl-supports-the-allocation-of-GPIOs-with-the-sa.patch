From d8cb55853d5d19782133fd7e360df9b8cd159733 Mon Sep 17 00:00:00 2001
From: huzhen <george.hu@spacemit.com>
Date: Mon, 20 Nov 2023 10:23:54 +0800
Subject: [PATCH 0154/1206] pinctrl: supports the allocation of GPIOs with the
 same configuration through pinctrl

  1. pinctrl driver is loaded before gpio driver
  2. The gpio driver implements the interfaces of request and free
  3. Define pin id macro

Change-Id: I278245d1ce7b559c20f1134cdf750c0abd41c2fd
---
 drivers/gpio/gpio-k1x.c                    |   5 +-
 drivers/pinctrl/pinctrl-single.c           |  14 ++
 include/dt-bindings/pinctrl/k1-x-pinctrl.h | 274 ++++++++++-----------
 3 files changed, 154 insertions(+), 139 deletions(-)

diff --git a/drivers/gpio/gpio-k1x.c b/drivers/gpio/gpio-k1x.c
index 37c2bf3e6748..ab12b847fea1 100644
--- a/drivers/gpio/gpio-k1x.c
+++ b/drivers/gpio/gpio-k1x.c
@@ -346,7 +346,6 @@ static int k1x_gpio_probe(struct platform_device *pdev)
 	k1x_chip->reg_base = base;
 
 	ret = k1x_gpio_probe_dt(pdev, k1x_chip);
-
 	if (ret) {
 		dev_err(dev, "Fail to initialize gpio unit, error %d.\n", ret);
 		return ret;
@@ -376,6 +375,8 @@ static int k1x_gpio_probe(struct platform_device *pdev)
 
 	/* Initialize the gpio chip */
 	k1x_chip->chip.label = "k1x-gpio";
+	k1x_chip->chip.request = gpiochip_generic_request;
+	k1x_chip->chip.free = gpiochip_generic_free;
 	k1x_chip->chip.direction_input  = k1x_gpio_direction_input;
 	k1x_chip->chip.direction_output = k1x_gpio_direction_output;
 	k1x_chip->chip.get = k1x_gpio_get;
@@ -424,4 +425,4 @@ static int __init k1x_gpio_init(void)
 {
 	return platform_driver_register(&k1x_gpio_driver);
 }
-postcore_initcall(k1x_gpio_init);
+subsys_initcall(k1x_gpio_init);
diff --git a/drivers/pinctrl/pinctrl-single.c b/drivers/pinctrl/pinctrl-single.c
index 5be14dc979e2..f1916ac1f557 100644
--- a/drivers/pinctrl/pinctrl-single.c
+++ b/drivers/pinctrl/pinctrl-single.c
@@ -1990,7 +1990,21 @@ static struct platform_driver pcs_driver = {
 	},
 };
 
+#ifdef CONFIG_SOC_SPACEMIT
+static int __init pcs_driver_init(void)
+{
+	return platform_driver_register(&pcs_driver);
+}
+postcore_initcall(pcs_driver_init);
+
+static void __exit pcs_driver_exit(void)
+{
+	platform_driver_unregister(&pcs_driver);
+}
+module_exit(pcs_driver_exit);
+#else
 module_platform_driver(pcs_driver);
+#endif
 
 MODULE_AUTHOR("Tony Lindgren <tony@atomide.com>");
 MODULE_DESCRIPTION("One-register-per-pin type device tree based pinctrl driver");
diff --git a/include/dt-bindings/pinctrl/k1-x-pinctrl.h b/include/dt-bindings/pinctrl/k1-x-pinctrl.h
index aa92d7a96d89..90d0ec2caf4a 100644
--- a/include/dt-bindings/pinctrl/k1-x-pinctrl.h
+++ b/include/dt-bindings/pinctrl/k1-x-pinctrl.h
@@ -4,142 +4,142 @@
 #define __DT_BINDINGS_K1X_PINCTRL_H
 
 /* pin offset */
-#define PIN_OFFSET(x)	((x) * 4)
-
-#define GPIO_00  PIN_OFFSET(1)
-#define GPIO_01  PIN_OFFSET(2)
-#define GPIO_02  PIN_OFFSET(3)
-#define GPIO_03  PIN_OFFSET(4)
-#define GPIO_04  PIN_OFFSET(5)
-#define GPIO_05  PIN_OFFSET(6)
-#define GPIO_06  PIN_OFFSET(7)
-#define GPIO_07  PIN_OFFSET(8)
-#define GPIO_08  PIN_OFFSET(9)
-#define GPIO_09  PIN_OFFSET(10)
-#define GPIO_10  PIN_OFFSET(11)
-#define GPIO_11  PIN_OFFSET(12)
-#define GPIO_12  PIN_OFFSET(13)
-#define GPIO_13  PIN_OFFSET(14)
-#define GPIO_14  PIN_OFFSET(15)
-#define GPIO_15  PIN_OFFSET(16)
-#define GPIO_16  PIN_OFFSET(17)
-#define GPIO_17  PIN_OFFSET(18)
-#define GPIO_18  PIN_OFFSET(19)
-#define GPIO_19  PIN_OFFSET(20)
-#define GPIO_20  PIN_OFFSET(21)
-#define GPIO_21  PIN_OFFSET(22)
-#define GPIO_22  PIN_OFFSET(23)
-#define GPIO_23  PIN_OFFSET(24)
-#define GPIO_24  PIN_OFFSET(25)
-#define GPIO_25  PIN_OFFSET(26)
-#define GPIO_26  PIN_OFFSET(27)
-#define GPIO_27  PIN_OFFSET(28)
-#define GPIO_28  PIN_OFFSET(29)
-#define GPIO_29  PIN_OFFSET(30)
-#define GPIO_30  PIN_OFFSET(31)
-#define GPIO_31  PIN_OFFSET(32)
-
-#define GPIO_32  PIN_OFFSET(33)
-#define GPIO_33  PIN_OFFSET(34)
-#define GPIO_34  PIN_OFFSET(35)
-#define GPIO_35  PIN_OFFSET(36)
-#define GPIO_36  PIN_OFFSET(37)
-#define GPIO_37  PIN_OFFSET(38)
-#define GPIO_38  PIN_OFFSET(39)
-#define GPIO_39  PIN_OFFSET(40)
-#define GPIO_40  PIN_OFFSET(41)
-#define GPIO_41  PIN_OFFSET(42)
-#define GPIO_42  PIN_OFFSET(43)
-#define GPIO_43  PIN_OFFSET(44)
-#define GPIO_44  PIN_OFFSET(45)
-#define GPIO_45  PIN_OFFSET(46)
-#define GPIO_46  PIN_OFFSET(47)
-#define GPIO_47  PIN_OFFSET(48)
-#define GPIO_48  PIN_OFFSET(49)
-#define GPIO_49  PIN_OFFSET(50)
-#define GPIO_50  PIN_OFFSET(51)
-#define GPIO_51  PIN_OFFSET(52)
-#define GPIO_52  PIN_OFFSET(53)
-#define GPIO_53  PIN_OFFSET(54)
-#define GPIO_54  PIN_OFFSET(55)
-#define GPIO_55  PIN_OFFSET(56)
-#define GPIO_56  PIN_OFFSET(57)
-#define GPIO_57  PIN_OFFSET(58)
-#define GPIO_58  PIN_OFFSET(59)
-#define GPIO_59  PIN_OFFSET(60)
-#define GPIO_60  PIN_OFFSET(61)
-#define GPIO_61  PIN_OFFSET(62)
-#define GPIO_62  PIN_OFFSET(63)
-#define GPIO_63  PIN_OFFSET(64)
-
-#define GPIO_64  PIN_OFFSET(65)
-#define GPIO_65  PIN_OFFSET(66)
-#define GPIO_66  PIN_OFFSET(67)
-#define GPIO_67  PIN_OFFSET(68)
-#define GPIO_68  PIN_OFFSET(69)
-#define GPIO_69  PIN_OFFSET(70)
-#define PRI_TDI  PIN_OFFSET(71)
-#define PRI_TMS  PIN_OFFSET(72)
-#define PRI_TCK  PIN_OFFSET(73)
-#define PRI_TDO  PIN_OFFSET(74)
-#define GPIO_74  PIN_OFFSET(75)
-#define GPIO_75  PIN_OFFSET(76)
-#define GPIO_76  PIN_OFFSET(77)
-#define GPIO_77  PIN_OFFSET(78)
-#define GPIO_78  PIN_OFFSET(79)
-#define GPIO_79  PIN_OFFSET(80)
-#define GPIO_80  PIN_OFFSET(81)
-#define GPIO_81  PIN_OFFSET(82)
-#define GPIO_82  PIN_OFFSET(83)
-#define GPIO_83  PIN_OFFSET(84)
-#define GPIO_84  PIN_OFFSET(85)
-#define GPIO_85  PIN_OFFSET(86)
-
-#define QSPI_DAT0   PIN_OFFSET(90)
-#define QSPI_DAT1   PIN_OFFSET(91)
-#define QSPI_DAT2   PIN_OFFSET(92)
-#define QSPI_DAT3   PIN_OFFSET(93)
-#define QSPI_CSI    PIN_OFFSET(94)
-#define QSPI_CLK    PIN_OFFSET(95)
-
-#define MMC1_DAT3   PIN_OFFSET(110)
-#define MMC1_DAT2   PIN_OFFSET(111)
-#define MMC1_DAT1   PIN_OFFSET(112)
-#define MMC1_DAT0   PIN_OFFSET(113)
-#define MMC1_CMD    PIN_OFFSET(114)
-#define MMC1_CLK    PIN_OFFSET(115)
-#define GPIO_110    PIN_OFFSET(116)
-#define PWR_SCL     PIN_OFFSET(117)
-#define PWR_SDA     PIN_OFFSET(118)
-#define VCXO_EN     PIN_OFFSET(119)
-#define DVL0        PIN_OFFSET(120)
-#define DVL1        PIN_OFFSET(121)
-#define PMIC_INT_N  PIN_OFFSET(122)
-#define GPIO_86     PIN_OFFSET(123)
-#define GPIO_87     PIN_OFFSET(124)
-#define GPIO_88     PIN_OFFSET(125)
-#define GPIO_89     PIN_OFFSET(126)
-#define GPIO_90     PIN_OFFSET(127)
-#define GPIO_91     PIN_OFFSET(128)
-#define GPIO_92     PIN_OFFSET(129)
-
-#define GPIO_111    PIN_OFFSET(131)
-#define GPIO_112    PIN_OFFSET(132)
-#define GPIO_113    PIN_OFFSET(133)
-#define GPIO_114    PIN_OFFSET(134)
-#define GPIO_115    PIN_OFFSET(135)
-#define GPIO_116    PIN_OFFSET(136)
-#define GPIO_117    PIN_OFFSET(137)
-#define GPIO_118    PIN_OFFSET(138)
-#define GPIO_119    PIN_OFFSET(139)
-#define GPIO_120    PIN_OFFSET(140)
-#define GPIO_121    PIN_OFFSET(141)
-#define GPIO_122    PIN_OFFSET(142)
-#define GPIO_123    PIN_OFFSET(143)
-#define GPIO_124    PIN_OFFSET(144)
-#define GPIO_125    PIN_OFFSET(145)
-#define GPIO_126    PIN_OFFSET(146)
-#define GPIO_127    PIN_OFFSET(147)
+#define PINID(x)	((x) + 1)
+
+#define GPIO_00  PINID(0)
+#define GPIO_01  PINID(1)
+#define GPIO_02  PINID(2)
+#define GPIO_03  PINID(3)
+#define GPIO_04  PINID(4)
+#define GPIO_05  PINID(5)
+#define GPIO_06  PINID(6)
+#define GPIO_07  PINID(7)
+#define GPIO_08  PINID(8)
+#define GPIO_09  PINID(9)
+#define GPIO_10  PINID(10)
+#define GPIO_11  PINID(11)
+#define GPIO_12  PINID(12)
+#define GPIO_13  PINID(13)
+#define GPIO_14  PINID(14)
+#define GPIO_15  PINID(15)
+#define GPIO_16  PINID(16)
+#define GPIO_17  PINID(17)
+#define GPIO_18  PINID(18)
+#define GPIO_19  PINID(19)
+#define GPIO_20  PINID(20)
+#define GPIO_21  PINID(21)
+#define GPIO_22  PINID(22)
+#define GPIO_23  PINID(23)
+#define GPIO_24  PINID(24)
+#define GPIO_25  PINID(25)
+#define GPIO_26  PINID(26)
+#define GPIO_27  PINID(27)
+#define GPIO_28  PINID(28)
+#define GPIO_29  PINID(29)
+#define GPIO_30  PINID(30)
+#define GPIO_31  PINID(31)
+
+#define GPIO_32  PINID(32)
+#define GPIO_33  PINID(33)
+#define GPIO_34  PINID(34)
+#define GPIO_35  PINID(35)
+#define GPIO_36  PINID(36)
+#define GPIO_37  PINID(37)
+#define GPIO_38  PINID(38)
+#define GPIO_39  PINID(39)
+#define GPIO_40  PINID(40)
+#define GPIO_41  PINID(41)
+#define GPIO_42  PINID(42)
+#define GPIO_43  PINID(43)
+#define GPIO_44  PINID(44)
+#define GPIO_45  PINID(45)
+#define GPIO_46  PINID(46)
+#define GPIO_47  PINID(47)
+#define GPIO_48  PINID(48)
+#define GPIO_49  PINID(49)
+#define GPIO_50  PINID(50)
+#define GPIO_51  PINID(51)
+#define GPIO_52  PINID(52)
+#define GPIO_53  PINID(53)
+#define GPIO_54  PINID(54)
+#define GPIO_55  PINID(55)
+#define GPIO_56  PINID(56)
+#define GPIO_57  PINID(57)
+#define GPIO_58  PINID(58)
+#define GPIO_59  PINID(59)
+#define GPIO_60  PINID(60)
+#define GPIO_61  PINID(61)
+#define GPIO_62  PINID(62)
+#define GPIO_63  PINID(63)
+
+#define GPIO_64  PINID(64)
+#define GPIO_65  PINID(65)
+#define GPIO_66  PINID(66)
+#define GPIO_67  PINID(67)
+#define GPIO_68  PINID(68)
+#define GPIO_69  PINID(69)
+#define PRI_TDI  PINID(70)
+#define PRI_TMS  PINID(71)
+#define PRI_TCK  PINID(72)
+#define PRI_TDO  PINID(73)
+#define GPIO_74  PINID(74)
+#define GPIO_75  PINID(75)
+#define GPIO_76  PINID(76)
+#define GPIO_77  PINID(77)
+#define GPIO_78  PINID(78)
+#define GPIO_79  PINID(79)
+#define GPIO_80  PINID(80)
+#define GPIO_81  PINID(81)
+#define GPIO_82  PINID(82)
+#define GPIO_83  PINID(83)
+#define GPIO_84  PINID(84)
+#define GPIO_85  PINID(85)
+
+#define QSPI_DAT0   PINID(89)
+#define QSPI_DAT1   PINID(90)
+#define QSPI_DAT2   PINID(91)
+#define QSPI_DAT3   PINID(92)
+#define QSPI_CSI    PINID(93)
+#define QSPI_CLK    PINID(94)
+
+#define MMC1_DAT3   PINID(109)
+#define MMC1_DAT2   PINID(110)
+#define MMC1_DAT1   PINID(111)
+#define MMC1_DAT0   PINID(112)
+#define MMC1_CMD    PINID(113)
+#define MMC1_CLK    PINID(114)
+#define GPIO_110    PINID(115)
+#define PWR_SCL     PINID(116)
+#define PWR_SDA     PINID(117)
+#define VCXO_EN     PINID(118)
+#define DVL0        PINID(119)
+#define DVL1        PINID(120)
+#define PMIC_INT_N  PINID(121)
+#define GPIO_86     PINID(122)
+#define GPIO_87     PINID(123)
+#define GPIO_88     PINID(124)
+#define GPIO_89     PINID(125)
+#define GPIO_90     PINID(126)
+#define GPIO_91     PINID(127)
+#define GPIO_92     PINID(128)
+
+#define GPIO_111    PINID(130)
+#define GPIO_112    PINID(131)
+#define GPIO_113    PINID(132)
+#define GPIO_114    PINID(133)
+#define GPIO_115    PINID(134)
+#define GPIO_116    PINID(135)
+#define GPIO_117    PINID(136)
+#define GPIO_118    PINID(137)
+#define GPIO_119    PINID(138)
+#define GPIO_120    PINID(139)
+#define GPIO_121    PINID(140)
+#define GPIO_122    PINID(141)
+#define GPIO_123    PINID(142)
+#define GPIO_124    PINID(143)
+#define GPIO_125    PINID(144)
+#define GPIO_126    PINID(145)
+#define GPIO_127    PINID(146)
 
 /* pin mux */
 #define MUX_MODE0       0
@@ -193,6 +193,6 @@
 #define PULL_UP         (6 << 13)     /* bit[15:13] 110 */
 #define PULL_DOWN       (5 << 13)     /* bit[15:13] 101 */
 
-#define K1X_PADCONF(offset, conf, mux)	(offset) (conf) (mux)
+#define K1X_PADCONF(pinid, conf, mux)	((pinid) * 4) (conf) (mux)
 
 #endif /* __DT_BINDINGS_K1PRO_PINCTRL_H */
-- 
2.47.0

